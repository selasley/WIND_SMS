$!
$! Procedure to create new WIND_LIB library from source code
$!
$ fflags := /EXTEND/LIST/SHOW=ALL/ALIGN=(COMMON=PACK,RECORD=PACK)/WARN=NOALIGN
$
$ write sys$output "Creating new WIND_LIB.OLB"
$ LIBR /CREATE WIND_LIB.OLB
$ CALL FOR_COMPILE CNVRT_HRMNSMS_TO_MILLIS
$ CALL FOR_COMPILE CNVRT_MILLIS_TO_HRMNSMS
$ CALL FOR_COMPILE CNVRT_TO_FLOAT_JULIAN
$ CALL FOR_COMPILE CNVRT_YRDY_TO_YRMNDY
$ CALL FOR_COMPILE CNVRT_YRMONDAY_TO_JULIAN
$ CALL FOR_COMPILE CNVRT_YRMONDAY_TO_YEARDAY
$ CALL FOR_COMPILE CNVRT_T_YRMONDAY_TO_YEARDAY
$ CALL FOR_COMPILE JULIAN_TO_GREGORIAN
$ CALL FOR_COMPILE SELECT_FILE
$ CALL FOR_COMPILE SCAN_ZERO_PHA
$ CALL FOR_COMPILE WIND_COMPRESS
$ CALL FOR_COMPILE WIND_EPOCH_TO_GREG
$ CALL FOR_COMPILE WIND_EPOCH_TO_JULIAN
$ CALL FOR_COMPILE WIND_FORMAT_TIME
$ CALL FOR_COMPILE WIND_GET_FILENAME
$ CALL FOR_COMPILE WIND_GET_LZ_TIMES
$ CALL FOR_COMPILE WIND_GREG_TO_EPOCH
$ CALL FOR_COMPILE WIND_JULIAN_TO_EPOCH
$ CALL FOR_COMPILE WIND_OPEN_LZ_DATA
$ CALL FOR_COMPILE WIND_PB5_TO_EPOCH
$
$FOR_COMPILE: SUBROUTINE
$ write sys$output "Compiling ",p1
$ on error then exit 1
$ FORTRAN 'p1'.FOR 'fflags'
$ LIBR /INSERT WIND_LIB.OLB 'p1'.OBJ
$ exit 1
$ENDSUBROUTINE
