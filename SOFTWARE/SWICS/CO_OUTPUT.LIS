CO_OUTPUT                       Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 1
                                                                 9-OCT-2002 20:01:06  SMS1:[WIND.SOFTWARE.SWICS]CO_OUTPUT.FOR;57

	      1         PROGRAM CO_OUTPUT
	      2 C**************************************************************************
	      3 C       this subroutine increments boxes for C, O, C6, C5, O6, O7, and 
	      4 C       calculates/outputs ionization temperatures and C/O at appropriate
	      5 C       time intervals.
	      6 C
	      7 C       written by cmsc, 4 Jan 1996
	      8 C
	      9 C       Alterations
	     10 C         added restriction on processing for paps to be > 20 kV   2/1/96
	     11 C         added data quality flags and post gap flags              5/9/96
	     12 C	  write out error amounts for velocity, ratio, temps       6/14/96
	     13 C	  remove MOD from WRITE(30,xxx) to print 4-digit year,	   1/14/2000
	     14 C	  fix bug in leap year logic
	     15 C	  change call to DATE to DATE_AND_TIME for Y2K fix	   1/19/2000
	     16 C**************************************************************************
	     17 C                            *Declarations*
	     18         IMPLICIT NONE
	     19 C
	     20 C                                      necessities for data
	     21         INCLUDE 'INC_DIR:EDBDEF.INC/NOLIST'
	    559         INCLUDE 'INC_DIR:L1FMT.INC/NOLIST'
	    691         INCLUDE '($RMSDEF)'
	    692 C
	    693 !*** MODULE $RMSDEF ***
	    694 !DEC$ OPTIONS/ALIGN=(RECORDS=PACKED,COMMONS=PACKED)
	    695  ! 
	    696  !  This SDL File Generated by VAX-11 Message V04-00 on 29-NOV-1995 18:46:08.43
	    697  ! 
	    698  ! 	.TITLE	RMSMSG -RMS COMPLETION CODES
	    699  !  *************************************************************************
	    700  !  *                                                                       *
	    701  !  * COPYRIGHT (C) DIGITAL EQUIPMENT CORPORATION, 1976, 1977, 1978, 1979,  *
	    702  !  * 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990,     *
	    703  !  * 1991,1992                                                             *
	    704  !  * ALL RIGHTS RESERVED.                                                  *
	    705  !  * UNPUBLISHED RIGHTS RESERVED UNDER THE COPYRIGHT LAWS  OF  THE  UNITED *
	    706  !  * STATES.                                                               *
	    707  !  *                                                                       *
	    708  !  * THE SOFTWARE CONTAINED ON THIS MEDIA IS PROPRIETARY TO  AND  EMBODIES *
	    709  !  * THE   CONFIDENTIAL   TECHNOLOGY  OF  DIGITAL  EQUIPMENT  CORPORATION. *
	    710  !  * POSSESSION, USE, DUPLICATION OR DISSEMINATION  OF  THE  SOFTWARE  AND *
	    711  !  * MEDIA  IS  AUTHORIZED  ONLY  PURSUANT TO A VALID WRITTEN LICENSE FROM *
	    712  !  * DIGITAL EQUIPMENT CORPORATION.                                        *
	    713  !  *                                                                       *
	    714  !  * RESTRICTED RIGHTS LEGEND USE, DUPLICATION, OR DISCLOSURE BY THE  U.S. *
	    715  !  * GOVERNMENT  IS  SUBJECT  TO RESTRICTIONS AS SET FORTH IN SUBPARAGRAPH *
	    716  !  * (C)(1)(II) OF DFARS 252.227-7013, OR IN FAR 52.227-19, AS APPLICABLE. *
	    717  !  *                                                                       *
	    718  !  *************************************************************************
	    719  ! ++
	    720  !  FACILITY: RMS
	    721  ! 
	    722  !  ABSTRACT:
	    723  ! 
	    724  ! 	THIS MODULE DEFINES ALL RMS COMPLETION CODES.
	    725  ! 

CO_OUTPUT                       Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 2
                                                                 9-OCT-2002 20:01:06  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	    726  !  ENVIRONMENT:
	    727  ! 
	    728  ! 	THE MESSAGE TRANSLATOR MUST BE USED TO CONVERT RMSMSG.MSG INTO
	    729  ! 	RMSMSG.SDL.  THE SDL TRANSLATOR MUST THEN BE USED TO CONVERT
	    730  ! 	RMSMSG.SDL INTO RMSMSG.MAR (AND RMSMSG.B32).
	    731  ! 
	    732  !  AUTHOR: LEO F. LAVERDURE,	CREATION DATE:  10-DEC-1976
	    733  ! 
	    734  !  MODIFIED BY:
	    735  ! 
	    736  ! 	X-7	EMW	    ELINOR M. WOODS	       10-AUG-1994
	    737  ! 		MERGE IN OPENVMS VAX DRAGON CHANGE:
	    738  ! 
	    739  ! 		X-13  EMW0023	ELINOR M. WOODS		04-AUG-1994
	    740  ! 		RMS$_KRF CAN BE RETURNED BY $CONNECT OR $REWIND, AS
	    741  ! 		WELL AS $GET/$FIND.  MAKE TEXT ASSOCIATED WITH KRF
	    742  ! 		STATUS MORE GENERIC BY REMOVING "for $GET/$FIND."
	    743  ! 
	    744  !        X-6     EMW		ELINOR M. WOODS		30-JUN-1994
	    745  ! 		MERGE IN OPENVMS VAX DRAGON CHANGE:
	    746  ! 
	    747  ! 		X-12   EMW0026   ELINOR M. WOODS	15-JUN-1994
	    748  ! 		ADD ONE NEW USER-REPORTABLE STATUS:  NXR 
	    749  ! 		<nonexistent record>.  THIS STATUS VALUE IS USED 
	    750  ! 		AS AN STV ASSOCIATED WITH RNF STATUS (STS), AND IS
	    751  ! 		REPORTED FOR AN EXACT KEY MATCH OF A SECONDARY KEY
	    752  ! 		IF THE SECONDARY KEY ENTRY POINTS TO A NONEXISTENT
	    753  ! 		PRIMARY DATA RECORD IN DISK FILE.  NOTE:  RNF ERROR 
	    754  ! 		STATUS PRE-EXISTED AS ERROR CODE WITHOUT STV.
	    755  ! 
	    756  !                DEE RYAN                                30-SEP-1993
	    757  !                CORRECTED USE OF DIGITAL PRODUCT NAMES.
	    758  ! 
	    759  ! 	X-5	EMW		ELINOR M. WOODS		28-SEP-1993
	    760  ! 		MERGE IN OPENVMS VAX CORAL FIX:
	    761  ! 
	    762  ! 		X-10	EMW0019  ELINOR M. WOODS  	21-SEP-1993
	    763  ! 		ADD ONE NEW USER-REPORTABLE ERROR STATUS (WITH AN
	    764  ! 		ASSOCIATED STV): NETBTS.  RELOCATE NEW IDXSEARCH STATUS
	    765  ! 		(SEE X-9) FROM "ERROR with STV" SECTION TO "ERROR WITHOUT 
	    766  ! 		STV" section.  Expand "WITH STV' AND "without STV"
	    767  ! 		COMMENTS TO CLARIFY DIFFERENCE BETWEEN TWO.
	    768  ! 
	    769  ! 	X-4	EMW0016		ELINOR M. WOODS		10-AUG-1993
	    770  ! 		MERGE IN CORAL FIX:
	    771  ! 
	    772  ! 		MODIFY SEVERITY OF TWO DTF ERROR CODES (DTFACC AND
	    773  ! 		DTFCRE) FROM FATAL TO ERROR, AS REQUESTED BY SNA/DTF
	    774  ! 		FACILITY.		
	    775  ! 
	    776  ! 		ALSO MOVE NEW IDXSEARCH STATUS FROM ERROR WITH NO 
	    777  ! 		STV GROUPING TO ERROR WITH STV GROUPING.
	    778  ! 
	    779  ! 	X-3	EMW0010		ELINOR M. WOODS		02-JUL-1993
	    780  ! 		TO SUPPORT NEW KEY-LESS-THAN FUNCTIONALITY, ADDITION 
	    781  ! 		OF ONE USER-REPORTABLE ERROR STATUS:  IDXSEARCH, AND
	    782  ! 		TWO NEW RMS-INTERNAL ERROR STATUSES:  LSCAN AND 

CO_OUTPUT                       Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 3
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	    783  ! 		ROOTSRCH.		
	    784  ! 
	    785  ! 	X-2	CW0019		CHRIS WHITAKER		11-NOV-1992
	    786  ! 		MERGE IN OPENVMS VAX V6.0 CHANGES
	    787  ! 
	    788  ! 		X-8	JM0012	JOHN MUNZER		11-NOV-1992
	    789  ! 		CHANGE TEXT FOR RMS$_LNE.
	    790  ! 
	    791  ! 		X-7	JM0006	JOHN MUNZER		17-APR-1992
	    792  ! 		ADD !XL PARAMETER TO RMS$_BUG TO REPORT R2.
	    793  ! 
	    794  ! 	X-1	RAB		RICHARD A. BISHOP	24-JUN-1991
	    795  ! 		MOVED TO [STARLET] FACILITY
	    796  ! 
	    797  ! 	==================================
	    798  ! 	OLD AUDIT TRAIL FOLLOWS:
	    799  ! 
	    800  ! 	X-33	LSS0154		LEONARD S. SZUBOWICZ	 4-APR-1990
	    801  ! 		ALTER TEXT AND FAO PARAMETERS OF RMS$_RUH AND RMS$_BUG
	    802  ! 		CONDITION VALUES FOR RMS/DDTM SUPPORT.
	    803  ! 
	    804  ! 	X-32	PJH		PAUL J. HOULIHAN	17-JAN-1990
	    805  ! 		CHANGE TEXT FOR RMS$_INCOMPSHR ERROR MESSAGE.
	    806  ! 
	    807  ! 	X-31	LSS0130		LEONARD S. SZUBOWICZ	12-OCT-1989
	    808  ! 		MERGE OF RMS/DDTM GENERATION X-30D2.
	    809  ! 		ADD GENERAL DDTM_ERR ERROR MESSAGE FOR DDTM SERVICE FAILURES;
	    810  ! 		STV WILL CONTAIN THE FAILING SYSTEM SERVICE CONDITION VALUE.
	    811  ! 
	    812  ! 	X-30	LSS0080		LEONARD S. SZUBOWICZ	06-OCT-1988
	    813  ! 		ADD RMS$_OK_ACT MESSAGE FOR USE BY FUTURE WORK TO $DISPLAY.
	    814  ! 		THIS IS PART OF LATENT SUPPORT FOR RMS/DDTM.
	    815  ! 
	    816  ! 	X-29	GJA0080		GARY J. ALLISON		06-JUN-1988
	    817  ! 		CHANGE TEXT OF SEMANTICS MESSAGE.
	    818  ! 
	    819  ! 	X-28	GJA0072		GARY J. ALLISON		02-MAR-1988
	    820  ! 		ADD EXT_ERR, OPNOTSUP, EXTNOTFOU, AND SEMANTICS MESSAGES.
	    821  ! 
	    822  ! 	X-27	PMV0072		PETER M. VATNE		08-OCT-1987
	    823  ! 		CHANGE RMS$_NOJNLLIC TO RMS$_JNLNOTAUTH.
	    824  ! 
	    825  !  	X-26	LSS0057		LEONARD S. SZUBOWICZ	15-SEP-1987
	    826  ! 		CHANGE TEXT FOR THE RMS$_OK_DUP STATUS SUCH THAT THE MESSAGE
	    827  ! 		IS APPLICABLE TO $GET AS WELL AS $PUT.
	    828  ! 
	    829  ! 	X-25	PMV0068		PETER M. VATNE		11-SEP-1987
	    830  ! 		ADD RMS$_NOJNLLIC, NO RMS JOURNALING LICENSE, FOR LMF.
	    831  ! 
	    832  ! 	X-24	RNM0026		RUSSELL N. MURRAY	15-AUG-1987
	    833  ! 		ADD RMS$_SYNCH MESSAGE FOR NOTIFICATION OF SYNCHRONOUS
	    834  ! 		COMPLETION.
	    835  ! 
	    836  ! 	X-23	JEJ0479		JAMES E JOHNSON		13-AUG-1987
	    837  ! 		ADD RMS$_IVATRACE MESSAGE.
	    838  ! 
	    839  ! 	X-22	PMV0061		PETER M. VATNE		03-AUG-1987

CO_OUTPUT                       Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 4
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	    840  ! 		CHANGE RESERVED MESSAGE RMS$_BUG_XX5 TO RMS$_BUG_RU_COMMIT_FAIL
	    841  ! 		TO CORRESPOND TO POSITIVE RMS BUGCHECK FTL$_RU_COMMIT_FAIL.
	    842  ! 
	    843  !  	X-21	LSS0042		LEONARD S. SZUBOWICZ	13-MAY-1987
	    844  ! 		CHANGE RESERVED MESSAGE RMS$_BUG_XX4 TO RMS$_BUG_RU_ABORT_FAIL
	    845  ! 		TO CORRESPOND TO POSITIVE RMS BUGCHECK FTL$_RU_ABORT_FAIL
	    846  ! 	
	    847  ! 	X-20	SAD0034		STUART A. DAVIDSON	12-MAR-1987 
	    848  ! 		DROP QUOTES FROM SNADTF MESSAGE TEXT.
	    849  ! 
	    850  ! 	X-19	PJH		PAUL J. HOULIHAN	19-JAN-1987
	    851  ! 		MERGE IN 17J1.
	    852  ! 
	    853  ! 		X-17J1	PJH		PAUL J. HOULIHAN	15-JAN-1987
	    854  ! 			FIX SEVERAL SMALL JNL PROBLEMS.
	    855  ! 			ADD RMS$_BUG_FLUSH_JNL_FAILED CODE.
	    856  ! 
	    857  ! 	X-18	KPS0148		KENNETH P. SIEGEL	04-DEC-1986
	    858  ! 		ADDED SNPPF (STATISTICS MONITORING NOT SUPPORTED FOR
	    859  ! 		PROCESS PERMANENT FILES) ERROR MESSAGE.
	    860  ! 
	    861  ! 	X-17	PMV0025		PETER M. VATNE		24-NOV-1986
	    862  ! 		ADD NEW MESSAGE, RMS$_NOTSAMEJNL.  THIS STATUS IS
	    863  ! 		USED TO RESTRICT AI/BI WITH RU JOURNALING TO A
	    864  ! 		SINGLE LONG-TERM JOURNAL FILE.
	    865  ! 
	    866  ! 	X-16	DAS		DAVID A. SOLOMON	18-NOV-1986
	    867  ! 		ADD NEW MESSAGE, RMS$_DELJNS. REMOVE RMS$_XCR (BY REPLACING IT
	    868  ! 		WITH A PLACEHOLDER), AS JOURNALING BITS ARE NO LONGER
	    869  ! 		SPECIFIED IN THE $XABJNL. SLIGHT WORDING CHANGE ON DETACHED
	    870  ! 		RU RECOVERY ERROR MESSAGES.
	    871  ! 
	    872  ! 	X-15	DAS		DAVID A. SOLOMON	12-NOV-1986
	    873  ! 		FIX ERROR IN X-5/X-6: JOURNALING VARIANT NOT MERGED
	    874  ! 		CORRECTLY, RESULTING IN SEVERAL JOURNALING MESSAGES NUMBERS
	    875  ! 		BEING DIFFERENT IN THE MAININE THAN WHAT THEY WERE ON THE
	    876  ! 		JOURNALING VARIANT. ALSO, MOVE NEW SNADTF MESSAGES TO RE-USE
	    877  ! 		AVAILABLE UNUSED MESSAGE NUMBERS, INSTEAD OF GENERATING NEW
	    878  ! 		ONES. FINALLY, CHANGE RMS$_BUG_ABORT TO RMS$_BUG_RU_ACTIVE.
	    879  ! 
	    880  ! 	X-14	SAD0014		STUART A. DAVIDSON	 4-NOV-1986
	    881  ! 		SNADTF - FIX TYPO IN DTFACC, DTFCRE
	    882  ! 
	    883  ! 	X-13	SAD0014		STUART A. DAVIDSON	 3-NOV-1986
	    884  ! 		SNADTF - FIX TYPO, ADD 2 ADDITIONAL MESSAGES.
	    885  ! 
	    886  ! 	X-12	JEJ0377		JAMES E JOHNSON		29-OCT-1986
	    887  ! 		ADD NOEXTEND ERROR CODE TO FLAG FAILED RELATIVE FILE
	    888  ! 		EXTENDS DUE TO PREVIOUS FAILURES.
	    889  ! 
	    890  ! 	X-11	KPS0131		KENNETH P. SIEGEL	25-OCT-1986
	    891  ! 		ADDED SNS ERROR CODE FOR STATISTICS NOT SUPPORT ON
	    892  ! 		NON-DISK DEVICES.
	    893  ! 
	    894  ! 	X-10	SAD009		STUART A. DAVIDSON	06-OCT-1986
	    895  ! 		ADD COMPLETION CODES FOR SNADTF (IBM DATA XFER)
	    896  ! 

CO_OUTPUT                       Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 5
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	    897  ! 	X-9	GJA0003		GARY J. ALLISON		29-SEP-1986
	    898  ! 		ADD DETACHED RECOVERY ERROR MESSAGES
	    899  ! 
	    900  ! 	X-8	PMV0008		PETER M. VATNE		24-SEP-1986
	    901  ! 		MODIFY RMS$_ACC_AIJ, RMS$_ACC_BIJ, AND RMS$_ACC_ATJ
	    902  ! 		TO ALSO OUTPUT THE STV.
	    903  ! 
	    904  ! 	X-7	JWT0243		JIM TEAGUE		 2-SEP-1986
	    905  ! 		ADD NEW ERRORS FOR COLLATED KEYS.
	    906  ! 
	    907  ! 	X-6	GJA		GARY J. ALLISON		29-JUL-1986
	    908  ! 		REMOVE DUPS FROM JNL MERGE.
	    909  ! 
	    910  ! 	X-5	GJA		GARY J. ALLISON		29-JUL-1986
	    911  ! 		MERGE JOURNALING INTO MAINLINE
	    912  ! 
	    913  ! 		X-3J6	DAS		DAVID A. SOLOMON	14-APR-1986
	    914  ! 			REMOVE RMS$_RUH_FILE (USING A GENERAL RUF MESSAGE INSTEAD).
	    915  ! 			CHANGE RMS$_RUH TEXT TO NOT HAVE FAO PARAMETERS. ADD
	    916  ! 			RMS$_BUG_RURECERR.
	    917  ! 	
	    918  ! 		X-3J5	JEJ0302		JAMES E JOHNSON		 4-APR-1986
	    919  ! 			ADD RMS$_RRF (ERROR DURING RU RECOVERY) AND
	    920  ! 			RMS$_RUH/RMS$_RUH_FILE (USED TO FORM TEXT OF RU HANDLER ERRORS
	    921  ! 			SENT TO OPCOM).
	    922  ! 	
	    923  ! 		X-3J4	JEJ0272		JAMES E JOHNSON		11-FEB-1986
	    924  ! 			ADD RMS$_RUF, RMS$_BUG_ABORT CODES.
	    925  ! 	
	    926  ! 		X-3J3	JEJ0237		JAMES E JOHNSON		16-DEC-1985
	    927  ! 			ADD RMS$_RUNDOWN CODE
	    928  ! 	
	    929  ! 		X-3J2	JEJ0205		JAMES E JOHNSON		25-OCT-1985
	    930  ! 			ADD JOURNAL SPECIFIC WRTJNL_XXJ ERROR CODES TO REPLACE
	    931  ! 			THE GENERIC ERRWRTJNL CODE.
	    932  ! 
	    933  ! 	X-4	JEJ0216		JAMES E JOHNSON		18-NOV-1985
	    934  ! 		MERGE X-3J2 INTO MAIN LINE FOR V4.4.
	    935  ! 
	    936  ! 		X-3J2	JEJ0205		JAMES E JOHNSON		25-OCT-1985
	    937  ! 			ADD JOURNAL SPECIFIC WRTJNL_XXJ ERROR CODES TO REPLACE
	    938  ! 			THE GENERIC ERRWRTJNL CODE.
	    939  ! 
	    940  ! 	X-3	JEJ0161		JAMES E JOHNSON		 9-SEP-1985
	    941  ! 		UPDATE RMS JOURNALING MESSAGES.
	    942  ! 
	    943  ! 	X-2	JWT0212		JIM TEAGUE		 4-SEP-1985
	    944  ! 		ADD (WHAT IS FOR NOW) AN INTERNAL STATUS CODE TO 
	    945  ! 		DIFFERENTIATE BETWEEN FINDING A DELETED RECORD (DEL)
	    946  ! 		AND FINDING IT BUT WITH A DIFFERENT KEY (KEY_MISMATCH).
	    947  ! 		
	    948  ! 	V03-024	RAS0314		RON SCHAEFER		21-JUN-1984
	    949  ! 		WORK OVER THE MESSAGES ONE MORE TIME:  FIX TYPO IN OK_RNF,
	    950  ! 		DELETE ACPEOF ERROR, DELETE WSF ERROR.
	    951  ! 
	    952  ! 	V03-023	RAS0282		RON SCHAEFER		28-MAR-1984
	    953  ! 		MINOR TEXT CHANGES AND COMMENTS ADDED.

CO_OUTPUT                       Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 6
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	    954  ! 		DELETE RMS$_COP ERROR.
	    955  ! 
	    956  ! 	V03-022	DAS0005		DAVID SOLOMON		19-MAR-1984
	    957  ! 		REMOVE RMS$_ECHO (NO LONGER NEEDED AS A RESULT OF NEW
	    958  ! 		IMPLEMENTATION FOR ECHO SYS$INPUT -> SYS$OUTPUT).
	    959  ! 
	    960  ! 	V03-021	JWT0150		JIM TEAGUE		01-FEB-1984
	    961  ! 		ADD RMS$_IFF FOR TRYING TO WRITE-ACCESS A FILE ON 
	    962  ! 		MAGTAPE THAT HAS NON-0 VALUE FOR ANSI BUFFER OFFSET.
	    963  ! 
	    964  ! 	V03-020	RAS0233		RON SCHAEFER		 9-JAN-1984
	    965  ! 		ADD RMS$_NOVALPRS ERROR FOR $SEARCH NOT PRECEDED BY
	    966  ! 		VALID $PARSE.
	    967  ! 
	    968  ! 	V03-019	JWT0148		JIM TEAGUE		20-DEC-1983
	    969  ! 		ADD A JNL XAB ERROR FOR CONFLICTING RU ATTRIBUTES
	    970  ! 		ON $CREATE: RMS$_XCR.
	    971  ! 
	    972  ! 	V03-018	RAS0171		RON SCHAEFER		28-JUL-1983
	    973  ! 		ADD RMS$_BUSY; A STRUCTURE-LESS ERROR (R0-ONLY STATUS)
	    974  ! 		REPLACING TEMP3.
	    975  ! 
	    976  ! 	V03-017	DAS0004		DAVID SOLOMON		28-JUN-1983
	    977  ! 		ADD RMS$_FILEPURGED; ADD RMS$_ACPEOF FOR ZALEWSKI.
	    978  ! 
	    979  ! 	V03-016	KPL0007		PETER LIEBERWIRTH	 8-JUN-1983
	    980  ! 		FIX SPELLING IN JNL ERROR MESSAGES, ADD CJF ERROR WHICH
	    981  ! 		WILL SOON SUBSUME COP AND CQE.
	    982  ! 
	    983  ! 	V03-015	DAS0003		DAVID SOLOMON		18-FEB-1983
	    984  ! 		ADD XNF (REPLACING TEMP9), TMR (NEW), LWC (NEW).
	    985  ! 
	    986  ! 	V03-014	KBT0497		KEITH B. THOMPSON	18-FEB-1983
	    987  ! 		ADD INCOMPSHR ERROR (REUSE OF TEMP1 SLOT)
	    988  ! 
	    989  ! 	V03-013	RAS0120		RON SCHAEFER		 2-FEB-1983
	    990  ! 		ADD ECHO PSEUDO-STATUS TO SUPPORT ECHO OF SYS$INPUT
	    991  ! 		TO SYS$OUTPUT.
	    992  ! 
	    993  ! 	V03-012	JWH0174		JEFFRY W. HORN		24-JAN-1983
	    994  ! 		ADD CQE AND COP ERRORS.
	    995  ! 
	    996  ! 	V03-011	KPL0006		PETER LIEBERWIRTH	 7-JAN-1983
	    997  ! 		ADD OK_RULK FOR RECOVERY UNIT SUPPORT.
	    998  ! 
	    999  ! 		ADD REENT ERROR FOR $RENAME.
	   1000  ! 		
	   1001  ! 	V03-009	JWH0153		JEFFREY W. HORN		 8-DEC-1982
	   1002  ! 		ADD NRU ERROR.
	   1003  ! 
	   1004  ! 	V03-008	JWH0152		JEFFREY W. HORN		 8-DEC-1982
	   1005  ! 		ADD JNS ERROR.
	   1006  ! 
	   1007  ! 	V03-007 MCN0002		MARIA DEL C. NASR	15-NOV-1982
	   1008  ! 		REPLACE ORD ERROR CODE ELIMINATED BY MCN0001, SINCE
	   1009  ! 		THE NETWORK CODE REFERENCES IT.
	   1010  ! 

CO_OUTPUT                       Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 7
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	   1011  ! 	V03-006 MCN0001		MARIA DEL C. NASR	26-OCT-1982
	   1012  ! 		PRINT KEY OF REFERENCE OR AREA IDENTIFICATION NUMBER
	   1013  ! 		INSTEAD OF XAB ADDRESS FOR ERRORS RETURNED DURING
	   1014  ! 		INDEXED FILE CREATION.  ALSO RENAME ALL UNUSED ERROR
	   1015  ! 		CODES TO TEMP.
	   1016  ! 
	   1017  ! 	V03-005	JWH0102		JEFFREY W. HORN		24-SEP-1982
	   1018  ! 		ADD RUP ERROR.
	   1019  ! 
	   1020  ! 	V03-004	RAS0095		RON SCHAEFER		 7-SEP-1982
	   1021  ! 		ADD OVRDSKQUOTA ERROR.
	   1022  ! 
	   1023  ! 	V03-002	JWH0002		JEFFREY W. HORN		26-JUL-1982
	   1024  ! 		CONVERT TO .MSG FORMAT.   ADD RUM ERROR.
	   1025  ! 
	   1026  ! 	V03-001	JWH0001		JEFFREY W. HORN		20-JUL-1982
	   1027  ! 		ADD JNF, JOP, AND NOJ ERRORS.
	   1028  ! 
	   1029  ! 	V02-042	KPL0005		PETER LIEBERWIRTH	 4-FEB-1982
	   1030  ! 		ADD ERROR MESSAGES RMS$_EXENQLM AND RMS$_DEADLOCK
	   1031  ! 		CORRECTLY.
	   1032  ! 
	   1033  ! 	V02-041	CDS0001		C D SAETHER	24-JAN-1982
	   1034  ! 		ADD GBC AND CRMP ERRORS.
	   1035  ! 
	   1036  ! 	V02-040	JAK0069		J A KRYCKA	15-JAN-1982
	   1037  ! 		ADD SUPPORT AND NETFAIL ERROR CODES.
	   1038  ! 
	   1039  ! 	V02-039	JAK0068		J A KRYCKA	31-DEC-1981
	   1040  ! 		MODIFY TEXT FOR SUP, NET, BUG_DAP, AND ENV ERROR MESSAGES.
	   1041  ! 
	   1042  ! 	V02-038 LJA0001		LAURIE ANDERSON 20-DEC-1981
	   1043  ! 		MODIFIED SOME MESSAGES TO READ BETTER.
	   1044  ! 
	   1045  ! 	V02-037	JAK0063		J A KRYCKA	31-AUG-1981
	   1046  ! 		ADD CRE_STM SUCCESS CODE.
	   1047  ! 
	   1048  ! 	V02-036	KPL0004		PETER LIEBERWIRTH	13-JAN-1981
	   1049  ! 		ADD ENQ SEVERE ERROR MESSAGE, TO INDICATE $ENQ/$DEQ FAILURE.
	   1050  ! 		ALSO ADD SUCCESS CODES OK_RRL, AND OK_WAT.
	   1051  ! 
	   1052  ! 	V02-035	REFORMAT	J A KRYCKA	30-JUL-1980
	   1053  ! 
	   1054  ! --
	   1055 	PARAMETER RMS$_FACILITY = '00000001'X
	   1056 	PARAMETER RMS$V_STVSTATUS = '0000000E'X	 !  MOVE TO BIT 14 OF THE
	   1057  !  STATUS CODE IT INDICATES
	   1058  !  THAT STV CONTAINS A SECONDARY
	   1059  !  STATUS CODE.
	   1060 	PARAMETER RMS$_SUC = '00010001'X
	   1061 	PARAMETER RMS$_NORMAL = '00010001'X
	   1062  ! +
	   1063  ! 
	   1064  ! 	SUCCESS CODES
	   1065  ! 
	   1066  ! -
	   1067  !  BIT 16 = BIT 15 = 1

CO_OUTPUT                       Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 8
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	   1068 	PARAMETER RMS$_STALL = '00018001'X
	   1069  !  (NOTE: USER NEVER RECEIVES THIS CODE)
	   1070 	PARAMETER RMS$_PENDING = '00018009'X
	   1071 	PARAMETER RMS$_OK_DUP = '00018011'X
	   1072 	PARAMETER RMS$_OK_IDX = '00018019'X
	   1073  !   (RECORD HAS BEEN INSERTED, BUT INDEX STRUCTURE IS NO LONGER
	   1074  !   OPTIMAL.)
	   1075 	PARAMETER RMS$_OK_RLK = '00018021'X
	   1076  !  (BECAUSE LOCKER SET RLK IN ROP FIELD WHEN RECORD WAS LOCKED.)
	   1077 	PARAMETER RMS$_OK_RRL = '00018029'X
	   1078  !  (BECAUSE READER SET RRL IN ROP FIELD WHEN ACCESSING RECORD.)
	   1079  !  (THIS CODE USED TO BE OK_RRV)
	   1080  ! OK_RRV	;MSG <record was inserted successfully in primary>
	   1081  !   (BUT IT MAY NOT BE ACCESSIBLE VIA ONE-OR-MORE SECONDARY KEYS,
	   1082  !   AND NOT BY RFA ADDRESSING. FILE RE-ORGANIZATION RECOMMENDED!)
	   1083 	PARAMETER RMS$_KFF = '00018031'X
	   1084 	PARAMETER RMS$_OK_ALK = '00018039'X
	   1085 	PARAMETER RMS$_OK_DEL = '00018041'X
	   1086 	PARAMETER RMS$_OK_RNF = '00018049'X
	   1087 	PARAMETER RMS$_OK_LIM = '00018051'X
	   1088 	PARAMETER RMS$_OK_NOP = '00018059'X
	   1089 	PARAMETER RMS$_OK_WAT = '00018061'X
	   1090  !  (BECAUSE WAT BIT IN ROP WAS SET AND RECORD WAS ALREADY
	   1091  !  LOCKED.)
	   1092 	PARAMETER RMS$_CRE_STM = '00018069'X
	   1093 	PARAMETER RMS$_OK_RULK = '00018071'X
	   1094 	PARAMETER RMS$_SYNCH = '00018079'X
	   1095 	PARAMETER RMS$_OK_ACT = '00018081'X
	   1096 	PARAMETER RMS$_OK_NOCURTID = '00018089'X
	   1097  ! +
	   1098  ! 
	   1099  ! 	SUCCESS CODES PASSED THRU FROM DRIVERS AND ACP -	BIT 15 = 0
	   1100  ! 
	   1101  ! -
	   1102 	PARAMETER RMS$_CONTROLC = '00010651'X	 !  TERMINAL I/O ABORTED DUE TO CTRL/C
	   1103 	PARAMETER RMS$_CONTROLO = '00010609'X
	   1104  !  TERMINAL I/O ABORTED DUE TO CTRL/O
	   1105 	PARAMETER RMS$_CONTROLY = '00010611'X
	   1106  !  TERMINAL I/O ABORTED DUE TO CTRL/Y
	   1107 	PARAMETER RMS$_CREATED = '00010619'X
	   1108  !  FILE WAS CREATED, NOT OPENED
	   1109 	PARAMETER RMS$_SUPERSEDE = '00010631'X
	   1110  !  CREATED FILE SUPERSEDED EXISTING VERSION
	   1111 	PARAMETER RMS$_OVRDSKQUOTA = '00010669'X
	   1112  !  DISK USAGE EXCEEDS DISK QUOTA
	   1113 	PARAMETER RMS$_FILEPURGED = '00010679'X
	   1114  !  CREATE FILE CAUSED OLDEST FILE
	   1115  !  VERSION TO BE PURGED
	   1116  ! +
	   1117  ! 
	   1118  ! 	WARNING CODES
	   1119  ! 
	   1120  ! -
	   1121  !  BIT 16 = BIT 15 = 1, BIT 14 = 0
	   1122 	PARAMETER RMS$_BOF = '00018198'X
	   1123 	PARAMETER RMS$_RNL = '000181A0'X
	   1124 	PARAMETER RMS$_RTB = '000181A8'X

CO_OUTPUT                       Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 9
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	   1125 	PARAMETER RMS$_TMO = '000181B0'X
	   1126 	PARAMETER RMS$_TNS = '000181B8'X
	   1127 	PARAMETER RMS$_BES = '000181C0'X
	   1128 	PARAMETER RMS$_PES = '000181C8'X
	   1129  ! +
	   1130  ! 
	   1131  ! 	ERROR CODES - WITHOUT STV (THAT IS, STV MAY BE USED BUT NO ASSOCIATED
	   1132  ! 		      CONDITION CODE IS IN STV)
	   1133  ! 
	   1134  ! -
	   1135  !  BIT 16 = BIT 15 = 1, BIT 14 = 0
	   1136 	PARAMETER RMS$_ACT = '0001825A'X
	   1137 	PARAMETER RMS$_DEL = '00018262'X
	   1138 	PARAMETER RMS$_INCOMPSHR = '0001826A'X
	   1139 	PARAMETER RMS$_DNR = '00018272'X
	   1140 	PARAMETER RMS$_EOF = '0001827A'X
	   1141 	PARAMETER RMS$_FEX = '00018282'X
	   1142 	PARAMETER RMS$_FLK = '0001828A'X
	   1143 	PARAMETER RMS$_FNF = '00018292'X
	   1144 	PARAMETER RMS$_PRV = '0001829A'X
	   1145 	PARAMETER RMS$_REX = '000182A2'X
	   1146 	PARAMETER RMS$_RLK = '000182AA'X
	   1147 	PARAMETER RMS$_RNF = '000182B2'X
	   1148  !   (RECORD NEVER WAS IN FILE, OR HAS BEEN DELETED.)
	   1149 	PARAMETER RMS$_WLK = '000182BA'X
	   1150 	PARAMETER RMS$_EXP = '000182C2'X
	   1151 	PARAMETER RMS$_NMF = '000182CA'X
	   1152 	PARAMETER RMS$_SUP = '000182D2'X
	   1153  !  (NOTE THAT SUPPORT HAS REPLACED SUP EXCEPT WHEN RMS CANNOT
	   1154  !  MAP THE DAP STATUS CODE INTO A FAL STATUS CODE.)
	   1155  !  (NOTE ALSO THAT SUP SHOULD HAVE BEEN DEFINED AS A SEVERE
	   1156  !  ERROR CODE. HOWEVER, SUPPORT IS A SEVERE ERROR CODE.)
	   1157 	PARAMETER RMS$_RSA = '000182DA'X
	   1158 	PARAMETER RMS$_CRC = '000182E2'X
	   1159 	PARAMETER RMS$_WCC = '000182EA'X
	   1160 	PARAMETER RMS$_IDR = '000182F2'X
	   1161 	PARAMETER RMS$_LWC = '000182FA'X
	   1162 	PARAMETER RMS$_UNUSED1 = '00018302'X
	   1163 	PARAMETER RMS$_NOVALPRS = '0001830A'X
	   1164 	PARAMETER RMS$_KEY_MISMATCH = '00018312'X
	   1165 	PARAMETER RMS$_RUH = '0001831A'X
	   1166 	PARAMETER RMS$_JND = '00018322'X
	   1167 	PARAMETER RMS$_BADPHASE = '0001832A'X
	   1168 	PARAMETER RMS$_TOWDR = '00018332'X
	   1169 	PARAMETER RMS$_NEXDR = '0001833A'X
	   1170 	PARAMETER RMS$_INVDRMSG = '00018342'X
	   1171 	PARAMETER RMS$_RU_ACTIVE = '0001834A'X
	   1172 	PARAMETER RMS$_UNKRUFAC = '00018352'X
	   1173 	PARAMETER RMS$_LIMBO = '0001835A'X
	   1174 	PARAMETER RMS$_IVATRACE = '00018362'X
	   1175 	PARAMETER RMS$_OPNOTSUP = '0001836A'X
	   1176 	PARAMETER RMS$_EXTNOTFOU = '00018372'X
	   1177 	PARAMETER RMS$_EXT_ERR = '0001837A'X
	   1178 	PARAMETER RMS$_SEMANTICS = '00018382'X
	   1179 	PARAMETER RMS$_LSCAN = '0001838A'X
	   1180 	PARAMETER RMS$_ROOTSRCH = '00018392'X
	   1181 	PARAMETER RMS$_IDXSEARCH = '0001839A'X

CO_OUTPUT                       Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 10
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	   1182 	PARAMETER RMS$_NETBTS = '000183A2'X
	   1183 	PARAMETER RMS$_NXR = '000183AA'X
	   1184  !  IF EXACT KEY MATCH ON SECONDARY KEY AND SECONDARY KEY
	   1185  !  ENTRY POINTS TO NONEXISTENT PRIMARY DATA RECORD IN
	   1186  !  DISK FILE.
	   1187  ! +
	   1188  ! 
	   1189  ! 	ERROR CODES - WITH STV ERROR CODE (THAT IS, STV CONTAINS AN ASSOCIATED CONDITION CODE)
	   1190  ! 
	   1191  ! -
	   1192  !  BIT 16 = BIT 15 = BIT 14 = 1
	   1193 	PARAMETER RMS$_ACC = '0001C002'X
	   1194 	PARAMETER RMS$_CRE = '0001C00A'X
	   1195 	PARAMETER RMS$_DAC = '0001C012'X
	   1196 	PARAMETER RMS$_ENT = '0001C01A'X
	   1197 	PARAMETER RMS$_EXT = '0001C022'X
	   1198 	PARAMETER RMS$_FND = '0001C02A'X
	   1199 	PARAMETER RMS$_MKD = '0001C032'X
	   1200 	PARAMETER RMS$_DPE = '0001C03A'X
	   1201 	PARAMETER RMS$_SPL = '0001C042'X
	   1202 	PARAMETER RMS$_DNF = '0001C04A'X
	   1203 	PARAMETER RMS$_RUF = '0001C052'X
	   1204 	PARAMETER RMS$_WRTJNL_AIJ = '0001C05A'X
	   1205 	PARAMETER RMS$_WRTJNL_BIJ = '0001C062'X
	   1206 	PARAMETER RMS$_WRTJNL_ATJ = '0001C06A'X
	   1207 	PARAMETER RMS$_WRTJNL_RUJ = '0001C072'X
	   1208 	PARAMETER RMS$_RRF = '0001C07A'X
	   1209 	PARAMETER RMS$_DDTM_ERR = '0001C082'X
	   1210  ! +
	   1211  ! 
	   1212  ! 	SEVERE ERROR CODES - WITHOUT STV (THAT IS, STV MAY BE USED BUT NO ASSOCIATED
	   1213  ! 			     CONDITION CODE IS IN STV)
	   1214  ! 
	   1215  ! -
	   1216  !  BIT 16 = BIT 15 = 1, BIT 14 = 0
	   1217 	PARAMETER RMS$_DTFCDDREC = '000183EC'X
	   1218 	PARAMETER RMS$_AID = '000183F4'X
	   1219 	PARAMETER RMS$_ALN = '000183FC'X
	   1220 	PARAMETER RMS$_ALQ = '00018404'X
	   1221 	PARAMETER RMS$_ANI = '0001840C'X
	   1222 	PARAMETER RMS$_AOP = '00018414'X
	   1223 	PARAMETER RMS$_BKS = '0001841C'X
	   1224 	PARAMETER RMS$_BKZ = '00018424'X
	   1225 	PARAMETER RMS$_BLN = '0001842C'X
	   1226 	PARAMETER RMS$_BUG = '00018434'X
	   1227 	PARAMETER RMS$_BUG_DDI = '0001843C'X
	   1228 	PARAMETER RMS$_BUG_DAP = '00018444'X
	   1229 	PARAMETER RMS$_BUG_RU_ACTIVE = '0001844C'X
	   1230 	PARAMETER RMS$_BUG_RURECERR = '00018454'X
	   1231 	PARAMETER RMS$_BUG_FLUSH_JNL_FAILED = '0001845C'X
	   1232 	PARAMETER RMS$_BUG_RU_ABORT_FAIL = '00018464'X
	   1233 	PARAMETER RMS$_BUG_RU_COMMIT_FAIL = '0001846C'X
	   1234 	PARAMETER RMS$_BUG_XX6 = '00018474'X
	   1235 	PARAMETER RMS$_BUG_XX7 = '0001847C'X
	   1236 	PARAMETER RMS$_BUG_XX8 = '00018484'X
	   1237 	PARAMETER RMS$_BUSY = '0001848C'X
	   1238 	PARAMETER RMS$_CCR = '00018494'X

CO_OUTPUT                       Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 11
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	   1239 	PARAMETER RMS$_CHG = '0001849C'X
	   1240 	PARAMETER RMS$_CHK = '000184A4'X
	   1241 	PARAMETER RMS$_COD = '000184AC'X
	   1242 	PARAMETER RMS$_CUR = '000184B4'X
	   1243 	PARAMETER RMS$_DAN = '000184BC'X
	   1244 	PARAMETER RMS$_DEV = '000184C4'X
	   1245 	PARAMETER RMS$_DIR = '000184CC'X
	   1246 	PARAMETER RMS$_DME = '000184D4'X
	   1247 	PARAMETER RMS$_DNA = '000184DC'X
	   1248 	PARAMETER RMS$_DTP = '000184E4'X
	   1249 	PARAMETER RMS$_DUP = '000184EC'X
	   1250 	PARAMETER RMS$_DVI = '000184F4'X
	   1251 	PARAMETER RMS$_ESA = '000184FC'X
	   1252 	PARAMETER RMS$_ESS = '00018504'X
	   1253 	PARAMETER RMS$_FAB = '0001850C'X
	   1254 	PARAMETER RMS$_FAC = '00018514'X
	   1255 	PARAMETER RMS$_FLG = '0001851C'X
	   1256 	PARAMETER RMS$_FNA = '00018524'X
	   1257 	PARAMETER RMS$_FNM = '0001852C'X
	   1258 	PARAMETER RMS$_FSZ = '00018534'X
	   1259 	PARAMETER RMS$_FOP = '0001853C'X
	   1260 	PARAMETER RMS$_FUL = '00018544'X
	   1261 	PARAMETER RMS$_IAL = '0001854C'X
	   1262 	PARAMETER RMS$_IAN = '00018554'X
	   1263 	PARAMETER RMS$_IDX = '0001855C'X
	   1264 	PARAMETER RMS$_IFI = '00018564'X
	   1265 	PARAMETER RMS$_IMX = '0001856C'X
	   1266 	PARAMETER RMS$_IOP = '00018574'X
	   1267 	PARAMETER RMS$_IRC = '0001857C'X
	   1268 	PARAMETER RMS$_ISI = '00018584'X
	   1269 	PARAMETER RMS$_KBF = '0001858C'X
	   1270 	PARAMETER RMS$_KEY = '00018594'X
	   1271 	PARAMETER RMS$_KRF = '0001859C'X
	   1272 	PARAMETER RMS$_KSZ = '000185A4'X
	   1273 	PARAMETER RMS$_LAN = '000185AC'X
	   1274 	PARAMETER RMS$_RUNDOWN = '000185B4'X
	   1275 	PARAMETER RMS$_LNE = '000185BC'X
	   1276 	PARAMETER RMS$_DTFCVT = '000185C4'X
	   1277 	PARAMETER RMS$_MRN = '000185CC'X
	   1278 	PARAMETER RMS$_MRS = '000185D4'X
	   1279 	PARAMETER RMS$_NAM = '000185DC'X
	   1280 	PARAMETER RMS$_NEF = '000185E4'X
	   1281 	PARAMETER RMS$_DTFQUASYN = '000185EC'X
	   1282 	PARAMETER RMS$_NOD = '000185F4'X
	   1283 	PARAMETER RMS$_NPK = '000185FC'X
	   1284 	PARAMETER RMS$_ORD = '00018604'X	 ! ! NOT USED AS OF V4
	   1285 	PARAMETER RMS$_ORG = '0001860C'X
	   1286 	PARAMETER RMS$_PBF = '00018614'X
	   1287 	PARAMETER RMS$_PLG = '0001861C'X
	   1288 	PARAMETER RMS$_POS = '00018624'X
	   1289 	PARAMETER RMS$_DTFQUAVAL = '0001862C'X
	   1290 	PARAMETER RMS$_QUO = '00018634'X
	   1291 	PARAMETER RMS$_RAB = '0001863C'X
	   1292 	PARAMETER RMS$_RAC = '00018644'X
	   1293 	PARAMETER RMS$_RAT = '0001864C'X
	   1294 	PARAMETER RMS$_RBF = '00018654'X
	   1295 	PARAMETER RMS$_RFA = '0001865C'X

CO_OUTPUT                       Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 12
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	   1296 	PARAMETER RMS$_RFM = '00018664'X
	   1297 	PARAMETER RMS$_RHB = '0001866C'X
	   1298 	PARAMETER RMS$_RLF = '00018674'X
	   1299 	PARAMETER RMS$_ROP = '0001867C'X
	   1300 	PARAMETER RMS$_RRV = '00018684'X
	   1301 	PARAMETER RMS$_RVU = '0001868C'X
	   1302 	PARAMETER RMS$_RSS = '00018694'X
	   1303 	PARAMETER RMS$_RST = '0001869C'X
	   1304 	PARAMETER RMS$_RSZ = '000186A4'X
	   1305 	PARAMETER RMS$_SEQ = '000186AC'X
	   1306 	PARAMETER RMS$_SHR = '000186B4'X
	   1307 	PARAMETER RMS$_SIZ = '000186BC'X
	   1308 	PARAMETER RMS$_SQO = '000186C4'X
	   1309 	PARAMETER RMS$_DTFSESEST = '000186CC'X
	   1310 	PARAMETER RMS$_SYN = '000186D4'X
	   1311 	PARAMETER RMS$_TRE = '000186DC'X
	   1312 	PARAMETER RMS$_TYP = '000186E4'X
	   1313 	PARAMETER RMS$_UBF = '000186EC'X
	   1314 	PARAMETER RMS$_USZ = '000186F4'X
	   1315 	PARAMETER RMS$_VER = '000186FC'X
	   1316 	PARAMETER RMS$_XNF = '00018704'X
	   1317 	PARAMETER RMS$_XAB = '0001870C'X
	   1318 	PARAMETER RMS$_ESL = '00018714'X
	   1319 	PARAMETER RMS$_DTFSESTER = '0001871C'X
	   1320 	PARAMETER RMS$_ENV = '00018724'X
	   1321 	PARAMETER RMS$_PLV = '0001872C'X
	   1322 	PARAMETER RMS$_MBC = '00018734'X
	   1323 	PARAMETER RMS$_RSL = '0001873C'X
	   1324 	PARAMETER RMS$_WLD = '00018744'X
	   1325 	PARAMETER RMS$_NET = '0001874C'X	 !  (NOTE THAT NETFAIL HAS REPLACED NET EXCEPT WHEN RMS CANNOT
	   1326  !  MAP THE DAP STATUS CODE INTO A FAL STATUS CODE.)
	   1327 	PARAMETER RMS$_IBF = '00018754'X
	   1328 	PARAMETER RMS$_REF = '0001875C'X
	   1329 	PARAMETER RMS$_IFL = '00018764'X
	   1330 	PARAMETER RMS$_DFL = '0001876C'X
	   1331 	PARAMETER RMS$_KNM = '00018774'X
	   1332 	PARAMETER RMS$_IBK = '0001877C'X
	   1333 	PARAMETER RMS$_KSI = '00018784'X
	   1334 	PARAMETER RMS$_LEX = '0001878C'X
	   1335 	PARAMETER RMS$_SEG = '00018794'X
	   1336 	PARAMETER RMS$_SNE = '0001879C'X	 ! ! NOT USED AS OF V4
	   1337 	PARAMETER RMS$_SPE = '000187A4'X	 ! ! NOT USED AS OF V4
	   1338 	PARAMETER RMS$_UPI = '000187AC'X
	   1339 	PARAMETER RMS$_ACS = '000187B4'X
	   1340 	PARAMETER RMS$_STR = '000187BC'X
	   1341 	PARAMETER RMS$_FTM = '000187C4'X
	   1342 	PARAMETER RMS$_GBC = '000187CC'X
	   1343 	PARAMETER RMS$_DEADLOCK = '000187D4'X
	   1344 	PARAMETER RMS$_EXENQLM = '000187DC'X
	   1345 	PARAMETER RMS$_JOP = '000187E4'X
	   1346 	PARAMETER RMS$_RUM = '000187EC'X
	   1347 	PARAMETER RMS$_JNS = '000187F4'X
	   1348 	PARAMETER RMS$_NRU = '000187FC'X
	   1349 	PARAMETER RMS$_IFF = '00018804'X
	   1350 	PARAMETER RMS$_DTFTRATBL = '0001880C'X
	   1351 	PARAMETER RMS$_DTFUNSTYP = '00018814'X
	   1352 	PARAMETER RMS$_DTFVERMIS = '0001881C'X

CO_OUTPUT                       Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 13
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	   1353  ! +
	   1354  ! 
	   1355  ! 	ERROR CODES - WITHOUT STV
	   1356  ! 
	   1357  ! 	  DTFACC AND DTFCRE WERE ORIGINALLY INCLUDED IN THIS FATAL SEVERITY 
	   1358  ! 	  (NO STV) GROUPING.  IN ORDER TO CHANGE THEIR SEVERITY TO ERROR 
	   1359  ! 	  (NO STV) AND RETAIN THE SAME MESSAGE CODE VALUE, THE FOLLOWING 
	   1360  ! 	  SHIFTS IN SEVERITY FROM FATAL TO ERROR AND THEN BACK AGAIN ARE
	   1361  ! 	  DONE, WHILE RETAINING THE SAME ORIGINAL BASE ASSOCIATED WITH EACH.
	   1362  ! 
	   1363  ! -
	   1364  !  BIT 16 = BIT 15 = 1, BIT 14 = 0
	   1365 	PARAMETER RMS$_DTFACC = '00018822'X
	   1366  ! +
	   1367  ! 
	   1368  ! 	SEVERE ERROR CODES - WITHOUT STV
	   1369  ! 
	   1370  ! -
	   1371  !  BIT 16 = BIT 15 = 1, BIT 14 = 0
	   1372 	PARAMETER RMS$_BOGUSCOL = '0001882C'X
	   1373 	PARAMETER RMS$_ERRREADCOL = '00018834'X
	   1374 	PARAMETER RMS$_ERRWRITECOL = '0001883C'X
	   1375 	PARAMETER RMS$_SNS = '00018844'X
	   1376 	PARAMETER RMS$_NOEXTEND = '0001884C'X	 ! +
	   1377  ! 
	   1378  ! 	ERROR CODES - WITHOUT STV
	   1379  ! 
	   1380  ! -
	   1381  !  BIT 16 = BIT 15 = 1, BIT 14 = 0
	   1382 	PARAMETER RMS$_DTFCRE = '00018852'X
	   1383  ! +
	   1384  ! 
	   1385  ! 	SEVERE ERROR CODES - WITHOUT STV
	   1386  ! 
	   1387  ! -
	   1388  !  BIT 16 = BIT 15 = 1, BIT 14 = 0
	   1389 	PARAMETER RMS$_DELJNS = '0001885C'X
	   1390 	PARAMETER RMS$_NOTSAMEJNL = '00018864'X
	   1391 	PARAMETER RMS$_SNPPF = '0001886C'X
	   1392  ! +
	   1393  ! 
	   1394  ! 	SEVERE ERRORS - WITH STV ERROR CODE (THAT IS, STV CONTAINS AN ASSOCIATED CONDITION CODE)
	   1395  ! 
	   1396  ! -
	   1397  !  BIT 16 = BIT 15 = BIT 14 = 1
	   1398 	PARAMETER RMS$_ATR = '0001C0CC'X
	   1399 	PARAMETER RMS$_ATW = '0001C0D4'X
	   1400 	PARAMETER RMS$_CCF = '0001C0DC'X
	   1401 	PARAMETER RMS$_CDA = '0001C0E4'X
	   1402 	PARAMETER RMS$_CHN = '0001C0EC'X
	   1403 	PARAMETER RMS$_RER = '0001C0F4'X
	   1404 	PARAMETER RMS$_RMV = '0001C0FC'X
	   1405 	PARAMETER RMS$_RPL = '0001C104'X
	   1406 	PARAMETER RMS$_SYS = '0001C10C'X
	   1407 	PARAMETER RMS$_WER = '0001C114'X
	   1408 	PARAMETER RMS$_WPL = '0001C11C'X
	   1409 	PARAMETER RMS$_IFA = '0001C124'X

CO_OUTPUT                       Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 14
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	   1410 	PARAMETER RMS$_WBE = '0001C12C'X
	   1411 	PARAMETER RMS$_ENQ = '0001C134'X
	   1412 	PARAMETER RMS$_NETFAIL = '0001C13C'X
	   1413 	PARAMETER RMS$_SUPPORT = '0001C144'X
	   1414 	PARAMETER RMS$_CRMP = '0001C14C'X
	   1415 	PARAMETER RMS$_DTFCFGFIL = '0001C154'X
	   1416 	PARAMETER RMS$_REENT = '0001C15C'X
	   1417 	PARAMETER RMS$_ACC_RUJ = '0001C164'X
	   1418 	PARAMETER RMS$_TMR = '0001C16C'X
	   1419 	PARAMETER RMS$_ACC_AIJ = '0001C174'X
	   1420 	PARAMETER RMS$_ACC_BIJ = '0001C17C'X
	   1421 	PARAMETER RMS$_ACC_ATJ = '0001C184'X
	   1422 	PARAMETER RMS$_DTFDEFFIL = '0001C18C'X
	   1423 	PARAMETER RMS$_DTFREGFIL = '0001C194'X
	   1424 	PARAMETER RMS$_JNLNOTAUTH = '0001C19C'X
	   1425 !DEC$ END OPTIONS
	   1426 
	   1427         CHARACTER*80
	   1428      .    L1FILENAME /'DATA_DIR:WI*L1*.DAT'/               !data file name
	   1429 C
	   1430         INTEGER*4
	   1431      .    LUNIT /10/,                                      !file unit num
	   1432      .    WIND_DECOMPRESS,                                 !function
	   1433      .    STATUS                                           !routine status
	   1434 C
	   1435         RECORD
	   1436      .    /CORE/ SCI,                                      !basic data
	   1437      .    /HDBstr/ HDB,                                    !housekeeping
	   1438      .    /SW_PHA/ SWICS_PHA,                              !pha data
	   1439      .    /SW_RATE/ SWICS_RATE,                            !rate data
	   1440      .    /T/ START, END, LSCTIME,SCTIME,TIME_ARR(500)     !time data
	   1441 C         
	   1442         INTEGER
	   1443      .    N, NN, CNTR                                      !from JP pgm
	   1444 C
	   1445         LOGICAL
	   1446      .    CODE_C,                                          !t=compress C
	   1447      .    GOODSPIN                                         !from JP pgm
	   1448 C
	   1449 C                                      user input variables
	   1450         CHARACTER*80
	   1451      .   OUTFILE
	   1452 C
	   1453         LOGICAL
	   1454      .    ANSWER,
	   1455      .    TSEARCH/.FALSE./                                 !t=time search done
	   1456 C
	   1457         INTEGER*4
	   1458      .    DELTA_TIME,                             !output time scale in minutes
	   1459      .    STYY, STDOY, STHH, STMM,                         !start times
	   1460      .    SYY, SDOY, SHH, SMM                             !stop times
	   1461 C
	   1462 C                                      output variables
	   1463         REAL
	   1464      .    C_TEMP/-100/, O_TEMP/-100/,                !ionization temperatures
	   1465      .    CO_RATIO/-100/,                               !abundance ratio
	   1466      .    VEL_ARR(500),

CO_OUTPUT                       Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 15
                                                                17-APR-1996 15:11:37  SMS1:[WIND.SOFTWARE.SWICS]CO_OUTPUT.FOR;57

	   1467      .    V_ALPHA_AVE/-100/                           !average of alpha velocity
	   1468 C
	   1469         CHARACTER*8
	   1470      .    RUN_DT*9,
	   1471      .    RUN_TM
	   1472 C
	   1473         INTEGER
	   1474      .    QUAL_FLAG_ARR(500), GAP_FLAG_ARR(500),
	   1475      .    QUAL_FLAG,       !denotes data quality, 0 = Good, 2 = Fair, 4 = Poor
	   1476      .    GAP_FLAG/0/                               !denotes type of data gap 
	   1477 C                                      0 = none, 1 = bad instrument mode, 
	   1478 C                                      2 = level 0 data missing, 
	   1479 C                                      3 = level 0 data too noisy,
	   1480 C                                      10 = not well defined He peak
	   1481 C                                      internal variables
	   1482         INTEGER
	   1483      .    ARR_CNT/1/,
	   1484      .    COUNTER,                                         !for average
	   1485      .    CYCLE,                                           !cycle cntr
	   1486      .    VSTEP,                                           !voltage step
	   1487      .    PHANUMBER,                                       !#pha words
	   1488      .    PAPSL, ITEMP,                                    !to calc paps
	   1489      .    I,J,K
	   1490 C
	   1491         REAL
	   1492      .    PAPS,                                            !paps voltage
	   1493      .    SUB_TIME,                                        !for sub_time rout
	   1494      .    VELOCITY(2), T4(2),                              !for hvel routine
	   1495      .    SUM_VELOCITY,                                    !for average
	   1496      .    EFFICIENCY(10080),
	   1497      .    MMPQ(2,10080),                                   !for pha routine
	   1498      .    ET(2,10080),
	   1499      .    EPQVAL(10080),
	   1500      .    C_BOX_MRANGE(3,2),                               !lo,hi m points
	   1501      .    C_BOX_MQRANGE(3,2),                              !lo, hi, m/q points
	   1502      .    O_BOX_MRANGE(3,2),                               !lo, hi m points
	   1503      .    O_BOX_MQRANGE(3,2),                              !lo, hi m/q points
	   1504      .    CO_BOX_MRANGE(2,2),                              !lo, hi m points
	   1505      .    CO_BOX_MQRANGE(2,2),                             !lo, hi m/q points
	   1506      .    OC_BOX_MRANGE(2,2),                              !lo, hi m points
	   1507      .    OC_BOX_MQRANGE(2,2),                             !lo, hi m/q points
	   1508      .    C_SPILLOVER/0.10/,                               !into O box
	   1509      .    O_SPILLOVER/0.20/,                               !into C box
	   1510      .    C_BOX_EFF/0.52/,                             !efficiency of box
	   1511      .    O_BOX_EFF/0.40/,                             !efficiency of box
	   1512      .    C_BOX(3)/0,0,0/,                              !boxes for C, C6, C5
	   1513      .    C_RAW/0/,                                        !raw counts
	   1514      .    O_BOX(3)/0,0,0/,                              !boxes for O, O7, O6
	   1515      .    O_RAW/0/,                                        !raw counts
	   1516      .    CO_BOX(2)/0,0/,                             !boxes for C at O7, O6
	   1517      .    OC_BOX(2)/0,0/,                              !boxes for O at C6, C5
	   1518      .    O_CORR,                                          !final O abund
	   1519      .    C_CORR,                                          !final C abund
	   1520      .    O7,                                          !final O abund
	   1521      .    O6,                                          !final O abund
	   1522      .    C6,                                          !final C abund
	   1523      .    C5,                                          !final C abund

CO_OUTPUT                       Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 16
                                                                 9-OCT-2002 20:01:06  SMS1:[WIND.SOFTWARE.SWICS]CO_OUTPUT.FOR;57

	   1524      .    T6,                                 !ionization temperature
	   1525      .    CRATIOS(6)/-1.35,-0.58,0.030,0.55,0.99,1.36/, 
	   1526      .    CTEMPS(6)/5.9,6.0,6.1,6.2,6.3,6.4/,              !for t6 routine
	   1527      .    ORATIOS(6)/-3.13,-2.06,-1.22,-0.59,-0.09,0.31/, 
	   1528      .    OTEMPS(6)/5.9,6.0,6.1,6.2,6.3,6.4/
	   1529 C
	   1530 	REAL DELTA					!internal function
	   1531 C
	   1532         LOGICAL
	   1533      .    FIRST/.TRUE./,                                   !first time
	   1534      .    EXCLUDE_H/.TRUE./,                               !for mmq routine
	   1535      .    EFFIC/.TRUE./,                                   !for mmq routine
	   1536      .    COMPARE_TIME_GE                                  !for time search
	   1537 C
	   1538 C***************************************************************************
	   1539 C                         
	   1540 C                            *Statements*
	   1541 C
	   1542         DO J = 1, 3
	   1543           O_BOX_MRANGE(J,1) = 15
	   1544           O_BOX_MRANGE(J,2) = 17
	   1545           C_BOX_MRANGE(J,1) = 11
	   1546           C_BOX_MRANGE(J,2) = 13
	   1547           IF (J.LE.2) THEN
	   1548             OC_BOX_MRANGE(J,1) = 15
	   1549             OC_BOX_MRANGE(J,2) = 17
	   1550             CO_BOX_MRANGE(J,1) = 11
	   1551             CO_BOX_MRANGE(J,2) = 13
	   1552           END IF
	   1553         END DO
	   1554 C
	   1555         O_BOX_MQRANGE(1,1) = 1.8
	   1556         O_BOX_MQRANGE(1,2) = 3.2
	   1557         O_BOX_MQRANGE(2,1) = 2.24
	   1558         O_BOX_MQRANGE(2,2) = 2.34
	   1559         O_BOX_MQRANGE(3,1) = 2.62
	   1560         O_BOX_MQRANGE(3,2) = 2.72
	   1561 C
	   1562         C_BOX_MQRANGE(1,1) = 1.8
	   1563         C_BOX_MQRANGE(1,2) = 3.2
	   1564         C_BOX_MQRANGE(2,1) = 1.95
	   1565         C_BOX_MQRANGE(2,2) = 2.05
	   1566         C_BOX_MQRANGE(3,1) = 2.35
	   1567         C_BOX_MQRANGE(3,2) = 2.45
	   1568 C
	   1569         OC_BOX_MQRANGE(1,1) = 1.95
	   1570         OC_BOX_MQRANGE(1,2) = 2.05
	   1571         OC_BOX_MQRANGE(2,1) = 2.35        
	   1572         OC_BOX_MQRANGE(2,2) = 2.45
	   1573 C
	   1574         CO_BOX_MQRANGE(1,1) = 2.24
	   1575         CO_BOX_MQRANGE(1,2) = 2.34
	   1576         CO_BOX_MQRANGE(2,1) = 2.62
	   1577         CO_BOX_MQRANGE(2,2) = 2.72
	   1578 C
	   1579  10     FORMAT (A,$)
	   1580  20     FORMAT (A,A)

CO_OUTPUT                       Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 17
                                                                 9-OCT-2002 20:01:06  SMS1:[WIND.SOFTWARE.SWICS]CO_OUTPUT.FOR;57

	   1581 C
	   1582 C                                                user input
	   1583         WRITE(*,20) '        Wind/SWICS CO_OUTPUT Program'
	   1584         WRITE(*,*)
	   1585 C
	   1586         WRITE(*,*)
	   1587         WRITE(*,10) ' Enter name of output file:  '
	   1588         READ(*,20) OUTFILE
	   1589         OPEN(UNIT=30, FILE=OUTFILE, STATUS='NEW', CARRIAGECONTROL='LIST')
	   1590         CALL DATE_AND_TIME(RUN_DT,RUN_TM)
	   1591         WRITE(30,20) RUN_DT(5:6)//'-'//RUN_DT(7:8)//'-'//RUN_DT(1:4)
	   1592         WRITE(30,20) RUN_TM(1:2)//':'//RUN_TM(3:4)//':'//RUN_TM(5:6)
	   1593 C
	   1594         CALL WIND_GET_FILENAME(L1FILENAME, STATUS)
	   1595         WRITE(30,*)
	   1596         WRITE(30,20) ' Input file:  '//L1FILENAME
	   1597         WRITE(30,*)
	   1598         WRITE(30,20) '                            <Delta>   ',
	   1599      .               '       <Delta>           <Delta>           <Delta>'
	   1600         WRITE(30,20) '        Time      <He vel> <He vel>   ',
	   1601      .               '<C/O>    <C/O>     <Tc>     <Tc>     <To>     <To>'
	   1602 C
	   1603         WRITE(*,*)
	   1604         WRITE(*,10) '  Do you want a time search?  '
	   1605         READ(*,20) ANSWER
	   1606         IF (ANSWER) THEN
	   1607           TSEARCH = .TRUE.
	   1608           WRITE(*,10) '   Enter start time [yyyy doy hh:mm]  '
	   1609           READ(*,30) STYY, STDOY, STHH, STMM
	   1610           START.YEAR=STYY
	   1611           START.DOY=STDOY
	   1612           START.HR=STHH
	   1613           START.MIN=STMM
	   1614           START.SEC=0
	   1615           WRITE(*,10) '   Enter stop time [yyyy doy hh:mm]  '
	   1616           READ(*,30) SYY, SDOY, SHH, SMM
	   1617           END.YEAR=SYY
	   1618           END.DOY=SDOY
	   1619           END.HR=SHH
	   1620           END.MIN=SMM
	   1621           END.SEC=0
	   1622           WRITE(30,*)
	   1623           WRITE(30,40) '  Time search:  ', STYY, STDOY, STHH, STMM,
	   1624      .                       SYY, SDOY, SHH, SMM
	   1625         END IF
	   1626 C
	   1627  30     FORMAT (I4,1X,I3,1X,I2,':',I2)
	   1628  40     FORMAT (A,I4,1X,I3,1X,I2,':',I2.2,' - ',I4,1X,I3,1X,I2,':',I2.2)
	   1629 C
	   1630         WRITE(*,*)
	   1631         WRITE(*,10) ' Enter output time interval in minutes:  '
	   1632         READ(*,*) DELTA_TIME
	   1633 C
	   1634         WRITE(*,*)
	   1635         WRITE(*,20) '     Box defaults'
	   1636         WRITE(*,20) ' O:'
	   1637         WRITE(*,*) O_BOX_MRANGE

CO_OUTPUT                       Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 18
                                                                 9-OCT-2002 20:01:06  SMS1:[WIND.SOFTWARE.SWICS]CO_OUTPUT.FOR;57

	   1638         WRITE(*,*) O_BOX_MQRANGE
	   1639         WRITE(*,20) ' C:'
	   1640         WRITE(*,*) C_BOX_MRANGE
	   1641         WRITE(*,*) C_BOX_MQRANGE
	   1642         WRITE(*,20) ' OC:'
	   1643         WRITE(*,*) OC_BOX_MRANGE
	   1644         WRITE(*,*) OC_BOX_MQRANGE
	   1645         WRITE(*,20) ' CO:'
	   1646         WRITE(*,*) CO_BOX_MRANGE
	   1647         WRITE(*,*) CO_BOX_MQRANGE
	   1648         WRITE(*,*)
	   1649         WRITE(*,10) '    Do you wish to change these?  '
	   1650         READ(*,20) ANSWER
	   1651         IF (ANSWER) THEN
	   1652           WRITE(*,10) '   Enter O, O7, O6 mass ranges:  '
	   1653           READ(*,*) O_BOX_MRANGE
	   1654           WRITE(*,10) '   Enter O, O7, O6 m/q ranges:  '
	   1655           READ(*,*) O_BOX_MQRANGE
	   1656           WRITE(*,10) '   Enter C, C6, C5 mass ranges:  '
	   1657           READ(*,*) C_BOX_MRANGE
	   1658           WRITE(*,10) '   Enter C, C6, C5 m/q ranges:  '
	   1659           READ(*,*) C_BOX_MQRANGE
	   1660           WRITE(*,10) '   Enter O in C6, C5 mass ranges:  '
	   1661           READ(*,*) OC_BOX_MRANGE
	   1662           WRITE(*,10) '   Enter O in C6, C5 m/q ranges:  '
	   1663           READ(*,*) OC_BOX_MQRANGE
	   1664           WRITE(*,10) '   Enter C in O7, O6 mass ranges:  '
	   1665           READ(*,*) CO_BOX_MRANGE
	   1666           WRITE(*,10) '   Enter C in O7, O6 m/q ranges:  '
	   1667           READ(*,*) CO_BOX_MQRANGE
	   1668         END IF                         !changing boxes
	   1669 C
	   1670 C                                      open data file and get data
	   1671         CALL WIND_L1_OPEN(LUNIT,L1FILENAME,L1_FILE_HEADER,STATUS)
	   1672         IF (STATUS.NE.1) THEN
	   1673           WRITE(*,20) ' problem opening file'
	   1674           STOP
	   1675         END IF
	   1676 C
	   1677  100    CALL WIND_L1_READ_SR(LUNIT,CNTR,L1_SR_HEADER,STATUS)
	   1678         IF (STATUS.EQ.RMS$_EOF) GOTO 2000                  !end of this file
	   1679         CALL WIND_L1_GET_BASIC(LUNIT,SCI,STATUS)
	   1680         CALL WIND_L1_GET_HDB(LUNIT,HDB,STATUS)
	   1681         CALL WIND_L1_GET_SWICS(LUNIT,SWICS_RATE, SWICS_PHA, STATUS)
	   1682 C                                                get first good spin
	   1683         N = 0
	   1684         GOODSPIN = .FALSE.
	   1685         DO WHILE (.NOT.GOODSPIN)
	   1686           K = N/32 + 1
	   1687           NN = MOD(N,31)
	   1688           GOODSPIN = BTEST(L1_SR_HEADER.PRESENT(K),NN)
	   1689           N = N + 1
	   1690           IF (N.GT.59) THEN
	   1691             GAP_FLAG = 2
	   1692             GOTO 100                  !all bad get next rec
	   1693           END IF
	   1694         END DO                                             !.not. goodspin

CO_OUTPUT                       Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 19
                                                                 9-OCT-2002 20:01:06  SMS1:[WIND.SOFTWARE.SWICS]CO_OUTPUT.FOR;57

	   1695 C
	   1696         SCTIME = SCI.EDB(0).W_TIME               !use wall time of first spin
	   1697         IF (SCTIME.DOY.EQ.0) THEN
	   1698 	type *,'skipping this record, sctime is zero'
	   1699           GAP_FLAG = 2
	   1700           GOTO 100
	   1701         END IF
	   1702         IF (.NOT.TSEARCH .OR. (COMPARE_TIME_GE(SCTIME,START) .AND.
	   1703      .            .NOT.COMPARE_TIME_GE(SCTIME,END))) THEN  !in t range
	   1704           IF (FIRST) THEN
	   1705             GAP_FLAG = 0
	   1706             FIRST = .FALSE.
	   1707             LSCTIME = SCTIME
	   1708           END IF
	   1709 C                                                          check paps
	   1710           ITEMP = HDB.BDH.DAT(61)
	   1711           CALL MVBITS(ITEMP,0,8,PAPSL,0) 
	   1712           PAPS = (190.96 - (117.15)*PAPSL)/(-1000)     !from BL 4/24/95
	   1713           IF (PAPS.LT.20) THEN                          !don't process
	   1714 	type *,'skipping this sr, PAPS, PAPSL=',paps,papsl
	   1715             GAP_FLAG = 1
	   1716             GOTO 100
	   1717           END IF
	   1718 C                                                          get velocity
	   1719           CALL WSWICS_GET_HVEL(SWICS_RATE, SCI, HDB, VELOCITY, T4)
	   1720 C                                                          get m m/q data
	   1721           CALL WSWICS_GET_MMQ(SWICS_PHA,SWICS_RATE,SCI,HDB,EXCLUDE_H,
	   1722      .        EFFIC, EPQVAL, ET, MMPQ, EFFICIENCY, PHANUMBER)
	   1723 C
	   1724           CYCLE = CYCLE + 1
	   1725 c          IF (MOD(CYCLE,10).EQ.0) WRITE(*,'(A,I9)') 
	   1726 c     .        '+  Working on cycle ', CYCLE
	   1727 	type *,'Working on cycle ', CYCLE
	   1728         ELSE
	   1729           IF (TSEARCH.AND.COMPARE_TIME_GE(SCTIME,END)) THEN !done
	   1730             CALL WIND_L1_CLOSE(LUNIT,STATUS)               !close file
	   1731             GOTO 3000  
	   1732           END IF
	   1733         END IF                                             !tsearch
	   1734 C
	   1735         IF (PHANUMBER.GT.0 .AND. VELOCITY(2).GE.200 .AND. 
	   1736      .          VELOCITY(2).LE.1000) THEN
	   1737           QUAL_FLAG = 0
	   1738 C                                                check boxes
	   1739           DO I = 1, PHANUMBER
	   1740             DO J = 1, 3
	   1741               IF (MMPQ(1,I).GE.O_BOX_MRANGE(J,1) .AND. 
	   1742      .            MMPQ(1,I).LE.O_BOX_MRANGE(J,2) .AND.
	   1743      .            MMPQ(2,I).GE.O_BOX_MQRANGE(J,1) .AND.
	   1744      .            MMPQ(2,I).LE.O_BOX_MQRANGE(J,2)) THEN      !in box
	   1745                 O_BOX(J) = O_BOX(J) + 1/EFFICIENCY(I)
	   1746                 IF (J.EQ.1) O_RAW = O_RAW + 1
	   1747               END IF                                         !check box
	   1748               IF (MMPQ(1,I).GE.C_BOX_MRANGE(J,1) .AND. 
	   1749      .            MMPQ(1,I).LE.C_BOX_MRANGE(J,2) .AND.
	   1750      .            MMPQ(2,I).GE.C_BOX_MQRANGE(J,1) .AND.
	   1751      .            MMPQ(2,I).LE.C_BOX_MQRANGE(J,2)) THEN      !in box

CO_OUTPUT                       Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 20
                                                                 9-OCT-2002 20:01:06  SMS1:[WIND.SOFTWARE.SWICS]CO_OUTPUT.FOR;57

	   1752                 C_BOX(J) = C_BOX(J) + 1/EFFICIENCY(I)
	   1753                 IF (J.EQ.1) C_RAW = C_RAW + 1
	   1754               END IF                                         !check box
	   1755             END DO                                 !J = 1, 3
	   1756             DO J = 1, 2
	   1757               IF (MMPQ(1,I).GE.OC_BOX_MRANGE(J,1) .AND. 
	   1758      .            MMPQ(1,I).LE.OC_BOX_MRANGE(J,2) .AND.
	   1759      .            MMPQ(2,I).GE.OC_BOX_MQRANGE(J,1) .AND.
	   1760      .            MMPQ(2,I).LE.OC_BOX_MQRANGE(J,2)) THEN      !in box
	   1761                 OC_BOX(J) = OC_BOX(J) + 1/EFFICIENCY(I)
	   1762               END IF                                         !check box
	   1763               IF (MMPQ(1,I).GE.CO_BOX_MRANGE(J,1) .AND. 
	   1764      .            MMPQ(1,I).LE.CO_BOX_MRANGE(J,2) .AND.
	   1765      .            MMPQ(2,I).GE.CO_BOX_MQRANGE(J,1) .AND.
	   1766      .            MMPQ(2,I).LE.CO_BOX_MQRANGE(J,2)) THEN      !in box
	   1767                 CO_BOX(J) = CO_BOX(J) + 1/EFFICIENCY(I)
	   1768               END IF                                         !check box
	   1769             END DO                                 !J = 1, 2
	   1770           END DO                                 !i = 1, phanumber
	   1771           IF (SUB_TIME(SCTIME,LSCTIME).LE.DELTA_TIME/2.) THEN
	   1772             WRITE(30,50) SCTIME.YEAR,SCTIME.DOY,SCTIME.HR,SCTIME.MIN,
	   1773      .      VELOCITY(2),DELTA(VELOCITY(2),.3), CO_RATIO,DELTA(CO_RATIO,.2),
	   1774      .      C_TEMP,DELTA(C_TEMP,.2), O_TEMP,DELTA(O_TEMP,.2), QUAL_FLAG,GAP_FLAG
	   1775           ELSE
	   1776             TIME_ARR(ARR_CNT) = SCTIME
	   1777             VEL_ARR(ARR_CNT) = VELOCITY(2)
	   1778             GAP_FLAG_ARR(ARR_CNT) = GAP_FLAG
	   1779             QUAL_FLAG_ARR(ARR_CNT) = QUAL_FLAG
	   1780             ARR_CNT = ARR_CNT + 1
	   1781           END IF
	   1782           SUM_VELOCITY = SUM_VELOCITY + VELOCITY(2)
	   1783           COUNTER = COUNTER + 1
	   1784           GAP_FLAG = 0
	   1785         ELSE
	   1786           IF (PHANUMBER.LT.0) GAP_FLAG = 1
	   1787           IF (VELOCITY(2).LT.200 .OR. VELOCITY(2).GT.1000) GAP_FLAG = 10
	   1788         END IF                                             !phanumber>0
	   1789 C                                                check time scale
	   1790         IF (SUB_TIME(SCTIME,LSCTIME).GE.DELTA_TIME) THEN
	   1791 C          V_ALPHA_AVE = SUM_VELOCITY/COUNTER
	   1792           IF (C_RAW.GT.1.AND. O_RAW.GT.1) THEN
	   1793             C_CORR = (C_BOX(1) - O_BOX(1)*O_SPILLOVER)/C_BOX_EFF
	   1794             O_CORR = (O_BOX(1) - C_BOX(1)*C_SPILLOVER)/O_BOX_EFF
	   1795             C6 = C_BOX(2) - OC_BOX(1)*O_SPILLOVER
	   1796             C5 = C_BOX(3) - OC_BOX(2)*O_SPILLOVER
	   1797             O7 = O_BOX(2) - CO_BOX(1)*C_SPILLOVER
	   1798             O6 = O_BOX(3) - CO_BOX(2)*C_SPILLOVER
	   1799             IF (C6.GT.0 .AND. C5.GT.0) C_TEMP = T6(C6/C5, CRATIOS, CTEMPS)/1E6
	   1800             IF (O7.GT.0 .AND. O6.GT.0) O_TEMP = T6(O7/O6, ORATIOS, OTEMPS)/1E6
	   1801             IF (O_CORR.GT.0 .AND. C_CORR.GT.0) CO_RATIO = C_CORR/O_CORR
	   1802             IF (C_RAW.LT.10 .OR. O_RAW.LT.10) QUAL_FLAG = 4
	   1803             IF (C_RAW.LT.40 .OR. O_RAW.LT.40) QUAL_FLAG = 2
	   1804             IF (C_RAW.GE.40 .OR. O_RAW.GE.40) QUAL_FLAG = 0
	   1805           END IF
	   1806           IF (ARR_CNT.GT.1) THEN
	   1807             WRITE(30,50) TIME_ARR(1).YEAR,TIME_ARR(1).DOY,TIME_ARR(1).HR,
	   1808      .       TIME_ARR(1).MIN, VEL_ARR(1),DELTA(VEL_ARR(1),.3), CO_RATIO,DELTA(CO_RATIO,.2),

CO_OUTPUT                       Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 21
                                                                 9-OCT-2002 20:01:06  SMS1:[WIND.SOFTWARE.SWICS]CO_OUTPUT.FOR;57

	   1809      .       C_TEMP,DELTA(C_TEMP,.2), O_TEMP,DELTA(O_TEMP,.2),
	   1810      .       QUAL_FLAG_ARR(1), GAP_FLAG_ARR(1)
	   1811           ELSE
	   1812             WRITE(30,50) SCTIME.YEAR,SCTIME.DOY,SCTIME.HR,SCTIME.MIN,
	   1813      .      VELOCITY(2),DELTA(VELOCITY(2),.3), CO_RATIO,DELTA(CO_RATIO,.2),
	   1814      .      C_TEMP,DELTA(C_TEMP,.2), O_TEMP,DELTA(O_TEMP,.2), QUAL_FLAG,GAP_FLAG
	   1815           END IF
	   1816           LSCTIME = SCTIME
	   1817           COUNTER = 0
	   1818           SUM_VELOCITY = 0
	   1819           V_ALPHA_AVE = -100
	   1820           CO_RATIO = -100
	   1821           C_TEMP = -100
	   1822           O_TEMP = -100
	   1823           C_RAW = 0
	   1824           O_RAW = 0
	   1825           DO J = 1, 3
	   1826             O_BOX(J) = 0
	   1827             C_BOX(J) = 0
	   1828             IF (J.LE.2) THEN
	   1829               OC_BOX(J) = 0
	   1830               CO_BOX(J) = 0
	   1831             END IF
	   1832           END DO
	   1833           DO I = 2, ARR_CNT-1
	   1834             WRITE(30,50) TIME_ARR(I).YEAR,TIME_ARR(I).DOY,TIME_ARR(I).HR,
	   1835      .       TIME_ARR(I).MIN, VEL_ARR(I),DELTA(VEL_ARR(I),.3), CO_RATIO,CO_RATIO,
	   1836      .       C_TEMP,C_TEMP, O_TEMP,O_TEMP,
	   1837      .       QUAL_FLAG_ARR(I), GAP_FLAG_ARR(I)
	   1838           END DO
	   1839           ARR_CNT = 1
	   1840         END IF                                             !if delt > delta_time
	   1841 C
	   1842    50   FORMAT (1X,I4,1X,I3,1X,2(I2,1X),2F9.2,6F9.3,2X,2I4)
	   1843 C                                                get next record
	   1844         GOTO 100
	   1845 C
	   1846  2000   CALL WIND_L1_CLOSE(LUNIT,STATUS)                   !close file
	   1847         WRITE(*,10) ' Do you wish to add another file?  '
	   1848         READ(*,20) ANSWER
	   1849         IF (ANSWER) THEN
	   1850           L1FILENAME = 'DATA_DIR:WI*L1*.DAT'
	   1851           CALL WIND_GET_FILENAME(L1FILENAME, STATUS)
	   1852           CALL WIND_L1_OPEN(LUNIT,L1FILENAME,L1_FILE_HEADER,STATUS)
	   1853           GOTO 100
	   1854         END IF
	   1855 C
	   1856         IF (ARR_CNT.GT.1) THEN
	   1857           IF (C_RAW.GT.1 .AND. O_RAW.GT.1) THEN
	   1858             C_CORR = (C_BOX(1) - O_BOX(1)*O_SPILLOVER)/C_BOX_EFF
	   1859             O_CORR = (O_BOX(1) - C_BOX(1)*C_SPILLOVER)/O_BOX_EFF
	   1860             C6 = C_BOX(2) - OC_BOX(1)*O_SPILLOVER
	   1861             C5 = C_BOX(3) - OC_BOX(2)*O_SPILLOVER
	   1862             O7 = O_BOX(2) - CO_BOX(1)*C_SPILLOVER
	   1863             O6 = O_BOX(3) - CO_BOX(2)*C_SPILLOVER
	   1864             IF (C6.GT.0 .AND. C5.GT.0) C_TEMP = T6(C6/C5, CRATIOS, CTEMPS)/1E6
	   1865             IF (O7.GT.0 .AND. O6.GT.0) O_TEMP = T6(O7/O6, ORATIOS, OTEMPS)/1E6

CO_OUTPUT                       Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 22
                                                                 9-OCT-2002 20:01:06  SMS1:[WIND.SOFTWARE.SWICS]CO_OUTPUT.FOR;57

	   1866             IF (O_CORR.GT.0 .AND. C_CORR.GT.0) CO_RATIO = C_CORR/O_CORR
	   1867             IF (C_RAW.LT.10 .OR. O_RAW.LT.10) QUAL_FLAG = 4
	   1868             IF (C_RAW.LT.40 .OR. O_RAW.LT.40) QUAL_FLAG = 2
	   1869             IF (C_RAW.GE.40 .OR. O_RAW.GE.40) QUAL_FLAG = 0
	   1870           END IF
	   1871           WRITE(30,50) TIME_ARR(1).YEAR,TIME_ARR(1).DOY,TIME_ARR(1).HR,
	   1872      .     TIME_ARR(1).MIN, VEL_ARR(1),DELTA(VEL_ARR(1),.3), CO_RATIO,DELTA(CO_RATIO,.2),
	   1873      .     C_TEMP,DELTA(C_TEMP,.2), O_TEMP,DELTA(O_TEMP,.2),
	   1874      .     QUAL_FLAG_ARR(1), GAP_FLAG_ARR(1)
	   1875           CO_RATIO = -100
	   1876           C_TEMP = -100
	   1877           O_TEMP = -100
	   1878           DO I = 2, ARR_CNT-1
	   1879             WRITE(30,50) TIME_ARR(I).YEAR,TIME_ARR(I).DOY,TIME_ARR(I).HR,
	   1880      .       TIME_ARR(I).MIN, VEL_ARR(I),DELTA(VEL_ARR(I),.3), CO_RATIO,CO_RATIO,
	   1881      .       C_TEMP,C_TEMP, O_TEMP,O_TEMP,
	   1882      .       QUAL_FLAG_ARR(I), GAP_FLAG_ARR(I)
	   1883           END DO
	   1884         END IF
	   1885 C
	   1886  3000	CLOSE (UNIT=30)                                    !close ouput
	   1887         STOP
	   1888         END


PROGRAM SECTIONS

    Name				 Bytes   Attributes

  1 $BSS$                               307892 NOPIC CON REL LCL NOSHR NOEXE   RD   WRT *32
  2 $DATA$                                 736 NOPIC CON REL LCL NOSHR NOEXE   RD   WRT OCTA
  3 $CODE$                               21924   PIC CON REL LCL   SHR   EXE NORD NOWRT OCTA
  4 $LINK$                                1160 NOPIC CON REL LCL NOSHR NOEXE   RD NOWRT OCTA
  5 $LITERAL$                              996   PIC CON REL LCL   SHR NOEXE   RD NOWRT OCTA
  6 L1_HEADERS                             644 NOPIC OVR REL GBL NOSHR NOEXE   RD   WRT OCTA

    Total Space Allocated               333352


ENTRY POINTS

 Address      Name     
                       
  3-00000000  CO_OUTPUT


VARIABLES

 Address      Type  Name             Address      Type  Name             Address      Type  Name           
                                                                                                           
  1-000000A0  L*4   ANSWER            2-00000200  R*4   CO_RATIO          1-0000009C  I*4   DELTA_TIME     
  2-000001F4  I*4   ARR_CNT           1-000000C0  I*4   CYCLE             2-000001C0  L*4   EFFIC          
  1-00000028  R*4   C5                2-000001E8  R*4   C_BOX_EFF         2-000001C4  L*4   EXCLUDE_H      
  1-0000002C  R*4   C6                1-00000038  R*4   C_CORR            2-000001C8  L*4   FIRST          
  1-000000AC  I*4   CNTR              2-000001E0  R*4   C_RAW             2-000001F8  I*4   GAP_FLAG       
  1-000000A8  L*4   CODE_C            2-000001F0  R*4   C_SPILLOVER       1-000000A4  L*4   GOODSPIN       
  1-00000074  I*4   COUNTER           2-00000208  R*4   C_TEMP            1-00000060  I*4   I              

CO_OUTPUT                       Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 23
                                                                 9-OCT-2002 20:01:06  SMS1:[WIND.SOFTWARE.SWICS]CO_OUTPUT.FOR;57

 Address      Type  Name             Address      Type  Name             Address      Type  Name           
                                                                                                           
  1-00000064  I*4   ITEMP             2-000001DC  R*4   O_RAW             1-000000B8  I*4   STATUS         
  1-0000005C  I*4   J                 2-000001EC  R*4   O_SPILLOVER       1-00000094  I*4   STDOY          
  1-00000058  I*4   K                 2-00000204  R*4   O_TEMP            1-00000090  I*4   STHH           
  2-00000290  CHAR  L1FILENAME        1-00000054  R*4   PAPS              1-0000008C  I*4   STMM           
  2-00000210  I*4   LUNIT             1-00000068  I*4   PAPSL             1-00000098  I*4   STYY           
  1-000000B4  I*4   N                 1-0000006C  I*4   PHANUMBER         1-00000040  R*4   SUM_VELOCITY   
  1-000000B0  I*4   NN                1-00000078  I*4   QUAL_FLAG         1-00000088  I*4   SYY            
  1-00000030  R*4   O6                1-000000C8  CHAR  RUN_DT            2-0000020C  L*4   TSEARCH        
  1-00000034  R*4   O7                1-00000000  CHAR  RUN_TM            1-00000070  I*4   VSTEP          
  1-0003C9F0  CHAR  OUTFILE           1-00000084  I*4   SDOY              2-000001FC  R*4   V_ALPHA_AVE    
  2-000001E4  R*4   O_BOX_EFF         1-00000080  I*4   SHH               1-000000BC  I*4   WIND_DECOMPRESS
  1-0000003C  R*4   O_CORR            1-0000007C  I*4   SMM                                                


TYPES/RECORDS

 Address      Name           Structure              Bytes  Address      Name           Structure              Bytes
                                                                                                                   
  1-00000020  END            T                          8   1-000495B8  SCI            CORE                    7384
  1-00049470  HDB            HDBSTR                   324   1-00000008  SCTIME         T                          8
  6-00000000  L1_FILE_HEADER ST_L1_FILE_HEADER        400   1-00000018  START          T                          8
  6-00000190  L1_SR_HEADER   ST_L1_SR_HEADER          244   1-0003F600  SWICS_PHA      SW_PHA                 40560
  1-00000010  LSCTIME        T                          8   1-0003D9E0  SWICS_RATE     SW_RATE                 7200


ARRAYS

 Address      Type  Name                  Bytes  Dimensions

  2-000001D4  R*4   CO_BOX                    8  (2)
  1-000000F8  R*4   CO_BOX_MQRANGE           16  (2, 2)
  1-00000108  R*4   CO_BOX_MRANGE            16  (2, 2)
  2-0000025C  R*4   CRATIOS                  24  (6)
  2-00000244  R*4   CTEMPS                   24  (6)
  2-00000280  R*4   C_BOX                    12  (3)
  1-00000148  R*4   C_BOX_MQRANGE            24  (3, 2)
  1-00000160  R*4   C_BOX_MRANGE             24  (3, 2)
  1-00031500  R*4   EFFICIENCY            40320  (10080)
  1-00000180  R*4   EPQVAL                40320  (10080)
  1-00009F00  R*4   ET                    80640  (2, 10080)
  1-0003B280  I*4   GAP_FLAG_ARR           2000  (500)
  1-0001DA00  R*4   MMPQ                  80640  (2, 10080)
  2-000001CC  R*4   OC_BOX                    8  (2)
  1-000000D8  R*4   OC_BOX_MQRANGE           16  (2, 2)
  1-000000E8  R*4   OC_BOX_MRANGE            16  (2, 2)
  2-0000022C  R*4   ORATIOS                  24  (6)
  2-00000214  R*4   OTEMPS                   24  (6)
  2-00000274  R*4   O_BOX                    12  (3)
  1-00000118  R*4   O_BOX_MQRANGE            24  (3, 2)
  1-00000130  R*4   O_BOX_MRANGE             24  (3, 2)
  1-0003BA50  I*4   QUAL_FLAG_ARR          2000  (500)
  1-00000044  R*4   T4                        8  (2)
  1-0000004C  R*4   VELOCITY                  8  (2)
  1-0003C220  R*4   VEL_ARR                2000  (500)


CO_OUTPUT                       Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 24
                                                                 9-OCT-2002 20:01:06  SMS1:[WIND.SOFTWARE.SWICS]CO_OUTPUT.FOR;57

TYPE/RECORD ARRAYS

 Address      Name       Structure        Bytes  Dimensions

  1-0003CA40  TIME_ARR   T                 4000  (500)


LABELS

 Address      Label  Address      Label  Address      Label
                                                           
      **      100         **      2000        **      3000 

CO_OUTPUT                       Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 25
                                                                 9-OCT-2002 20:01:06  SMS1:[WIND.SOFTWARE.SWICS]CO_OUTPUT.FOR;57

	   1889 C*****************************************************************************
	   1890         FUNCTION SUB_TIME(TIME, LTIME)
	   1891 C
	   1892 C       this function calculates the minutes between two times
	   1893 C
	   1894         IMPLICIT NONE
	   1895 C
	   1896         INCLUDE 'INC_DIR:EDBDEF.INC/NOLIST'
	   2434         INCLUDE 'INC_DIR:L1FMT.INC/NOLIST'
	   2566         INCLUDE '($RMSDEF)'
	   2567 C
	   2568 !*** MODULE $RMSDEF ***
	   2569 !DEC$ OPTIONS/ALIGN=(RECORDS=PACKED,COMMONS=PACKED)
	   2570  ! 
	   2571  !  This SDL File Generated by VAX-11 Message V04-00 on 29-NOV-1995 18:46:08.43
	   2572  ! 
	   2573  ! 	.TITLE	RMSMSG -RMS COMPLETION CODES
	   2574  !  *************************************************************************
	   2575  !  *                                                                       *
	   2576  !  * COPYRIGHT (C) DIGITAL EQUIPMENT CORPORATION, 1976, 1977, 1978, 1979,  *
	   2577  !  * 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990,     *
	   2578  !  * 1991,1992                                                             *
	   2579  !  * ALL RIGHTS RESERVED.                                                  *
	   2580  !  * UNPUBLISHED RIGHTS RESERVED UNDER THE COPYRIGHT LAWS  OF  THE  UNITED *
	   2581  !  * STATES.                                                               *
	   2582  !  *                                                                       *
	   2583  !  * THE SOFTWARE CONTAINED ON THIS MEDIA IS PROPRIETARY TO  AND  EMBODIES *
	   2584  !  * THE   CONFIDENTIAL   TECHNOLOGY  OF  DIGITAL  EQUIPMENT  CORPORATION. *
	   2585  !  * POSSESSION, USE, DUPLICATION OR DISSEMINATION  OF  THE  SOFTWARE  AND *
	   2586  !  * MEDIA  IS  AUTHORIZED  ONLY  PURSUANT TO A VALID WRITTEN LICENSE FROM *
	   2587  !  * DIGITAL EQUIPMENT CORPORATION.                                        *
	   2588  !  *                                                                       *
	   2589  !  * RESTRICTED RIGHTS LEGEND USE, DUPLICATION, OR DISCLOSURE BY THE  U.S. *
	   2590  !  * GOVERNMENT  IS  SUBJECT  TO RESTRICTIONS AS SET FORTH IN SUBPARAGRAPH *
	   2591  !  * (C)(1)(II) OF DFARS 252.227-7013, OR IN FAR 52.227-19, AS APPLICABLE. *
	   2592  !  *                                                                       *
	   2593  !  *************************************************************************
	   2594  ! ++
	   2595  !  FACILITY: RMS
	   2596  ! 
	   2597  !  ABSTRACT:
	   2598  ! 
	   2599  ! 	THIS MODULE DEFINES ALL RMS COMPLETION CODES.
	   2600  ! 
	   2601  !  ENVIRONMENT:
	   2602  ! 
	   2603  ! 	THE MESSAGE TRANSLATOR MUST BE USED TO CONVERT RMSMSG.MSG INTO
	   2604  ! 	RMSMSG.SDL.  THE SDL TRANSLATOR MUST THEN BE USED TO CONVERT
	   2605  ! 	RMSMSG.SDL INTO RMSMSG.MAR (AND RMSMSG.B32).
	   2606  ! 
	   2607  !  AUTHOR: LEO F. LAVERDURE,	CREATION DATE:  10-DEC-1976
	   2608  ! 
	   2609  !  MODIFIED BY:
	   2610  ! 
	   2611  ! 	X-7	EMW	    ELINOR M. WOODS	       10-AUG-1994
	   2612  ! 		MERGE IN OPENVMS VAX DRAGON CHANGE:
	   2613  ! 

SUB_TIME                        Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 26
                                                                 9-OCT-2002 20:01:06  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	   2614  ! 		X-13  EMW0023	ELINOR M. WOODS		04-AUG-1994
	   2615  ! 		RMS$_KRF CAN BE RETURNED BY $CONNECT OR $REWIND, AS
	   2616  ! 		WELL AS $GET/$FIND.  MAKE TEXT ASSOCIATED WITH KRF
	   2617  ! 		STATUS MORE GENERIC BY REMOVING "for $GET/$FIND."
	   2618  ! 
	   2619  !        X-6     EMW		ELINOR M. WOODS		30-JUN-1994
	   2620  ! 		MERGE IN OPENVMS VAX DRAGON CHANGE:
	   2621  ! 
	   2622  ! 		X-12   EMW0026   ELINOR M. WOODS	15-JUN-1994
	   2623  ! 		ADD ONE NEW USER-REPORTABLE STATUS:  NXR 
	   2624  ! 		<nonexistent record>.  THIS STATUS VALUE IS USED 
	   2625  ! 		AS AN STV ASSOCIATED WITH RNF STATUS (STS), AND IS
	   2626  ! 		REPORTED FOR AN EXACT KEY MATCH OF A SECONDARY KEY
	   2627  ! 		IF THE SECONDARY KEY ENTRY POINTS TO A NONEXISTENT
	   2628  ! 		PRIMARY DATA RECORD IN DISK FILE.  NOTE:  RNF ERROR 
	   2629  ! 		STATUS PRE-EXISTED AS ERROR CODE WITHOUT STV.
	   2630  ! 
	   2631  !                DEE RYAN                                30-SEP-1993
	   2632  !                CORRECTED USE OF DIGITAL PRODUCT NAMES.
	   2633  ! 
	   2634  ! 	X-5	EMW		ELINOR M. WOODS		28-SEP-1993
	   2635  ! 		MERGE IN OPENVMS VAX CORAL FIX:
	   2636  ! 
	   2637  ! 		X-10	EMW0019  ELINOR M. WOODS  	21-SEP-1993
	   2638  ! 		ADD ONE NEW USER-REPORTABLE ERROR STATUS (WITH AN
	   2639  ! 		ASSOCIATED STV): NETBTS.  RELOCATE NEW IDXSEARCH STATUS
	   2640  ! 		(SEE X-9) FROM "ERROR with STV" SECTION TO "ERROR WITHOUT 
	   2641  ! 		STV" section.  Expand "WITH STV' AND "without STV"
	   2642  ! 		COMMENTS TO CLARIFY DIFFERENCE BETWEEN TWO.
	   2643  ! 
	   2644  ! 	X-4	EMW0016		ELINOR M. WOODS		10-AUG-1993
	   2645  ! 		MERGE IN CORAL FIX:
	   2646  ! 
	   2647  ! 		MODIFY SEVERITY OF TWO DTF ERROR CODES (DTFACC AND
	   2648  ! 		DTFCRE) FROM FATAL TO ERROR, AS REQUESTED BY SNA/DTF
	   2649  ! 		FACILITY.		
	   2650  ! 
	   2651  ! 		ALSO MOVE NEW IDXSEARCH STATUS FROM ERROR WITH NO 
	   2652  ! 		STV GROUPING TO ERROR WITH STV GROUPING.
	   2653  ! 
	   2654  ! 	X-3	EMW0010		ELINOR M. WOODS		02-JUL-1993
	   2655  ! 		TO SUPPORT NEW KEY-LESS-THAN FUNCTIONALITY, ADDITION 
	   2656  ! 		OF ONE USER-REPORTABLE ERROR STATUS:  IDXSEARCH, AND
	   2657  ! 		TWO NEW RMS-INTERNAL ERROR STATUSES:  LSCAN AND 
	   2658  ! 		ROOTSRCH.		
	   2659  ! 
	   2660  ! 	X-2	CW0019		CHRIS WHITAKER		11-NOV-1992
	   2661  ! 		MERGE IN OPENVMS VAX V6.0 CHANGES
	   2662  ! 
	   2663  ! 		X-8	JM0012	JOHN MUNZER		11-NOV-1992
	   2664  ! 		CHANGE TEXT FOR RMS$_LNE.
	   2665  ! 
	   2666  ! 		X-7	JM0006	JOHN MUNZER		17-APR-1992
	   2667  ! 		ADD !XL PARAMETER TO RMS$_BUG TO REPORT R2.
	   2668  ! 
	   2669  ! 	X-1	RAB		RICHARD A. BISHOP	24-JUN-1991
	   2670  ! 		MOVED TO [STARLET] FACILITY

SUB_TIME                        Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 27
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	   2671  ! 
	   2672  ! 	==================================
	   2673  ! 	OLD AUDIT TRAIL FOLLOWS:
	   2674  ! 
	   2675  ! 	X-33	LSS0154		LEONARD S. SZUBOWICZ	 4-APR-1990
	   2676  ! 		ALTER TEXT AND FAO PARAMETERS OF RMS$_RUH AND RMS$_BUG
	   2677  ! 		CONDITION VALUES FOR RMS/DDTM SUPPORT.
	   2678  ! 
	   2679  ! 	X-32	PJH		PAUL J. HOULIHAN	17-JAN-1990
	   2680  ! 		CHANGE TEXT FOR RMS$_INCOMPSHR ERROR MESSAGE.
	   2681  ! 
	   2682  ! 	X-31	LSS0130		LEONARD S. SZUBOWICZ	12-OCT-1989
	   2683  ! 		MERGE OF RMS/DDTM GENERATION X-30D2.
	   2684  ! 		ADD GENERAL DDTM_ERR ERROR MESSAGE FOR DDTM SERVICE FAILURES;
	   2685  ! 		STV WILL CONTAIN THE FAILING SYSTEM SERVICE CONDITION VALUE.
	   2686  ! 
	   2687  ! 	X-30	LSS0080		LEONARD S. SZUBOWICZ	06-OCT-1988
	   2688  ! 		ADD RMS$_OK_ACT MESSAGE FOR USE BY FUTURE WORK TO $DISPLAY.
	   2689  ! 		THIS IS PART OF LATENT SUPPORT FOR RMS/DDTM.
	   2690  ! 
	   2691  ! 	X-29	GJA0080		GARY J. ALLISON		06-JUN-1988
	   2692  ! 		CHANGE TEXT OF SEMANTICS MESSAGE.
	   2693  ! 
	   2694  ! 	X-28	GJA0072		GARY J. ALLISON		02-MAR-1988
	   2695  ! 		ADD EXT_ERR, OPNOTSUP, EXTNOTFOU, AND SEMANTICS MESSAGES.
	   2696  ! 
	   2697  ! 	X-27	PMV0072		PETER M. VATNE		08-OCT-1987
	   2698  ! 		CHANGE RMS$_NOJNLLIC TO RMS$_JNLNOTAUTH.
	   2699  ! 
	   2700  !  	X-26	LSS0057		LEONARD S. SZUBOWICZ	15-SEP-1987
	   2701  ! 		CHANGE TEXT FOR THE RMS$_OK_DUP STATUS SUCH THAT THE MESSAGE
	   2702  ! 		IS APPLICABLE TO $GET AS WELL AS $PUT.
	   2703  ! 
	   2704  ! 	X-25	PMV0068		PETER M. VATNE		11-SEP-1987
	   2705  ! 		ADD RMS$_NOJNLLIC, NO RMS JOURNALING LICENSE, FOR LMF.
	   2706  ! 
	   2707  ! 	X-24	RNM0026		RUSSELL N. MURRAY	15-AUG-1987
	   2708  ! 		ADD RMS$_SYNCH MESSAGE FOR NOTIFICATION OF SYNCHRONOUS
	   2709  ! 		COMPLETION.
	   2710  ! 
	   2711  ! 	X-23	JEJ0479		JAMES E JOHNSON		13-AUG-1987
	   2712  ! 		ADD RMS$_IVATRACE MESSAGE.
	   2713  ! 
	   2714  ! 	X-22	PMV0061		PETER M. VATNE		03-AUG-1987
	   2715  ! 		CHANGE RESERVED MESSAGE RMS$_BUG_XX5 TO RMS$_BUG_RU_COMMIT_FAIL
	   2716  ! 		TO CORRESPOND TO POSITIVE RMS BUGCHECK FTL$_RU_COMMIT_FAIL.
	   2717  ! 
	   2718  !  	X-21	LSS0042		LEONARD S. SZUBOWICZ	13-MAY-1987
	   2719  ! 		CHANGE RESERVED MESSAGE RMS$_BUG_XX4 TO RMS$_BUG_RU_ABORT_FAIL
	   2720  ! 		TO CORRESPOND TO POSITIVE RMS BUGCHECK FTL$_RU_ABORT_FAIL
	   2721  ! 	
	   2722  ! 	X-20	SAD0034		STUART A. DAVIDSON	12-MAR-1987 
	   2723  ! 		DROP QUOTES FROM SNADTF MESSAGE TEXT.
	   2724  ! 
	   2725  ! 	X-19	PJH		PAUL J. HOULIHAN	19-JAN-1987
	   2726  ! 		MERGE IN 17J1.
	   2727  ! 

SUB_TIME                        Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 28
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	   2728  ! 		X-17J1	PJH		PAUL J. HOULIHAN	15-JAN-1987
	   2729  ! 			FIX SEVERAL SMALL JNL PROBLEMS.
	   2730  ! 			ADD RMS$_BUG_FLUSH_JNL_FAILED CODE.
	   2731  ! 
	   2732  ! 	X-18	KPS0148		KENNETH P. SIEGEL	04-DEC-1986
	   2733  ! 		ADDED SNPPF (STATISTICS MONITORING NOT SUPPORTED FOR
	   2734  ! 		PROCESS PERMANENT FILES) ERROR MESSAGE.
	   2735  ! 
	   2736  ! 	X-17	PMV0025		PETER M. VATNE		24-NOV-1986
	   2737  ! 		ADD NEW MESSAGE, RMS$_NOTSAMEJNL.  THIS STATUS IS
	   2738  ! 		USED TO RESTRICT AI/BI WITH RU JOURNALING TO A
	   2739  ! 		SINGLE LONG-TERM JOURNAL FILE.
	   2740  ! 
	   2741  ! 	X-16	DAS		DAVID A. SOLOMON	18-NOV-1986
	   2742  ! 		ADD NEW MESSAGE, RMS$_DELJNS. REMOVE RMS$_XCR (BY REPLACING IT
	   2743  ! 		WITH A PLACEHOLDER), AS JOURNALING BITS ARE NO LONGER
	   2744  ! 		SPECIFIED IN THE $XABJNL. SLIGHT WORDING CHANGE ON DETACHED
	   2745  ! 		RU RECOVERY ERROR MESSAGES.
	   2746  ! 
	   2747  ! 	X-15	DAS		DAVID A. SOLOMON	12-NOV-1986
	   2748  ! 		FIX ERROR IN X-5/X-6: JOURNALING VARIANT NOT MERGED
	   2749  ! 		CORRECTLY, RESULTING IN SEVERAL JOURNALING MESSAGES NUMBERS
	   2750  ! 		BEING DIFFERENT IN THE MAININE THAN WHAT THEY WERE ON THE
	   2751  ! 		JOURNALING VARIANT. ALSO, MOVE NEW SNADTF MESSAGES TO RE-USE
	   2752  ! 		AVAILABLE UNUSED MESSAGE NUMBERS, INSTEAD OF GENERATING NEW
	   2753  ! 		ONES. FINALLY, CHANGE RMS$_BUG_ABORT TO RMS$_BUG_RU_ACTIVE.
	   2754  ! 
	   2755  ! 	X-14	SAD0014		STUART A. DAVIDSON	 4-NOV-1986
	   2756  ! 		SNADTF - FIX TYPO IN DTFACC, DTFCRE
	   2757  ! 
	   2758  ! 	X-13	SAD0014		STUART A. DAVIDSON	 3-NOV-1986
	   2759  ! 		SNADTF - FIX TYPO, ADD 2 ADDITIONAL MESSAGES.
	   2760  ! 
	   2761  ! 	X-12	JEJ0377		JAMES E JOHNSON		29-OCT-1986
	   2762  ! 		ADD NOEXTEND ERROR CODE TO FLAG FAILED RELATIVE FILE
	   2763  ! 		EXTENDS DUE TO PREVIOUS FAILURES.
	   2764  ! 
	   2765  ! 	X-11	KPS0131		KENNETH P. SIEGEL	25-OCT-1986
	   2766  ! 		ADDED SNS ERROR CODE FOR STATISTICS NOT SUPPORT ON
	   2767  ! 		NON-DISK DEVICES.
	   2768  ! 
	   2769  ! 	X-10	SAD009		STUART A. DAVIDSON	06-OCT-1986
	   2770  ! 		ADD COMPLETION CODES FOR SNADTF (IBM DATA XFER)
	   2771  ! 
	   2772  ! 	X-9	GJA0003		GARY J. ALLISON		29-SEP-1986
	   2773  ! 		ADD DETACHED RECOVERY ERROR MESSAGES
	   2774  ! 
	   2775  ! 	X-8	PMV0008		PETER M. VATNE		24-SEP-1986
	   2776  ! 		MODIFY RMS$_ACC_AIJ, RMS$_ACC_BIJ, AND RMS$_ACC_ATJ
	   2777  ! 		TO ALSO OUTPUT THE STV.
	   2778  ! 
	   2779  ! 	X-7	JWT0243		JIM TEAGUE		 2-SEP-1986
	   2780  ! 		ADD NEW ERRORS FOR COLLATED KEYS.
	   2781  ! 
	   2782  ! 	X-6	GJA		GARY J. ALLISON		29-JUL-1986
	   2783  ! 		REMOVE DUPS FROM JNL MERGE.
	   2784  ! 

SUB_TIME                        Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 29
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	   2785  ! 	X-5	GJA		GARY J. ALLISON		29-JUL-1986
	   2786  ! 		MERGE JOURNALING INTO MAINLINE
	   2787  ! 
	   2788  ! 		X-3J6	DAS		DAVID A. SOLOMON	14-APR-1986
	   2789  ! 			REMOVE RMS$_RUH_FILE (USING A GENERAL RUF MESSAGE INSTEAD).
	   2790  ! 			CHANGE RMS$_RUH TEXT TO NOT HAVE FAO PARAMETERS. ADD
	   2791  ! 			RMS$_BUG_RURECERR.
	   2792  ! 	
	   2793  ! 		X-3J5	JEJ0302		JAMES E JOHNSON		 4-APR-1986
	   2794  ! 			ADD RMS$_RRF (ERROR DURING RU RECOVERY) AND
	   2795  ! 			RMS$_RUH/RMS$_RUH_FILE (USED TO FORM TEXT OF RU HANDLER ERRORS
	   2796  ! 			SENT TO OPCOM).
	   2797  ! 	
	   2798  ! 		X-3J4	JEJ0272		JAMES E JOHNSON		11-FEB-1986
	   2799  ! 			ADD RMS$_RUF, RMS$_BUG_ABORT CODES.
	   2800  ! 	
	   2801  ! 		X-3J3	JEJ0237		JAMES E JOHNSON		16-DEC-1985
	   2802  ! 			ADD RMS$_RUNDOWN CODE
	   2803  ! 	
	   2804  ! 		X-3J2	JEJ0205		JAMES E JOHNSON		25-OCT-1985
	   2805  ! 			ADD JOURNAL SPECIFIC WRTJNL_XXJ ERROR CODES TO REPLACE
	   2806  ! 			THE GENERIC ERRWRTJNL CODE.
	   2807  ! 
	   2808  ! 	X-4	JEJ0216		JAMES E JOHNSON		18-NOV-1985
	   2809  ! 		MERGE X-3J2 INTO MAIN LINE FOR V4.4.
	   2810  ! 
	   2811  ! 		X-3J2	JEJ0205		JAMES E JOHNSON		25-OCT-1985
	   2812  ! 			ADD JOURNAL SPECIFIC WRTJNL_XXJ ERROR CODES TO REPLACE
	   2813  ! 			THE GENERIC ERRWRTJNL CODE.
	   2814  ! 
	   2815  ! 	X-3	JEJ0161		JAMES E JOHNSON		 9-SEP-1985
	   2816  ! 		UPDATE RMS JOURNALING MESSAGES.
	   2817  ! 
	   2818  ! 	X-2	JWT0212		JIM TEAGUE		 4-SEP-1985
	   2819  ! 		ADD (WHAT IS FOR NOW) AN INTERNAL STATUS CODE TO 
	   2820  ! 		DIFFERENTIATE BETWEEN FINDING A DELETED RECORD (DEL)
	   2821  ! 		AND FINDING IT BUT WITH A DIFFERENT KEY (KEY_MISMATCH).
	   2822  ! 		
	   2823  ! 	V03-024	RAS0314		RON SCHAEFER		21-JUN-1984
	   2824  ! 		WORK OVER THE MESSAGES ONE MORE TIME:  FIX TYPO IN OK_RNF,
	   2825  ! 		DELETE ACPEOF ERROR, DELETE WSF ERROR.
	   2826  ! 
	   2827  ! 	V03-023	RAS0282		RON SCHAEFER		28-MAR-1984
	   2828  ! 		MINOR TEXT CHANGES AND COMMENTS ADDED.
	   2829  ! 		DELETE RMS$_COP ERROR.
	   2830  ! 
	   2831  ! 	V03-022	DAS0005		DAVID SOLOMON		19-MAR-1984
	   2832  ! 		REMOVE RMS$_ECHO (NO LONGER NEEDED AS A RESULT OF NEW
	   2833  ! 		IMPLEMENTATION FOR ECHO SYS$INPUT -> SYS$OUTPUT).
	   2834  ! 
	   2835  ! 	V03-021	JWT0150		JIM TEAGUE		01-FEB-1984
	   2836  ! 		ADD RMS$_IFF FOR TRYING TO WRITE-ACCESS A FILE ON 
	   2837  ! 		MAGTAPE THAT HAS NON-0 VALUE FOR ANSI BUFFER OFFSET.
	   2838  ! 
	   2839  ! 	V03-020	RAS0233		RON SCHAEFER		 9-JAN-1984
	   2840  ! 		ADD RMS$_NOVALPRS ERROR FOR $SEARCH NOT PRECEDED BY
	   2841  ! 		VALID $PARSE.

SUB_TIME                        Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 30
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	   2842  ! 
	   2843  ! 	V03-019	JWT0148		JIM TEAGUE		20-DEC-1983
	   2844  ! 		ADD A JNL XAB ERROR FOR CONFLICTING RU ATTRIBUTES
	   2845  ! 		ON $CREATE: RMS$_XCR.
	   2846  ! 
	   2847  ! 	V03-018	RAS0171		RON SCHAEFER		28-JUL-1983
	   2848  ! 		ADD RMS$_BUSY; A STRUCTURE-LESS ERROR (R0-ONLY STATUS)
	   2849  ! 		REPLACING TEMP3.
	   2850  ! 
	   2851  ! 	V03-017	DAS0004		DAVID SOLOMON		28-JUN-1983
	   2852  ! 		ADD RMS$_FILEPURGED; ADD RMS$_ACPEOF FOR ZALEWSKI.
	   2853  ! 
	   2854  ! 	V03-016	KPL0007		PETER LIEBERWIRTH	 8-JUN-1983
	   2855  ! 		FIX SPELLING IN JNL ERROR MESSAGES, ADD CJF ERROR WHICH
	   2856  ! 		WILL SOON SUBSUME COP AND CQE.
	   2857  ! 
	   2858  ! 	V03-015	DAS0003		DAVID SOLOMON		18-FEB-1983
	   2859  ! 		ADD XNF (REPLACING TEMP9), TMR (NEW), LWC (NEW).
	   2860  ! 
	   2861  ! 	V03-014	KBT0497		KEITH B. THOMPSON	18-FEB-1983
	   2862  ! 		ADD INCOMPSHR ERROR (REUSE OF TEMP1 SLOT)
	   2863  ! 
	   2864  ! 	V03-013	RAS0120		RON SCHAEFER		 2-FEB-1983
	   2865  ! 		ADD ECHO PSEUDO-STATUS TO SUPPORT ECHO OF SYS$INPUT
	   2866  ! 		TO SYS$OUTPUT.
	   2867  ! 
	   2868  ! 	V03-012	JWH0174		JEFFRY W. HORN		24-JAN-1983
	   2869  ! 		ADD CQE AND COP ERRORS.
	   2870  ! 
	   2871  ! 	V03-011	KPL0006		PETER LIEBERWIRTH	 7-JAN-1983
	   2872  ! 		ADD OK_RULK FOR RECOVERY UNIT SUPPORT.
	   2873  ! 
	   2874  ! 		ADD REENT ERROR FOR $RENAME.
	   2875  ! 		
	   2876  ! 	V03-009	JWH0153		JEFFREY W. HORN		 8-DEC-1982
	   2877  ! 		ADD NRU ERROR.
	   2878  ! 
	   2879  ! 	V03-008	JWH0152		JEFFREY W. HORN		 8-DEC-1982
	   2880  ! 		ADD JNS ERROR.
	   2881  ! 
	   2882  ! 	V03-007 MCN0002		MARIA DEL C. NASR	15-NOV-1982
	   2883  ! 		REPLACE ORD ERROR CODE ELIMINATED BY MCN0001, SINCE
	   2884  ! 		THE NETWORK CODE REFERENCES IT.
	   2885  ! 
	   2886  ! 	V03-006 MCN0001		MARIA DEL C. NASR	26-OCT-1982
	   2887  ! 		PRINT KEY OF REFERENCE OR AREA IDENTIFICATION NUMBER
	   2888  ! 		INSTEAD OF XAB ADDRESS FOR ERRORS RETURNED DURING
	   2889  ! 		INDEXED FILE CREATION.  ALSO RENAME ALL UNUSED ERROR
	   2890  ! 		CODES TO TEMP.
	   2891  ! 
	   2892  ! 	V03-005	JWH0102		JEFFREY W. HORN		24-SEP-1982
	   2893  ! 		ADD RUP ERROR.
	   2894  ! 
	   2895  ! 	V03-004	RAS0095		RON SCHAEFER		 7-SEP-1982
	   2896  ! 		ADD OVRDSKQUOTA ERROR.
	   2897  ! 
	   2898  ! 	V03-002	JWH0002		JEFFREY W. HORN		26-JUL-1982

SUB_TIME                        Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 31
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	   2899  ! 		CONVERT TO .MSG FORMAT.   ADD RUM ERROR.
	   2900  ! 
	   2901  ! 	V03-001	JWH0001		JEFFREY W. HORN		20-JUL-1982
	   2902  ! 		ADD JNF, JOP, AND NOJ ERRORS.
	   2903  ! 
	   2904  ! 	V02-042	KPL0005		PETER LIEBERWIRTH	 4-FEB-1982
	   2905  ! 		ADD ERROR MESSAGES RMS$_EXENQLM AND RMS$_DEADLOCK
	   2906  ! 		CORRECTLY.
	   2907  ! 
	   2908  ! 	V02-041	CDS0001		C D SAETHER	24-JAN-1982
	   2909  ! 		ADD GBC AND CRMP ERRORS.
	   2910  ! 
	   2911  ! 	V02-040	JAK0069		J A KRYCKA	15-JAN-1982
	   2912  ! 		ADD SUPPORT AND NETFAIL ERROR CODES.
	   2913  ! 
	   2914  ! 	V02-039	JAK0068		J A KRYCKA	31-DEC-1981
	   2915  ! 		MODIFY TEXT FOR SUP, NET, BUG_DAP, AND ENV ERROR MESSAGES.
	   2916  ! 
	   2917  ! 	V02-038 LJA0001		LAURIE ANDERSON 20-DEC-1981
	   2918  ! 		MODIFIED SOME MESSAGES TO READ BETTER.
	   2919  ! 
	   2920  ! 	V02-037	JAK0063		J A KRYCKA	31-AUG-1981
	   2921  ! 		ADD CRE_STM SUCCESS CODE.
	   2922  ! 
	   2923  ! 	V02-036	KPL0004		PETER LIEBERWIRTH	13-JAN-1981
	   2924  ! 		ADD ENQ SEVERE ERROR MESSAGE, TO INDICATE $ENQ/$DEQ FAILURE.
	   2925  ! 		ALSO ADD SUCCESS CODES OK_RRL, AND OK_WAT.
	   2926  ! 
	   2927  ! 	V02-035	REFORMAT	J A KRYCKA	30-JUL-1980
	   2928  ! 
	   2929  ! --
	   2930 	PARAMETER RMS$_FACILITY = '00000001'X
	   2931 	PARAMETER RMS$V_STVSTATUS = '0000000E'X	 !  MOVE TO BIT 14 OF THE
	   2932  !  STATUS CODE IT INDICATES
	   2933  !  THAT STV CONTAINS A SECONDARY
	   2934  !  STATUS CODE.
	   2935 	PARAMETER RMS$_SUC = '00010001'X
	   2936 	PARAMETER RMS$_NORMAL = '00010001'X
	   2937  ! +
	   2938  ! 
	   2939  ! 	SUCCESS CODES
	   2940  ! 
	   2941  ! -
	   2942  !  BIT 16 = BIT 15 = 1
	   2943 	PARAMETER RMS$_STALL = '00018001'X
	   2944  !  (NOTE: USER NEVER RECEIVES THIS CODE)
	   2945 	PARAMETER RMS$_PENDING = '00018009'X
	   2946 	PARAMETER RMS$_OK_DUP = '00018011'X
	   2947 	PARAMETER RMS$_OK_IDX = '00018019'X
	   2948  !   (RECORD HAS BEEN INSERTED, BUT INDEX STRUCTURE IS NO LONGER
	   2949  !   OPTIMAL.)
	   2950 	PARAMETER RMS$_OK_RLK = '00018021'X
	   2951  !  (BECAUSE LOCKER SET RLK IN ROP FIELD WHEN RECORD WAS LOCKED.)
	   2952 	PARAMETER RMS$_OK_RRL = '00018029'X
	   2953  !  (BECAUSE READER SET RRL IN ROP FIELD WHEN ACCESSING RECORD.)
	   2954  !  (THIS CODE USED TO BE OK_RRV)
	   2955  ! OK_RRV	;MSG <record was inserted successfully in primary>

SUB_TIME                        Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 32
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	   2956  !   (BUT IT MAY NOT BE ACCESSIBLE VIA ONE-OR-MORE SECONDARY KEYS,
	   2957  !   AND NOT BY RFA ADDRESSING. FILE RE-ORGANIZATION RECOMMENDED!)
	   2958 	PARAMETER RMS$_KFF = '00018031'X
	   2959 	PARAMETER RMS$_OK_ALK = '00018039'X
	   2960 	PARAMETER RMS$_OK_DEL = '00018041'X
	   2961 	PARAMETER RMS$_OK_RNF = '00018049'X
	   2962 	PARAMETER RMS$_OK_LIM = '00018051'X
	   2963 	PARAMETER RMS$_OK_NOP = '00018059'X
	   2964 	PARAMETER RMS$_OK_WAT = '00018061'X
	   2965  !  (BECAUSE WAT BIT IN ROP WAS SET AND RECORD WAS ALREADY
	   2966  !  LOCKED.)
	   2967 	PARAMETER RMS$_CRE_STM = '00018069'X
	   2968 	PARAMETER RMS$_OK_RULK = '00018071'X
	   2969 	PARAMETER RMS$_SYNCH = '00018079'X
	   2970 	PARAMETER RMS$_OK_ACT = '00018081'X
	   2971 	PARAMETER RMS$_OK_NOCURTID = '00018089'X
	   2972  ! +
	   2973  ! 
	   2974  ! 	SUCCESS CODES PASSED THRU FROM DRIVERS AND ACP -	BIT 15 = 0
	   2975  ! 
	   2976  ! -
	   2977 	PARAMETER RMS$_CONTROLC = '00010651'X	 !  TERMINAL I/O ABORTED DUE TO CTRL/C
	   2978 	PARAMETER RMS$_CONTROLO = '00010609'X
	   2979  !  TERMINAL I/O ABORTED DUE TO CTRL/O
	   2980 	PARAMETER RMS$_CONTROLY = '00010611'X
	   2981  !  TERMINAL I/O ABORTED DUE TO CTRL/Y
	   2982 	PARAMETER RMS$_CREATED = '00010619'X
	   2983  !  FILE WAS CREATED, NOT OPENED
	   2984 	PARAMETER RMS$_SUPERSEDE = '00010631'X
	   2985  !  CREATED FILE SUPERSEDED EXISTING VERSION
	   2986 	PARAMETER RMS$_OVRDSKQUOTA = '00010669'X
	   2987  !  DISK USAGE EXCEEDS DISK QUOTA
	   2988 	PARAMETER RMS$_FILEPURGED = '00010679'X
	   2989  !  CREATE FILE CAUSED OLDEST FILE
	   2990  !  VERSION TO BE PURGED
	   2991  ! +
	   2992  ! 
	   2993  ! 	WARNING CODES
	   2994  ! 
	   2995  ! -
	   2996  !  BIT 16 = BIT 15 = 1, BIT 14 = 0
	   2997 	PARAMETER RMS$_BOF = '00018198'X
	   2998 	PARAMETER RMS$_RNL = '000181A0'X
	   2999 	PARAMETER RMS$_RTB = '000181A8'X
	   3000 	PARAMETER RMS$_TMO = '000181B0'X
	   3001 	PARAMETER RMS$_TNS = '000181B8'X
	   3002 	PARAMETER RMS$_BES = '000181C0'X
	   3003 	PARAMETER RMS$_PES = '000181C8'X
	   3004  ! +
	   3005  ! 
	   3006  ! 	ERROR CODES - WITHOUT STV (THAT IS, STV MAY BE USED BUT NO ASSOCIATED
	   3007  ! 		      CONDITION CODE IS IN STV)
	   3008  ! 
	   3009  ! -
	   3010  !  BIT 16 = BIT 15 = 1, BIT 14 = 0
	   3011 	PARAMETER RMS$_ACT = '0001825A'X
	   3012 	PARAMETER RMS$_DEL = '00018262'X

SUB_TIME                        Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 33
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	   3013 	PARAMETER RMS$_INCOMPSHR = '0001826A'X
	   3014 	PARAMETER RMS$_DNR = '00018272'X
	   3015 	PARAMETER RMS$_EOF = '0001827A'X
	   3016 	PARAMETER RMS$_FEX = '00018282'X
	   3017 	PARAMETER RMS$_FLK = '0001828A'X
	   3018 	PARAMETER RMS$_FNF = '00018292'X
	   3019 	PARAMETER RMS$_PRV = '0001829A'X
	   3020 	PARAMETER RMS$_REX = '000182A2'X
	   3021 	PARAMETER RMS$_RLK = '000182AA'X
	   3022 	PARAMETER RMS$_RNF = '000182B2'X
	   3023  !   (RECORD NEVER WAS IN FILE, OR HAS BEEN DELETED.)
	   3024 	PARAMETER RMS$_WLK = '000182BA'X
	   3025 	PARAMETER RMS$_EXP = '000182C2'X
	   3026 	PARAMETER RMS$_NMF = '000182CA'X
	   3027 	PARAMETER RMS$_SUP = '000182D2'X
	   3028  !  (NOTE THAT SUPPORT HAS REPLACED SUP EXCEPT WHEN RMS CANNOT
	   3029  !  MAP THE DAP STATUS CODE INTO A FAL STATUS CODE.)
	   3030  !  (NOTE ALSO THAT SUP SHOULD HAVE BEEN DEFINED AS A SEVERE
	   3031  !  ERROR CODE. HOWEVER, SUPPORT IS A SEVERE ERROR CODE.)
	   3032 	PARAMETER RMS$_RSA = '000182DA'X
	   3033 	PARAMETER RMS$_CRC = '000182E2'X
	   3034 	PARAMETER RMS$_WCC = '000182EA'X
	   3035 	PARAMETER RMS$_IDR = '000182F2'X
	   3036 	PARAMETER RMS$_LWC = '000182FA'X
	   3037 	PARAMETER RMS$_UNUSED1 = '00018302'X
	   3038 	PARAMETER RMS$_NOVALPRS = '0001830A'X
	   3039 	PARAMETER RMS$_KEY_MISMATCH = '00018312'X
	   3040 	PARAMETER RMS$_RUH = '0001831A'X
	   3041 	PARAMETER RMS$_JND = '00018322'X
	   3042 	PARAMETER RMS$_BADPHASE = '0001832A'X
	   3043 	PARAMETER RMS$_TOWDR = '00018332'X
	   3044 	PARAMETER RMS$_NEXDR = '0001833A'X
	   3045 	PARAMETER RMS$_INVDRMSG = '00018342'X
	   3046 	PARAMETER RMS$_RU_ACTIVE = '0001834A'X
	   3047 	PARAMETER RMS$_UNKRUFAC = '00018352'X
	   3048 	PARAMETER RMS$_LIMBO = '0001835A'X
	   3049 	PARAMETER RMS$_IVATRACE = '00018362'X
	   3050 	PARAMETER RMS$_OPNOTSUP = '0001836A'X
	   3051 	PARAMETER RMS$_EXTNOTFOU = '00018372'X
	   3052 	PARAMETER RMS$_EXT_ERR = '0001837A'X
	   3053 	PARAMETER RMS$_SEMANTICS = '00018382'X
	   3054 	PARAMETER RMS$_LSCAN = '0001838A'X
	   3055 	PARAMETER RMS$_ROOTSRCH = '00018392'X
	   3056 	PARAMETER RMS$_IDXSEARCH = '0001839A'X
	   3057 	PARAMETER RMS$_NETBTS = '000183A2'X
	   3058 	PARAMETER RMS$_NXR = '000183AA'X
	   3059  !  IF EXACT KEY MATCH ON SECONDARY KEY AND SECONDARY KEY
	   3060  !  ENTRY POINTS TO NONEXISTENT PRIMARY DATA RECORD IN
	   3061  !  DISK FILE.
	   3062  ! +
	   3063  ! 
	   3064  ! 	ERROR CODES - WITH STV ERROR CODE (THAT IS, STV CONTAINS AN ASSOCIATED CONDITION CODE)
	   3065  ! 
	   3066  ! -
	   3067  !  BIT 16 = BIT 15 = BIT 14 = 1
	   3068 	PARAMETER RMS$_ACC = '0001C002'X
	   3069 	PARAMETER RMS$_CRE = '0001C00A'X

SUB_TIME                        Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 34
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	   3070 	PARAMETER RMS$_DAC = '0001C012'X
	   3071 	PARAMETER RMS$_ENT = '0001C01A'X
	   3072 	PARAMETER RMS$_EXT = '0001C022'X
	   3073 	PARAMETER RMS$_FND = '0001C02A'X
	   3074 	PARAMETER RMS$_MKD = '0001C032'X
	   3075 	PARAMETER RMS$_DPE = '0001C03A'X
	   3076 	PARAMETER RMS$_SPL = '0001C042'X
	   3077 	PARAMETER RMS$_DNF = '0001C04A'X
	   3078 	PARAMETER RMS$_RUF = '0001C052'X
	   3079 	PARAMETER RMS$_WRTJNL_AIJ = '0001C05A'X
	   3080 	PARAMETER RMS$_WRTJNL_BIJ = '0001C062'X
	   3081 	PARAMETER RMS$_WRTJNL_ATJ = '0001C06A'X
	   3082 	PARAMETER RMS$_WRTJNL_RUJ = '0001C072'X
	   3083 	PARAMETER RMS$_RRF = '0001C07A'X
	   3084 	PARAMETER RMS$_DDTM_ERR = '0001C082'X
	   3085  ! +
	   3086  ! 
	   3087  ! 	SEVERE ERROR CODES - WITHOUT STV (THAT IS, STV MAY BE USED BUT NO ASSOCIATED
	   3088  ! 			     CONDITION CODE IS IN STV)
	   3089  ! 
	   3090  ! -
	   3091  !  BIT 16 = BIT 15 = 1, BIT 14 = 0
	   3092 	PARAMETER RMS$_DTFCDDREC = '000183EC'X
	   3093 	PARAMETER RMS$_AID = '000183F4'X
	   3094 	PARAMETER RMS$_ALN = '000183FC'X
	   3095 	PARAMETER RMS$_ALQ = '00018404'X
	   3096 	PARAMETER RMS$_ANI = '0001840C'X
	   3097 	PARAMETER RMS$_AOP = '00018414'X
	   3098 	PARAMETER RMS$_BKS = '0001841C'X
	   3099 	PARAMETER RMS$_BKZ = '00018424'X
	   3100 	PARAMETER RMS$_BLN = '0001842C'X
	   3101 	PARAMETER RMS$_BUG = '00018434'X
	   3102 	PARAMETER RMS$_BUG_DDI = '0001843C'X
	   3103 	PARAMETER RMS$_BUG_DAP = '00018444'X
	   3104 	PARAMETER RMS$_BUG_RU_ACTIVE = '0001844C'X
	   3105 	PARAMETER RMS$_BUG_RURECERR = '00018454'X
	   3106 	PARAMETER RMS$_BUG_FLUSH_JNL_FAILED = '0001845C'X
	   3107 	PARAMETER RMS$_BUG_RU_ABORT_FAIL = '00018464'X
	   3108 	PARAMETER RMS$_BUG_RU_COMMIT_FAIL = '0001846C'X
	   3109 	PARAMETER RMS$_BUG_XX6 = '00018474'X
	   3110 	PARAMETER RMS$_BUG_XX7 = '0001847C'X
	   3111 	PARAMETER RMS$_BUG_XX8 = '00018484'X
	   3112 	PARAMETER RMS$_BUSY = '0001848C'X
	   3113 	PARAMETER RMS$_CCR = '00018494'X
	   3114 	PARAMETER RMS$_CHG = '0001849C'X
	   3115 	PARAMETER RMS$_CHK = '000184A4'X
	   3116 	PARAMETER RMS$_COD = '000184AC'X
	   3117 	PARAMETER RMS$_CUR = '000184B4'X
	   3118 	PARAMETER RMS$_DAN = '000184BC'X
	   3119 	PARAMETER RMS$_DEV = '000184C4'X
	   3120 	PARAMETER RMS$_DIR = '000184CC'X
	   3121 	PARAMETER RMS$_DME = '000184D4'X
	   3122 	PARAMETER RMS$_DNA = '000184DC'X
	   3123 	PARAMETER RMS$_DTP = '000184E4'X
	   3124 	PARAMETER RMS$_DUP = '000184EC'X
	   3125 	PARAMETER RMS$_DVI = '000184F4'X
	   3126 	PARAMETER RMS$_ESA = '000184FC'X

SUB_TIME                        Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 35
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	   3127 	PARAMETER RMS$_ESS = '00018504'X
	   3128 	PARAMETER RMS$_FAB = '0001850C'X
	   3129 	PARAMETER RMS$_FAC = '00018514'X
	   3130 	PARAMETER RMS$_FLG = '0001851C'X
	   3131 	PARAMETER RMS$_FNA = '00018524'X
	   3132 	PARAMETER RMS$_FNM = '0001852C'X
	   3133 	PARAMETER RMS$_FSZ = '00018534'X
	   3134 	PARAMETER RMS$_FOP = '0001853C'X
	   3135 	PARAMETER RMS$_FUL = '00018544'X
	   3136 	PARAMETER RMS$_IAL = '0001854C'X
	   3137 	PARAMETER RMS$_IAN = '00018554'X
	   3138 	PARAMETER RMS$_IDX = '0001855C'X
	   3139 	PARAMETER RMS$_IFI = '00018564'X
	   3140 	PARAMETER RMS$_IMX = '0001856C'X
	   3141 	PARAMETER RMS$_IOP = '00018574'X
	   3142 	PARAMETER RMS$_IRC = '0001857C'X
	   3143 	PARAMETER RMS$_ISI = '00018584'X
	   3144 	PARAMETER RMS$_KBF = '0001858C'X
	   3145 	PARAMETER RMS$_KEY = '00018594'X
	   3146 	PARAMETER RMS$_KRF = '0001859C'X
	   3147 	PARAMETER RMS$_KSZ = '000185A4'X
	   3148 	PARAMETER RMS$_LAN = '000185AC'X
	   3149 	PARAMETER RMS$_RUNDOWN = '000185B4'X
	   3150 	PARAMETER RMS$_LNE = '000185BC'X
	   3151 	PARAMETER RMS$_DTFCVT = '000185C4'X
	   3152 	PARAMETER RMS$_MRN = '000185CC'X
	   3153 	PARAMETER RMS$_MRS = '000185D4'X
	   3154 	PARAMETER RMS$_NAM = '000185DC'X
	   3155 	PARAMETER RMS$_NEF = '000185E4'X
	   3156 	PARAMETER RMS$_DTFQUASYN = '000185EC'X
	   3157 	PARAMETER RMS$_NOD = '000185F4'X
	   3158 	PARAMETER RMS$_NPK = '000185FC'X
	   3159 	PARAMETER RMS$_ORD = '00018604'X	 ! ! NOT USED AS OF V4
	   3160 	PARAMETER RMS$_ORG = '0001860C'X
	   3161 	PARAMETER RMS$_PBF = '00018614'X
	   3162 	PARAMETER RMS$_PLG = '0001861C'X
	   3163 	PARAMETER RMS$_POS = '00018624'X
	   3164 	PARAMETER RMS$_DTFQUAVAL = '0001862C'X
	   3165 	PARAMETER RMS$_QUO = '00018634'X
	   3166 	PARAMETER RMS$_RAB = '0001863C'X
	   3167 	PARAMETER RMS$_RAC = '00018644'X
	   3168 	PARAMETER RMS$_RAT = '0001864C'X
	   3169 	PARAMETER RMS$_RBF = '00018654'X
	   3170 	PARAMETER RMS$_RFA = '0001865C'X
	   3171 	PARAMETER RMS$_RFM = '00018664'X
	   3172 	PARAMETER RMS$_RHB = '0001866C'X
	   3173 	PARAMETER RMS$_RLF = '00018674'X
	   3174 	PARAMETER RMS$_ROP = '0001867C'X
	   3175 	PARAMETER RMS$_RRV = '00018684'X
	   3176 	PARAMETER RMS$_RVU = '0001868C'X
	   3177 	PARAMETER RMS$_RSS = '00018694'X
	   3178 	PARAMETER RMS$_RST = '0001869C'X
	   3179 	PARAMETER RMS$_RSZ = '000186A4'X
	   3180 	PARAMETER RMS$_SEQ = '000186AC'X
	   3181 	PARAMETER RMS$_SHR = '000186B4'X
	   3182 	PARAMETER RMS$_SIZ = '000186BC'X
	   3183 	PARAMETER RMS$_SQO = '000186C4'X

SUB_TIME                        Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 36
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	   3184 	PARAMETER RMS$_DTFSESEST = '000186CC'X
	   3185 	PARAMETER RMS$_SYN = '000186D4'X
	   3186 	PARAMETER RMS$_TRE = '000186DC'X
	   3187 	PARAMETER RMS$_TYP = '000186E4'X
	   3188 	PARAMETER RMS$_UBF = '000186EC'X
	   3189 	PARAMETER RMS$_USZ = '000186F4'X
	   3190 	PARAMETER RMS$_VER = '000186FC'X
	   3191 	PARAMETER RMS$_XNF = '00018704'X
	   3192 	PARAMETER RMS$_XAB = '0001870C'X
	   3193 	PARAMETER RMS$_ESL = '00018714'X
	   3194 	PARAMETER RMS$_DTFSESTER = '0001871C'X
	   3195 	PARAMETER RMS$_ENV = '00018724'X
	   3196 	PARAMETER RMS$_PLV = '0001872C'X
	   3197 	PARAMETER RMS$_MBC = '00018734'X
	   3198 	PARAMETER RMS$_RSL = '0001873C'X
	   3199 	PARAMETER RMS$_WLD = '00018744'X
	   3200 	PARAMETER RMS$_NET = '0001874C'X	 !  (NOTE THAT NETFAIL HAS REPLACED NET EXCEPT WHEN RMS CANNOT
	   3201  !  MAP THE DAP STATUS CODE INTO A FAL STATUS CODE.)
	   3202 	PARAMETER RMS$_IBF = '00018754'X
	   3203 	PARAMETER RMS$_REF = '0001875C'X
	   3204 	PARAMETER RMS$_IFL = '00018764'X
	   3205 	PARAMETER RMS$_DFL = '0001876C'X
	   3206 	PARAMETER RMS$_KNM = '00018774'X
	   3207 	PARAMETER RMS$_IBK = '0001877C'X
	   3208 	PARAMETER RMS$_KSI = '00018784'X
	   3209 	PARAMETER RMS$_LEX = '0001878C'X
	   3210 	PARAMETER RMS$_SEG = '00018794'X
	   3211 	PARAMETER RMS$_SNE = '0001879C'X	 ! ! NOT USED AS OF V4
	   3212 	PARAMETER RMS$_SPE = '000187A4'X	 ! ! NOT USED AS OF V4
	   3213 	PARAMETER RMS$_UPI = '000187AC'X
	   3214 	PARAMETER RMS$_ACS = '000187B4'X
	   3215 	PARAMETER RMS$_STR = '000187BC'X
	   3216 	PARAMETER RMS$_FTM = '000187C4'X
	   3217 	PARAMETER RMS$_GBC = '000187CC'X
	   3218 	PARAMETER RMS$_DEADLOCK = '000187D4'X
	   3219 	PARAMETER RMS$_EXENQLM = '000187DC'X
	   3220 	PARAMETER RMS$_JOP = '000187E4'X
	   3221 	PARAMETER RMS$_RUM = '000187EC'X
	   3222 	PARAMETER RMS$_JNS = '000187F4'X
	   3223 	PARAMETER RMS$_NRU = '000187FC'X
	   3224 	PARAMETER RMS$_IFF = '00018804'X
	   3225 	PARAMETER RMS$_DTFTRATBL = '0001880C'X
	   3226 	PARAMETER RMS$_DTFUNSTYP = '00018814'X
	   3227 	PARAMETER RMS$_DTFVERMIS = '0001881C'X
	   3228  ! +
	   3229  ! 
	   3230  ! 	ERROR CODES - WITHOUT STV
	   3231  ! 
	   3232  ! 	  DTFACC AND DTFCRE WERE ORIGINALLY INCLUDED IN THIS FATAL SEVERITY 
	   3233  ! 	  (NO STV) GROUPING.  IN ORDER TO CHANGE THEIR SEVERITY TO ERROR 
	   3234  ! 	  (NO STV) AND RETAIN THE SAME MESSAGE CODE VALUE, THE FOLLOWING 
	   3235  ! 	  SHIFTS IN SEVERITY FROM FATAL TO ERROR AND THEN BACK AGAIN ARE
	   3236  ! 	  DONE, WHILE RETAINING THE SAME ORIGINAL BASE ASSOCIATED WITH EACH.
	   3237  ! 
	   3238  ! -
	   3239  !  BIT 16 = BIT 15 = 1, BIT 14 = 0
	   3240 	PARAMETER RMS$_DTFACC = '00018822'X

SUB_TIME                        Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 37
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	   3241  ! +
	   3242  ! 
	   3243  ! 	SEVERE ERROR CODES - WITHOUT STV
	   3244  ! 
	   3245  ! -
	   3246  !  BIT 16 = BIT 15 = 1, BIT 14 = 0
	   3247 	PARAMETER RMS$_BOGUSCOL = '0001882C'X
	   3248 	PARAMETER RMS$_ERRREADCOL = '00018834'X
	   3249 	PARAMETER RMS$_ERRWRITECOL = '0001883C'X
	   3250 	PARAMETER RMS$_SNS = '00018844'X
	   3251 	PARAMETER RMS$_NOEXTEND = '0001884C'X	 ! +
	   3252  ! 
	   3253  ! 	ERROR CODES - WITHOUT STV
	   3254  ! 
	   3255  ! -
	   3256  !  BIT 16 = BIT 15 = 1, BIT 14 = 0
	   3257 	PARAMETER RMS$_DTFCRE = '00018852'X
	   3258  ! +
	   3259  ! 
	   3260  ! 	SEVERE ERROR CODES - WITHOUT STV
	   3261  ! 
	   3262  ! -
	   3263  !  BIT 16 = BIT 15 = 1, BIT 14 = 0
	   3264 	PARAMETER RMS$_DELJNS = '0001885C'X
	   3265 	PARAMETER RMS$_NOTSAMEJNL = '00018864'X
	   3266 	PARAMETER RMS$_SNPPF = '0001886C'X
	   3267  ! +
	   3268  ! 
	   3269  ! 	SEVERE ERRORS - WITH STV ERROR CODE (THAT IS, STV CONTAINS AN ASSOCIATED CONDITION CODE)
	   3270  ! 
	   3271  ! -
	   3272  !  BIT 16 = BIT 15 = BIT 14 = 1
	   3273 	PARAMETER RMS$_ATR = '0001C0CC'X
	   3274 	PARAMETER RMS$_ATW = '0001C0D4'X
	   3275 	PARAMETER RMS$_CCF = '0001C0DC'X
	   3276 	PARAMETER RMS$_CDA = '0001C0E4'X
	   3277 	PARAMETER RMS$_CHN = '0001C0EC'X
	   3278 	PARAMETER RMS$_RER = '0001C0F4'X
	   3279 	PARAMETER RMS$_RMV = '0001C0FC'X
	   3280 	PARAMETER RMS$_RPL = '0001C104'X
	   3281 	PARAMETER RMS$_SYS = '0001C10C'X
	   3282 	PARAMETER RMS$_WER = '0001C114'X
	   3283 	PARAMETER RMS$_WPL = '0001C11C'X
	   3284 	PARAMETER RMS$_IFA = '0001C124'X
	   3285 	PARAMETER RMS$_WBE = '0001C12C'X
	   3286 	PARAMETER RMS$_ENQ = '0001C134'X
	   3287 	PARAMETER RMS$_NETFAIL = '0001C13C'X
	   3288 	PARAMETER RMS$_SUPPORT = '0001C144'X
	   3289 	PARAMETER RMS$_CRMP = '0001C14C'X
	   3290 	PARAMETER RMS$_DTFCFGFIL = '0001C154'X
	   3291 	PARAMETER RMS$_REENT = '0001C15C'X
	   3292 	PARAMETER RMS$_ACC_RUJ = '0001C164'X
	   3293 	PARAMETER RMS$_TMR = '0001C16C'X
	   3294 	PARAMETER RMS$_ACC_AIJ = '0001C174'X
	   3295 	PARAMETER RMS$_ACC_BIJ = '0001C17C'X
	   3296 	PARAMETER RMS$_ACC_ATJ = '0001C184'X
	   3297 	PARAMETER RMS$_DTFDEFFIL = '0001C18C'X

SUB_TIME                        Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 38
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	   3298 	PARAMETER RMS$_DTFREGFIL = '0001C194'X
	   3299 	PARAMETER RMS$_JNLNOTAUTH = '0001C19C'X
	   3300 !DEC$ END OPTIONS
	   3301 
	   3302         RECORD
	   3303      .    /T/ TIME, LTIME
	   3304 C
	   3305         REAL
	   3306      .    SUB_TIME
	   3307 C
	   3308         INTEGER
	   3309      .    YEAR, DOY, HR, MIN, SEC
	   3310 C
	   3311 C
	   3312         YEAR = TIME.YEAR - LTIME.YEAR
	   3313         DOY = TIME.DOY - LTIME.DOY
	   3314         HR = TIME.HR - LTIME.HR
	   3315         MIN = TIME.MIN - LTIME.MIN
	   3316         SEC = TIME.SEC - LTIME.SEC
	   3317 C
	   3318 C Test if leap year.  NOTE: Since 2000 is also a multiple of 400, it *is* a
	   3319 C leap year.  Test appropriately.
	   3320 C
	   3321         IF ((MOD(LTIME.YEAR, 4).EQ.0 .AND. MOD(LTIME.YEAR,100).NE.0) .OR.
	   3322      &	    MOD(LTIME.YEAR,400).EQ.0 ) THEN
	   3323           SUB_TIME = YEAR*60*24*366 + DOY*60*24 + HR*60 + MIN + SEC/60.
	   3324         ELSE
	   3325           SUB_TIME = YEAR*60*24*365 + DOY*60*24 + HR*60 + MIN + SEC/60.
	   3326         END IF
	   3327 C
	   3328         RETURN
	   3329         END 

SUB_TIME                        Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 39
                                                                17-APR-1996 15:11:37  SMS1:[WIND.SOFTWARE.SWICS]CO_OUTPUT.FOR;57



PROGRAM SECTIONS

    Name				 Bytes   Attributes

  1 $BSS$                               307892 NOPIC CON REL LCL NOSHR NOEXE   RD   WRT *32
  2 $DATA$                                 736 NOPIC CON REL LCL NOSHR NOEXE   RD   WRT OCTA
  3 $CODE$                               21924   PIC CON REL LCL   SHR   EXE NORD NOWRT OCTA
  4 $LINK$                                1160 NOPIC CON REL LCL NOSHR NOEXE   RD NOWRT OCTA
  5 $LITERAL$                              996   PIC CON REL LCL   SHR NOEXE   RD NOWRT OCTA
  6 L1_HEADERS                             644 NOPIC OVR REL GBL NOSHR NOEXE   RD   WRT OCTA

    Total Space Allocated               333352


ENTRY POINTS

 Address      Type  Name     
                             
  3-00004F08  R*4   SUB_TIME 


VARIABLES

 Address      Type  Name  Address      Type  Name  Address      Type  Name  Address      Type  Name  Address      Type  Name
                                                                                                                            
  1-0004B29C  I*4   DOY    1-0004B298  I*4   HR     1-0004B294  I*4   MIN    1-0004B290  I*4   SEC    1-0004B2A0  I*4   YEAR


TYPES/RECORDS

 Address      Name           Structure              Bytes  Address      Name           Structure              Bytes
                                                                                                                   
  6-00000000  L1_FILE_HEADER ST_L1_FILE_HEADER        400       **      LTIME          T                          8
  6-00000190  L1_SR_HEADER   ST_L1_SR_HEADER          244       **      TIME           T                          8

SUB_TIME                        Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 40
                                                                 9-OCT-2002 20:01:06  SMS1:[WIND.SOFTWARE.SWICS]CO_OUTPUT.FOR;57

	   3330 C**************************************************************************
	   3331      	FUNCTION T6 (RTIO,R,T)
	   3332 C*******************************************************************
	   3333 C	a function that calculates the ionization temperature (T6) 
	   3334 C	given a ratio of ions.  It interpolates (on a log-log scale)
	   3335 C	between 6 different provided points.
	   3336 C
	   3337 C	written by C. Shafer, May 22, 1991
	   3338 C*******************************************************************
	   3339 C
	   3340 C			DECLARATIONS
	   3341 C
	   3342         IMPLICIT NONE
	   3343 C
	   3344      	REAL*4
	   3345      .	 RTIO,
	   3346      .	 LRATIO,
	   3347      .	 T6,
	   3348      .	 LOGT6,
	   3349      .	 M					!SLOPE = M, 
	   3350 C						LOGT6 = LOG BASE 10 OF T6
	   3351 C
	   3352      	REAL*4
	   3353      .	 R(6),
	   3354      .	 T(6)     			!GIVEN POINTS (IN LOG)
	   3355 C
	   3356         INTEGER
	   3357      .    I
	   3358 C
	   3359 C************************************************************************
	   3360 C
	   3361 C			STATEMENTS
	   3362 C
	   3363      	LRATIO = LOG10(RTIO)
	   3364 C
	   3365      	IF (LRATIO.LE.R(1)) THEN
	   3366           LOGT6 = T(1)		! LRATIO < R1
	   3367         ELSE IF (LRATIO.GT.R(6)) THEN
	   3368           LOGT6 = T(6)
	   3369         ELSE 
	   3370           DO I = 1, 5
	   3371             IF ((LRATIO.GT.R(I)).AND.(LRATIO.LE.R(I+1))) THEN
	   3372               M = (T(I+1) - T(I)) / (R(I+1) - R(I))
	   3373               LOGT6 = M*(LRATIO - R(I)) + T(I)
	   3374             END IF
	   3375           END DO
	   3376         END IF
	   3377 C
	   3378      	T6 = 10**LOGT6
	   3379 C
	   3380         RETURN
	   3381 C
	   3382      	END

T6                              Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 41
                                                                 9-OCT-2002 20:01:06  SMS1:[WIND.SOFTWARE.SWICS]CO_OUTPUT.FOR;57



PROGRAM SECTIONS

    Name				 Bytes   Attributes

  1 $BSS$                               307892 NOPIC CON REL LCL NOSHR NOEXE   RD   WRT *32
  2 $DATA$                                 736 NOPIC CON REL LCL NOSHR NOEXE   RD   WRT OCTA
  3 $CODE$                               21924   PIC CON REL LCL   SHR   EXE NORD NOWRT OCTA
  4 $LINK$                                1160 NOPIC CON REL LCL NOSHR NOEXE   RD NOWRT OCTA
  5 $LITERAL$                              996   PIC CON REL LCL   SHR NOEXE   RD NOWRT OCTA

    Total Space Allocated               332708


ENTRY POINTS

 Address      Type  Name 
                         
  3-000051EC  R*4   T6   


VARIABLES

 Address      Type  Name    Address      Type  Name    Address      Type  Name  
                                                                                
  1-0004B2A4  I*4   I        1-0004B2B0  R*4   LRATIO       **      R*4   RTIO  
  1-0004B2AC  R*4   LOGT6    1-0004B2A8  R*4   M                                


ARRAYS

 Address      Type  Name        Bytes  Dimensions

      **      R*4   R              24  (6)
      **      R*4   T              24  (6)

T6                              Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 42
                                                                 9-OCT-2002 20:01:06  SMS1:[WIND.SOFTWARE.SWICS]CO_OUTPUT.FOR;57

	   3383 C**************************************************************************
	   3384 	REAL FUNCTION DELTA(VALUE,FRAC)
	   3385 	REAL VALUE,FRAC
	   3386 	DELTA = VALUE*FRAC
	   3387 	IF (VALUE.EQ.-100.) DELTA = -100.
	   3388 	RETURN
	   3389 	END


PROGRAM SECTIONS

    Name				 Bytes   Attributes

  1 $BSS$                               307892 NOPIC CON REL LCL NOSHR NOEXE   RD   WRT *32
  2 $DATA$                                 736 NOPIC CON REL LCL NOSHR NOEXE   RD   WRT OCTA
  3 $CODE$                               21924   PIC CON REL LCL   SHR   EXE NORD NOWRT OCTA
  4 $LINK$                                1160 NOPIC CON REL LCL NOSHR NOEXE   RD NOWRT OCTA
  5 $LITERAL$                              996   PIC CON REL LCL   SHR NOEXE   RD NOWRT OCTA

    Total Space Allocated               332708


ENTRY POINTS

 Address      Type  Name  
                          
  3-0000555C  R*4   DELTA 


VARIABLES

 Address      Type  Name   Address      Type  Name 
                                                   
      **      R*4   FRAC        **      R*4   VALUE

CO_OUTPUT                       Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 43
                                                                 9-OCT-2002 20:01:06  SMS1:[WIND.SOFTWARE.SWICS]CO_OUTPUT.FOR;57

COMMAND QUALIFIERS

  /ALIGNMENT=(COMMONS=(NONATURAL,PACKED,NOSTANDARD,NOMULTILANGUAGE),RECORDS=PACKED)
  /ARCHITECTURE=GENERIC
  /ASSUME=(ACCURACY_SENSITIVE,ALTPARAM,NOBUFFERED_IO,NOBYTERECL,NODUMMY_ALIASES,NOFP_CONSTANT,NOINT_CONSTANT,NOMINUS0,
           NOUNDERSCORE,NOSOURCE_INCLUDE)
  /NOAUTOMATIC
  /NOBY_REF_CALL
  /CHECK=(BOUNDS,FORMAT,FP_EXCEPTIONS,OUTPUT_CONVERSION,OVERFLOW,POWER,UNDERFLOW)
  /CONVERT=NATIVE
  /DEBUG=(SYMBOLS,TRACEBACK)
  /NODEFINE
  /DOUBLE_SIZE=64
  /NOD_LINES
  /ERROR_LIMIT=30
  /EXTEND_SOURCE
  /F77
  /FLOAT=G_FLOAT
  /GRANULARITY=QUADWORD
  /IEEE_MODE=FAST
  /INTEGER_SIZE=32
  /NOMACHINE_CODE
  /MATH_LIBRARY=ACCURATE
  /NOMODULE
  /NAMES=UPPERCASE
  /OPTIMIZE=(INLINE=NONE,LEVEL=,NOLOOPS,NOPIPELINE,TUNE=GENERIC,UNROLL=0)
  /NOPAD_SOURCE
  /REAL_SIZE=32
  /NORECURSIVE
  /REENTRANCY=NONE
  /ROUNDING_MODE=NEAREST
  /NOSEPARATE_COMPILATION
  /SEVERITY=(WARNING=WARNING)
  /SHOW=(INCLUDE,MAP)
  /SOURCE_FORM=FIXED
  /STANDARD=NONE
  /NOSYNCHRONOUS_EXCEPTIONS
  /NOSYNTAX_ONLY
  /NOTIE
  /VMS
  /WARNINGS=(NOALIGNMENT,NOARGUMENT_CHECKING,DECLARATIONS,GENERAL,GRANULARITY,NOTRUNCATED_SOURCE,UNCALLED,UNINITIALIZED,
           NOUNUSED,USAGE)

  /NOANALYSIS_DATA
  /NODIAGNOSTICS
  /INCLUDE=FORT$INCLUDE:
  /LIST=SMS1:[WIND.SOFTWARE.SWICS]CO_OUTPUT.LIS;6
  /OBJECT=SMS1:[WIND.SOFTWARE.SWICS]CO_OUTPUT.OBJ;6
  /NOLIBRARY

COMPILER: Compaq Fortran V7.2-780-4293Q

CO_OUTPUT                       Source Listing                   9-OCT-2002 20:01:15  Compaq Fortran V7.2-780           Page 44
                                                                 9-OCT-2002 20:01:06  SMS1:[WIND.SOFTWARE.SWICS]CO_OUTPUT.FOR;57

COMPILATION STATISTICS

  CPU time:          6.76 seconds
  Elapsed time:      9.02 seconds
  Pagefaults:        1614
  I/O Count:          174
