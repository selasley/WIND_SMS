WSWICS_GET_MMQ                  Source Listing                  19-JAN-2000 15:48:28  Compaq Fortran V7.2-780           Page 1
                                                                19-JAN-2000 15:47:57  [WIND.SOFTWARE.SWICS]WSWICS_GET_MMQ.FOR;29

	      1         SUBROUTINE WSWICS_GET_MMQ(SWICS_PHA,SWICS_RATE,SCI,HDB, EXC_H,EFF,!input
	      2      .                   EPQVAL,ET,MMPQ,EFF_WEIGHT,PHANUM)            !output
	      3 C**************************************************************************
	      4 C       this subroutine reads Wind SWICS data and extracts the pha data.  these
	      5 C       data are then converted into mass and mass/charge assuming all ions
	      6 C       travel at the proton velocity.
	      7 C       only analyze data where Ech > 0 because otherwise could be null data.
	      8 C
	      9 C       cmsc 3 Jan 1995
	     10 C
	     11 C       Altered:                                           Date:
	     12 C         added option of excluding data during             6 Jan 1995
	     13 C         proton peak                                       cmsc
	     14 C
	     15 C         added to output an efficiency weighting array     9 Feb 1995
	     16 C         which contains a weighting value for each mmpq    cmsc
	     17 C         pair.  Currently this only includes DCR/FSR
	     18 C         'efficiency'                           
	     19 C
	     20 C         added efficiency subroutine to calculate mss/fsr  9 Sept 1995
	     21 C         and fsr/io efficiencies for he - kr.              cmsc
	     22 C
	     23 C         altered dcr/fsr efficiency correction so that     14 Sept 1995
	     24 C         background values are subtracted first            cmsc
	     25 C
	     26 C	  Moved code fragments at labels 5555, 6666, and    19 Jan 2000
	     27 C	  8888 to avoid jump into IF-THEN-ENDIF block;      lrb
	     28 C	  change location of EFF files from SMS1:[COHEN.WIND.SWICS.EFFICIENCY]
	     29 C	  to SMS1:[WIND.SOFTWARE.SWICS.EFFICIENCY]
	     30 C
	     31 C**************************************************************************
	     32 C                            *Declarations*
	     33         IMPLICIT NONE
	     34 C
	     35         INCLUDE 'INC_DIR:EDBDEF.INC/NOLIST'
	    573         INCLUDE 'INC_DIR:L1FMT.INC/NOLIST'
	    705         INCLUDE '($RMSDEF)'
	    706 C
	    707 !*** MODULE $RMSDEF ***
	    708 !DEC$ OPTIONS/ALIGN=(RECORDS=PACKED,COMMONS=PACKED)
	    709  ! 
	    710  !  This SDL File Generated by VAX-11 Message V04-00 on 29-NOV-1995 18:46:08.43
	    711  ! 
	    712  ! 	.TITLE	RMSMSG -RMS COMPLETION CODES
	    713  !  *************************************************************************
	    714  !  *                                                                       *
	    715  !  * COPYRIGHT (C) DIGITAL EQUIPMENT CORPORATION, 1976, 1977, 1978, 1979,  *
	    716  !  * 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990,     *
	    717  !  * 1991,1992                                                             *
	    718  !  * ALL RIGHTS RESERVED.                                                  *
	    719  !  * UNPUBLISHED RIGHTS RESERVED UNDER THE COPYRIGHT LAWS  OF  THE  UNITED *
	    720  !  * STATES.                                                               *
	    721  !  *                                                                       *
	    722  !  * THE SOFTWARE CONTAINED ON THIS MEDIA IS PROPRIETARY TO  AND  EMBODIES *
	    723  !  * THE   CONFIDENTIAL   TECHNOLOGY  OF  DIGITAL  EQUIPMENT  CORPORATION. *
	    724  !  * POSSESSION, USE, DUPLICATION OR DISSEMINATION  OF  THE  SOFTWARE  AND *
	    725  !  * MEDIA  IS  AUTHORIZED  ONLY  PURSUANT TO A VALID WRITTEN LICENSE FROM *

WSWICS_GET_MMQ                  Source Listing                  19-JAN-2000 15:48:28  Compaq Fortran V7.2-780           Page 2
                                                                19-JAN-2000 15:47:57  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	    726  !  * DIGITAL EQUIPMENT CORPORATION.                                        *
	    727  !  *                                                                       *
	    728  !  * RESTRICTED RIGHTS LEGEND USE, DUPLICATION, OR DISCLOSURE BY THE  U.S. *
	    729  !  * GOVERNMENT  IS  SUBJECT  TO RESTRICTIONS AS SET FORTH IN SUBPARAGRAPH *
	    730  !  * (C)(1)(II) OF DFARS 252.227-7013, OR IN FAR 52.227-19, AS APPLICABLE. *
	    731  !  *                                                                       *
	    732  !  *************************************************************************
	    733  ! ++
	    734  !  FACILITY: RMS
	    735  ! 
	    736  !  ABSTRACT:
	    737  ! 
	    738  ! 	THIS MODULE DEFINES ALL RMS COMPLETION CODES.
	    739  ! 
	    740  !  ENVIRONMENT:
	    741  ! 
	    742  ! 	THE MESSAGE TRANSLATOR MUST BE USED TO CONVERT RMSMSG.MSG INTO
	    743  ! 	RMSMSG.SDL.  THE SDL TRANSLATOR MUST THEN BE USED TO CONVERT
	    744  ! 	RMSMSG.SDL INTO RMSMSG.MAR (AND RMSMSG.B32).
	    745  ! 
	    746  !  AUTHOR: LEO F. LAVERDURE,	CREATION DATE:  10-DEC-1976
	    747  ! 
	    748  !  MODIFIED BY:
	    749  ! 
	    750  ! 	X-7	EMW	    ELINOR M. WOODS	       10-AUG-1994
	    751  ! 		MERGE IN OPENVMS VAX DRAGON CHANGE:
	    752  ! 
	    753  ! 		X-13  EMW0023	ELINOR M. WOODS		04-AUG-1994
	    754  ! 		RMS$_KRF CAN BE RETURNED BY $CONNECT OR $REWIND, AS
	    755  ! 		WELL AS $GET/$FIND.  MAKE TEXT ASSOCIATED WITH KRF
	    756  ! 		STATUS MORE GENERIC BY REMOVING "for $GET/$FIND."
	    757  ! 
	    758  !        X-6     EMW		ELINOR M. WOODS		30-JUN-1994
	    759  ! 		MERGE IN OPENVMS VAX DRAGON CHANGE:
	    760  ! 
	    761  ! 		X-12   EMW0026   ELINOR M. WOODS	15-JUN-1994
	    762  ! 		ADD ONE NEW USER-REPORTABLE STATUS:  NXR 
	    763  ! 		<nonexistent record>.  THIS STATUS VALUE IS USED 
	    764  ! 		AS AN STV ASSOCIATED WITH RNF STATUS (STS), AND IS
	    765  ! 		REPORTED FOR AN EXACT KEY MATCH OF A SECONDARY KEY
	    766  ! 		IF THE SECONDARY KEY ENTRY POINTS TO A NONEXISTENT
	    767  ! 		PRIMARY DATA RECORD IN DISK FILE.  NOTE:  RNF ERROR 
	    768  ! 		STATUS PRE-EXISTED AS ERROR CODE WITHOUT STV.
	    769  ! 
	    770  !                DEE RYAN                                30-SEP-1993
	    771  !                CORRECTED USE OF DIGITAL PRODUCT NAMES.
	    772  ! 
	    773  ! 	X-5	EMW		ELINOR M. WOODS		28-SEP-1993
	    774  ! 		MERGE IN OPENVMS VAX CORAL FIX:
	    775  ! 
	    776  ! 		X-10	EMW0019  ELINOR M. WOODS  	21-SEP-1993
	    777  ! 		ADD ONE NEW USER-REPORTABLE ERROR STATUS (WITH AN
	    778  ! 		ASSOCIATED STV): NETBTS.  RELOCATE NEW IDXSEARCH STATUS
	    779  ! 		(SEE X-9) FROM "ERROR with STV" SECTION TO "ERROR WITHOUT 
	    780  ! 		STV" section.  Expand "WITH STV' AND "without STV"
	    781  ! 		COMMENTS TO CLARIFY DIFFERENCE BETWEEN TWO.
	    782  ! 

WSWICS_GET_MMQ                  Source Listing                  19-JAN-2000 15:48:28  Compaq Fortran V7.2-780           Page 3
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	    783  ! 	X-4	EMW0016		ELINOR M. WOODS		10-AUG-1993
	    784  ! 		MERGE IN CORAL FIX:
	    785  ! 
	    786  ! 		MODIFY SEVERITY OF TWO DTF ERROR CODES (DTFACC AND
	    787  ! 		DTFCRE) FROM FATAL TO ERROR, AS REQUESTED BY SNA/DTF
	    788  ! 		FACILITY.		
	    789  ! 
	    790  ! 		ALSO MOVE NEW IDXSEARCH STATUS FROM ERROR WITH NO 
	    791  ! 		STV GROUPING TO ERROR WITH STV GROUPING.
	    792  ! 
	    793  ! 	X-3	EMW0010		ELINOR M. WOODS		02-JUL-1993
	    794  ! 		TO SUPPORT NEW KEY-LESS-THAN FUNCTIONALITY, ADDITION 
	    795  ! 		OF ONE USER-REPORTABLE ERROR STATUS:  IDXSEARCH, AND
	    796  ! 		TWO NEW RMS-INTERNAL ERROR STATUSES:  LSCAN AND 
	    797  ! 		ROOTSRCH.		
	    798  ! 
	    799  ! 	X-2	CW0019		CHRIS WHITAKER		11-NOV-1992
	    800  ! 		MERGE IN OPENVMS VAX V6.0 CHANGES
	    801  ! 
	    802  ! 		X-8	JM0012	JOHN MUNZER		11-NOV-1992
	    803  ! 		CHANGE TEXT FOR RMS$_LNE.
	    804  ! 
	    805  ! 		X-7	JM0006	JOHN MUNZER		17-APR-1992
	    806  ! 		ADD !XL PARAMETER TO RMS$_BUG TO REPORT R2.
	    807  ! 
	    808  ! 	X-1	RAB		RICHARD A. BISHOP	24-JUN-1991
	    809  ! 		MOVED TO [STARLET] FACILITY
	    810  ! 
	    811  ! 	==================================
	    812  ! 	OLD AUDIT TRAIL FOLLOWS:
	    813  ! 
	    814  ! 	X-33	LSS0154		LEONARD S. SZUBOWICZ	 4-APR-1990
	    815  ! 		ALTER TEXT AND FAO PARAMETERS OF RMS$_RUH AND RMS$_BUG
	    816  ! 		CONDITION VALUES FOR RMS/DDTM SUPPORT.
	    817  ! 
	    818  ! 	X-32	PJH		PAUL J. HOULIHAN	17-JAN-1990
	    819  ! 		CHANGE TEXT FOR RMS$_INCOMPSHR ERROR MESSAGE.
	    820  ! 
	    821  ! 	X-31	LSS0130		LEONARD S. SZUBOWICZ	12-OCT-1989
	    822  ! 		MERGE OF RMS/DDTM GENERATION X-30D2.
	    823  ! 		ADD GENERAL DDTM_ERR ERROR MESSAGE FOR DDTM SERVICE FAILURES;
	    824  ! 		STV WILL CONTAIN THE FAILING SYSTEM SERVICE CONDITION VALUE.
	    825  ! 
	    826  ! 	X-30	LSS0080		LEONARD S. SZUBOWICZ	06-OCT-1988
	    827  ! 		ADD RMS$_OK_ACT MESSAGE FOR USE BY FUTURE WORK TO $DISPLAY.
	    828  ! 		THIS IS PART OF LATENT SUPPORT FOR RMS/DDTM.
	    829  ! 
	    830  ! 	X-29	GJA0080		GARY J. ALLISON		06-JUN-1988
	    831  ! 		CHANGE TEXT OF SEMANTICS MESSAGE.
	    832  ! 
	    833  ! 	X-28	GJA0072		GARY J. ALLISON		02-MAR-1988
	    834  ! 		ADD EXT_ERR, OPNOTSUP, EXTNOTFOU, AND SEMANTICS MESSAGES.
	    835  ! 
	    836  ! 	X-27	PMV0072		PETER M. VATNE		08-OCT-1987
	    837  ! 		CHANGE RMS$_NOJNLLIC TO RMS$_JNLNOTAUTH.
	    838  ! 
	    839  !  	X-26	LSS0057		LEONARD S. SZUBOWICZ	15-SEP-1987

WSWICS_GET_MMQ                  Source Listing                  19-JAN-2000 15:48:28  Compaq Fortran V7.2-780           Page 4
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	    840  ! 		CHANGE TEXT FOR THE RMS$_OK_DUP STATUS SUCH THAT THE MESSAGE
	    841  ! 		IS APPLICABLE TO $GET AS WELL AS $PUT.
	    842  ! 
	    843  ! 	X-25	PMV0068		PETER M. VATNE		11-SEP-1987
	    844  ! 		ADD RMS$_NOJNLLIC, NO RMS JOURNALING LICENSE, FOR LMF.
	    845  ! 
	    846  ! 	X-24	RNM0026		RUSSELL N. MURRAY	15-AUG-1987
	    847  ! 		ADD RMS$_SYNCH MESSAGE FOR NOTIFICATION OF SYNCHRONOUS
	    848  ! 		COMPLETION.
	    849  ! 
	    850  ! 	X-23	JEJ0479		JAMES E JOHNSON		13-AUG-1987
	    851  ! 		ADD RMS$_IVATRACE MESSAGE.
	    852  ! 
	    853  ! 	X-22	PMV0061		PETER M. VATNE		03-AUG-1987
	    854  ! 		CHANGE RESERVED MESSAGE RMS$_BUG_XX5 TO RMS$_BUG_RU_COMMIT_FAIL
	    855  ! 		TO CORRESPOND TO POSITIVE RMS BUGCHECK FTL$_RU_COMMIT_FAIL.
	    856  ! 
	    857  !  	X-21	LSS0042		LEONARD S. SZUBOWICZ	13-MAY-1987
	    858  ! 		CHANGE RESERVED MESSAGE RMS$_BUG_XX4 TO RMS$_BUG_RU_ABORT_FAIL
	    859  ! 		TO CORRESPOND TO POSITIVE RMS BUGCHECK FTL$_RU_ABORT_FAIL
	    860  ! 	
	    861  ! 	X-20	SAD0034		STUART A. DAVIDSON	12-MAR-1987 
	    862  ! 		DROP QUOTES FROM SNADTF MESSAGE TEXT.
	    863  ! 
	    864  ! 	X-19	PJH		PAUL J. HOULIHAN	19-JAN-1987
	    865  ! 		MERGE IN 17J1.
	    866  ! 
	    867  ! 		X-17J1	PJH		PAUL J. HOULIHAN	15-JAN-1987
	    868  ! 			FIX SEVERAL SMALL JNL PROBLEMS.
	    869  ! 			ADD RMS$_BUG_FLUSH_JNL_FAILED CODE.
	    870  ! 
	    871  ! 	X-18	KPS0148		KENNETH P. SIEGEL	04-DEC-1986
	    872  ! 		ADDED SNPPF (STATISTICS MONITORING NOT SUPPORTED FOR
	    873  ! 		PROCESS PERMANENT FILES) ERROR MESSAGE.
	    874  ! 
	    875  ! 	X-17	PMV0025		PETER M. VATNE		24-NOV-1986
	    876  ! 		ADD NEW MESSAGE, RMS$_NOTSAMEJNL.  THIS STATUS IS
	    877  ! 		USED TO RESTRICT AI/BI WITH RU JOURNALING TO A
	    878  ! 		SINGLE LONG-TERM JOURNAL FILE.
	    879  ! 
	    880  ! 	X-16	DAS		DAVID A. SOLOMON	18-NOV-1986
	    881  ! 		ADD NEW MESSAGE, RMS$_DELJNS. REMOVE RMS$_XCR (BY REPLACING IT
	    882  ! 		WITH A PLACEHOLDER), AS JOURNALING BITS ARE NO LONGER
	    883  ! 		SPECIFIED IN THE $XABJNL. SLIGHT WORDING CHANGE ON DETACHED
	    884  ! 		RU RECOVERY ERROR MESSAGES.
	    885  ! 
	    886  ! 	X-15	DAS		DAVID A. SOLOMON	12-NOV-1986
	    887  ! 		FIX ERROR IN X-5/X-6: JOURNALING VARIANT NOT MERGED
	    888  ! 		CORRECTLY, RESULTING IN SEVERAL JOURNALING MESSAGES NUMBERS
	    889  ! 		BEING DIFFERENT IN THE MAININE THAN WHAT THEY WERE ON THE
	    890  ! 		JOURNALING VARIANT. ALSO, MOVE NEW SNADTF MESSAGES TO RE-USE
	    891  ! 		AVAILABLE UNUSED MESSAGE NUMBERS, INSTEAD OF GENERATING NEW
	    892  ! 		ONES. FINALLY, CHANGE RMS$_BUG_ABORT TO RMS$_BUG_RU_ACTIVE.
	    893  ! 
	    894  ! 	X-14	SAD0014		STUART A. DAVIDSON	 4-NOV-1986
	    895  ! 		SNADTF - FIX TYPO IN DTFACC, DTFCRE
	    896  ! 

WSWICS_GET_MMQ                  Source Listing                  19-JAN-2000 15:48:28  Compaq Fortran V7.2-780           Page 5
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	    897  ! 	X-13	SAD0014		STUART A. DAVIDSON	 3-NOV-1986
	    898  ! 		SNADTF - FIX TYPO, ADD 2 ADDITIONAL MESSAGES.
	    899  ! 
	    900  ! 	X-12	JEJ0377		JAMES E JOHNSON		29-OCT-1986
	    901  ! 		ADD NOEXTEND ERROR CODE TO FLAG FAILED RELATIVE FILE
	    902  ! 		EXTENDS DUE TO PREVIOUS FAILURES.
	    903  ! 
	    904  ! 	X-11	KPS0131		KENNETH P. SIEGEL	25-OCT-1986
	    905  ! 		ADDED SNS ERROR CODE FOR STATISTICS NOT SUPPORT ON
	    906  ! 		NON-DISK DEVICES.
	    907  ! 
	    908  ! 	X-10	SAD009		STUART A. DAVIDSON	06-OCT-1986
	    909  ! 		ADD COMPLETION CODES FOR SNADTF (IBM DATA XFER)
	    910  ! 
	    911  ! 	X-9	GJA0003		GARY J. ALLISON		29-SEP-1986
	    912  ! 		ADD DETACHED RECOVERY ERROR MESSAGES
	    913  ! 
	    914  ! 	X-8	PMV0008		PETER M. VATNE		24-SEP-1986
	    915  ! 		MODIFY RMS$_ACC_AIJ, RMS$_ACC_BIJ, AND RMS$_ACC_ATJ
	    916  ! 		TO ALSO OUTPUT THE STV.
	    917  ! 
	    918  ! 	X-7	JWT0243		JIM TEAGUE		 2-SEP-1986
	    919  ! 		ADD NEW ERRORS FOR COLLATED KEYS.
	    920  ! 
	    921  ! 	X-6	GJA		GARY J. ALLISON		29-JUL-1986
	    922  ! 		REMOVE DUPS FROM JNL MERGE.
	    923  ! 
	    924  ! 	X-5	GJA		GARY J. ALLISON		29-JUL-1986
	    925  ! 		MERGE JOURNALING INTO MAINLINE
	    926  ! 
	    927  ! 		X-3J6	DAS		DAVID A. SOLOMON	14-APR-1986
	    928  ! 			REMOVE RMS$_RUH_FILE (USING A GENERAL RUF MESSAGE INSTEAD).
	    929  ! 			CHANGE RMS$_RUH TEXT TO NOT HAVE FAO PARAMETERS. ADD
	    930  ! 			RMS$_BUG_RURECERR.
	    931  ! 	
	    932  ! 		X-3J5	JEJ0302		JAMES E JOHNSON		 4-APR-1986
	    933  ! 			ADD RMS$_RRF (ERROR DURING RU RECOVERY) AND
	    934  ! 			RMS$_RUH/RMS$_RUH_FILE (USED TO FORM TEXT OF RU HANDLER ERRORS
	    935  ! 			SENT TO OPCOM).
	    936  ! 	
	    937  ! 		X-3J4	JEJ0272		JAMES E JOHNSON		11-FEB-1986
	    938  ! 			ADD RMS$_RUF, RMS$_BUG_ABORT CODES.
	    939  ! 	
	    940  ! 		X-3J3	JEJ0237		JAMES E JOHNSON		16-DEC-1985
	    941  ! 			ADD RMS$_RUNDOWN CODE
	    942  ! 	
	    943  ! 		X-3J2	JEJ0205		JAMES E JOHNSON		25-OCT-1985
	    944  ! 			ADD JOURNAL SPECIFIC WRTJNL_XXJ ERROR CODES TO REPLACE
	    945  ! 			THE GENERIC ERRWRTJNL CODE.
	    946  ! 
	    947  ! 	X-4	JEJ0216		JAMES E JOHNSON		18-NOV-1985
	    948  ! 		MERGE X-3J2 INTO MAIN LINE FOR V4.4.
	    949  ! 
	    950  ! 		X-3J2	JEJ0205		JAMES E JOHNSON		25-OCT-1985
	    951  ! 			ADD JOURNAL SPECIFIC WRTJNL_XXJ ERROR CODES TO REPLACE
	    952  ! 			THE GENERIC ERRWRTJNL CODE.
	    953  ! 

WSWICS_GET_MMQ                  Source Listing                  19-JAN-2000 15:48:28  Compaq Fortran V7.2-780           Page 6
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	    954  ! 	X-3	JEJ0161		JAMES E JOHNSON		 9-SEP-1985
	    955  ! 		UPDATE RMS JOURNALING MESSAGES.
	    956  ! 
	    957  ! 	X-2	JWT0212		JIM TEAGUE		 4-SEP-1985
	    958  ! 		ADD (WHAT IS FOR NOW) AN INTERNAL STATUS CODE TO 
	    959  ! 		DIFFERENTIATE BETWEEN FINDING A DELETED RECORD (DEL)
	    960  ! 		AND FINDING IT BUT WITH A DIFFERENT KEY (KEY_MISMATCH).
	    961  ! 		
	    962  ! 	V03-024	RAS0314		RON SCHAEFER		21-JUN-1984
	    963  ! 		WORK OVER THE MESSAGES ONE MORE TIME:  FIX TYPO IN OK_RNF,
	    964  ! 		DELETE ACPEOF ERROR, DELETE WSF ERROR.
	    965  ! 
	    966  ! 	V03-023	RAS0282		RON SCHAEFER		28-MAR-1984
	    967  ! 		MINOR TEXT CHANGES AND COMMENTS ADDED.
	    968  ! 		DELETE RMS$_COP ERROR.
	    969  ! 
	    970  ! 	V03-022	DAS0005		DAVID SOLOMON		19-MAR-1984
	    971  ! 		REMOVE RMS$_ECHO (NO LONGER NEEDED AS A RESULT OF NEW
	    972  ! 		IMPLEMENTATION FOR ECHO SYS$INPUT -> SYS$OUTPUT).
	    973  ! 
	    974  ! 	V03-021	JWT0150		JIM TEAGUE		01-FEB-1984
	    975  ! 		ADD RMS$_IFF FOR TRYING TO WRITE-ACCESS A FILE ON 
	    976  ! 		MAGTAPE THAT HAS NON-0 VALUE FOR ANSI BUFFER OFFSET.
	    977  ! 
	    978  ! 	V03-020	RAS0233		RON SCHAEFER		 9-JAN-1984
	    979  ! 		ADD RMS$_NOVALPRS ERROR FOR $SEARCH NOT PRECEDED BY
	    980  ! 		VALID $PARSE.
	    981  ! 
	    982  ! 	V03-019	JWT0148		JIM TEAGUE		20-DEC-1983
	    983  ! 		ADD A JNL XAB ERROR FOR CONFLICTING RU ATTRIBUTES
	    984  ! 		ON $CREATE: RMS$_XCR.
	    985  ! 
	    986  ! 	V03-018	RAS0171		RON SCHAEFER		28-JUL-1983
	    987  ! 		ADD RMS$_BUSY; A STRUCTURE-LESS ERROR (R0-ONLY STATUS)
	    988  ! 		REPLACING TEMP3.
	    989  ! 
	    990  ! 	V03-017	DAS0004		DAVID SOLOMON		28-JUN-1983
	    991  ! 		ADD RMS$_FILEPURGED; ADD RMS$_ACPEOF FOR ZALEWSKI.
	    992  ! 
	    993  ! 	V03-016	KPL0007		PETER LIEBERWIRTH	 8-JUN-1983
	    994  ! 		FIX SPELLING IN JNL ERROR MESSAGES, ADD CJF ERROR WHICH
	    995  ! 		WILL SOON SUBSUME COP AND CQE.
	    996  ! 
	    997  ! 	V03-015	DAS0003		DAVID SOLOMON		18-FEB-1983
	    998  ! 		ADD XNF (REPLACING TEMP9), TMR (NEW), LWC (NEW).
	    999  ! 
	   1000  ! 	V03-014	KBT0497		KEITH B. THOMPSON	18-FEB-1983
	   1001  ! 		ADD INCOMPSHR ERROR (REUSE OF TEMP1 SLOT)
	   1002  ! 
	   1003  ! 	V03-013	RAS0120		RON SCHAEFER		 2-FEB-1983
	   1004  ! 		ADD ECHO PSEUDO-STATUS TO SUPPORT ECHO OF SYS$INPUT
	   1005  ! 		TO SYS$OUTPUT.
	   1006  ! 
	   1007  ! 	V03-012	JWH0174		JEFFRY W. HORN		24-JAN-1983
	   1008  ! 		ADD CQE AND COP ERRORS.
	   1009  ! 
	   1010  ! 	V03-011	KPL0006		PETER LIEBERWIRTH	 7-JAN-1983

WSWICS_GET_MMQ                  Source Listing                  19-JAN-2000 15:48:28  Compaq Fortran V7.2-780           Page 7
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	   1011  ! 		ADD OK_RULK FOR RECOVERY UNIT SUPPORT.
	   1012  ! 
	   1013  ! 		ADD REENT ERROR FOR $RENAME.
	   1014  ! 		
	   1015  ! 	V03-009	JWH0153		JEFFREY W. HORN		 8-DEC-1982
	   1016  ! 		ADD NRU ERROR.
	   1017  ! 
	   1018  ! 	V03-008	JWH0152		JEFFREY W. HORN		 8-DEC-1982
	   1019  ! 		ADD JNS ERROR.
	   1020  ! 
	   1021  ! 	V03-007 MCN0002		MARIA DEL C. NASR	15-NOV-1982
	   1022  ! 		REPLACE ORD ERROR CODE ELIMINATED BY MCN0001, SINCE
	   1023  ! 		THE NETWORK CODE REFERENCES IT.
	   1024  ! 
	   1025  ! 	V03-006 MCN0001		MARIA DEL C. NASR	26-OCT-1982
	   1026  ! 		PRINT KEY OF REFERENCE OR AREA IDENTIFICATION NUMBER
	   1027  ! 		INSTEAD OF XAB ADDRESS FOR ERRORS RETURNED DURING
	   1028  ! 		INDEXED FILE CREATION.  ALSO RENAME ALL UNUSED ERROR
	   1029  ! 		CODES TO TEMP.
	   1030  ! 
	   1031  ! 	V03-005	JWH0102		JEFFREY W. HORN		24-SEP-1982
	   1032  ! 		ADD RUP ERROR.
	   1033  ! 
	   1034  ! 	V03-004	RAS0095		RON SCHAEFER		 7-SEP-1982
	   1035  ! 		ADD OVRDSKQUOTA ERROR.
	   1036  ! 
	   1037  ! 	V03-002	JWH0002		JEFFREY W. HORN		26-JUL-1982
	   1038  ! 		CONVERT TO .MSG FORMAT.   ADD RUM ERROR.
	   1039  ! 
	   1040  ! 	V03-001	JWH0001		JEFFREY W. HORN		20-JUL-1982
	   1041  ! 		ADD JNF, JOP, AND NOJ ERRORS.
	   1042  ! 
	   1043  ! 	V02-042	KPL0005		PETER LIEBERWIRTH	 4-FEB-1982
	   1044  ! 		ADD ERROR MESSAGES RMS$_EXENQLM AND RMS$_DEADLOCK
	   1045  ! 		CORRECTLY.
	   1046  ! 
	   1047  ! 	V02-041	CDS0001		C D SAETHER	24-JAN-1982
	   1048  ! 		ADD GBC AND CRMP ERRORS.
	   1049  ! 
	   1050  ! 	V02-040	JAK0069		J A KRYCKA	15-JAN-1982
	   1051  ! 		ADD SUPPORT AND NETFAIL ERROR CODES.
	   1052  ! 
	   1053  ! 	V02-039	JAK0068		J A KRYCKA	31-DEC-1981
	   1054  ! 		MODIFY TEXT FOR SUP, NET, BUG_DAP, AND ENV ERROR MESSAGES.
	   1055  ! 
	   1056  ! 	V02-038 LJA0001		LAURIE ANDERSON 20-DEC-1981
	   1057  ! 		MODIFIED SOME MESSAGES TO READ BETTER.
	   1058  ! 
	   1059  ! 	V02-037	JAK0063		J A KRYCKA	31-AUG-1981
	   1060  ! 		ADD CRE_STM SUCCESS CODE.
	   1061  ! 
	   1062  ! 	V02-036	KPL0004		PETER LIEBERWIRTH	13-JAN-1981
	   1063  ! 		ADD ENQ SEVERE ERROR MESSAGE, TO INDICATE $ENQ/$DEQ FAILURE.
	   1064  ! 		ALSO ADD SUCCESS CODES OK_RRL, AND OK_WAT.
	   1065  ! 
	   1066  ! 	V02-035	REFORMAT	J A KRYCKA	30-JUL-1980
	   1067  ! 

WSWICS_GET_MMQ                  Source Listing                  19-JAN-2000 15:48:28  Compaq Fortran V7.2-780           Page 8
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	   1068  ! --
	   1069 	PARAMETER RMS$_FACILITY = '00000001'X
	   1070 	PARAMETER RMS$V_STVSTATUS = '0000000E'X	 !  MOVE TO BIT 14 OF THE
	   1071  !  STATUS CODE IT INDICATES
	   1072  !  THAT STV CONTAINS A SECONDARY
	   1073  !  STATUS CODE.
	   1074 	PARAMETER RMS$_SUC = '00010001'X
	   1075 	PARAMETER RMS$_NORMAL = '00010001'X
	   1076  ! +
	   1077  ! 
	   1078  ! 	SUCCESS CODES
	   1079  ! 
	   1080  ! -
	   1081  !  BIT 16 = BIT 15 = 1
	   1082 	PARAMETER RMS$_STALL = '00018001'X
	   1083  !  (NOTE: USER NEVER RECEIVES THIS CODE)
	   1084 	PARAMETER RMS$_PENDING = '00018009'X
	   1085 	PARAMETER RMS$_OK_DUP = '00018011'X
	   1086 	PARAMETER RMS$_OK_IDX = '00018019'X
	   1087  !   (RECORD HAS BEEN INSERTED, BUT INDEX STRUCTURE IS NO LONGER
	   1088  !   OPTIMAL.)
	   1089 	PARAMETER RMS$_OK_RLK = '00018021'X
	   1090  !  (BECAUSE LOCKER SET RLK IN ROP FIELD WHEN RECORD WAS LOCKED.)
	   1091 	PARAMETER RMS$_OK_RRL = '00018029'X
	   1092  !  (BECAUSE READER SET RRL IN ROP FIELD WHEN ACCESSING RECORD.)
	   1093  !  (THIS CODE USED TO BE OK_RRV)
	   1094  ! OK_RRV	;MSG <record was inserted successfully in primary>
	   1095  !   (BUT IT MAY NOT BE ACCESSIBLE VIA ONE-OR-MORE SECONDARY KEYS,
	   1096  !   AND NOT BY RFA ADDRESSING. FILE RE-ORGANIZATION RECOMMENDED!)
	   1097 	PARAMETER RMS$_KFF = '00018031'X
	   1098 	PARAMETER RMS$_OK_ALK = '00018039'X
	   1099 	PARAMETER RMS$_OK_DEL = '00018041'X
	   1100 	PARAMETER RMS$_OK_RNF = '00018049'X
	   1101 	PARAMETER RMS$_OK_LIM = '00018051'X
	   1102 	PARAMETER RMS$_OK_NOP = '00018059'X
	   1103 	PARAMETER RMS$_OK_WAT = '00018061'X
	   1104  !  (BECAUSE WAT BIT IN ROP WAS SET AND RECORD WAS ALREADY
	   1105  !  LOCKED.)
	   1106 	PARAMETER RMS$_CRE_STM = '00018069'X
	   1107 	PARAMETER RMS$_OK_RULK = '00018071'X
	   1108 	PARAMETER RMS$_SYNCH = '00018079'X
	   1109 	PARAMETER RMS$_OK_ACT = '00018081'X
	   1110 	PARAMETER RMS$_OK_NOCURTID = '00018089'X
	   1111  ! +
	   1112  ! 
	   1113  ! 	SUCCESS CODES PASSED THRU FROM DRIVERS AND ACP -	BIT 15 = 0
	   1114  ! 
	   1115  ! -
	   1116 	PARAMETER RMS$_CONTROLC = '00010651'X	 !  TERMINAL I/O ABORTED DUE TO CTRL/C
	   1117 	PARAMETER RMS$_CONTROLO = '00010609'X
	   1118  !  TERMINAL I/O ABORTED DUE TO CTRL/O
	   1119 	PARAMETER RMS$_CONTROLY = '00010611'X
	   1120  !  TERMINAL I/O ABORTED DUE TO CTRL/Y
	   1121 	PARAMETER RMS$_CREATED = '00010619'X
	   1122  !  FILE WAS CREATED, NOT OPENED
	   1123 	PARAMETER RMS$_SUPERSEDE = '00010631'X
	   1124  !  CREATED FILE SUPERSEDED EXISTING VERSION

WSWICS_GET_MMQ                  Source Listing                  19-JAN-2000 15:48:28  Compaq Fortran V7.2-780           Page 9
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	   1125 	PARAMETER RMS$_OVRDSKQUOTA = '00010669'X
	   1126  !  DISK USAGE EXCEEDS DISK QUOTA
	   1127 	PARAMETER RMS$_FILEPURGED = '00010679'X
	   1128  !  CREATE FILE CAUSED OLDEST FILE
	   1129  !  VERSION TO BE PURGED
	   1130  ! +
	   1131  ! 
	   1132  ! 	WARNING CODES
	   1133  ! 
	   1134  ! -
	   1135  !  BIT 16 = BIT 15 = 1, BIT 14 = 0
	   1136 	PARAMETER RMS$_BOF = '00018198'X
	   1137 	PARAMETER RMS$_RNL = '000181A0'X
	   1138 	PARAMETER RMS$_RTB = '000181A8'X
	   1139 	PARAMETER RMS$_TMO = '000181B0'X
	   1140 	PARAMETER RMS$_TNS = '000181B8'X
	   1141 	PARAMETER RMS$_BES = '000181C0'X
	   1142 	PARAMETER RMS$_PES = '000181C8'X
	   1143  ! +
	   1144  ! 
	   1145  ! 	ERROR CODES - WITHOUT STV (THAT IS, STV MAY BE USED BUT NO ASSOCIATED
	   1146  ! 		      CONDITION CODE IS IN STV)
	   1147  ! 
	   1148  ! -
	   1149  !  BIT 16 = BIT 15 = 1, BIT 14 = 0
	   1150 	PARAMETER RMS$_ACT = '0001825A'X
	   1151 	PARAMETER RMS$_DEL = '00018262'X
	   1152 	PARAMETER RMS$_INCOMPSHR = '0001826A'X
	   1153 	PARAMETER RMS$_DNR = '00018272'X
	   1154 	PARAMETER RMS$_EOF = '0001827A'X
	   1155 	PARAMETER RMS$_FEX = '00018282'X
	   1156 	PARAMETER RMS$_FLK = '0001828A'X
	   1157 	PARAMETER RMS$_FNF = '00018292'X
	   1158 	PARAMETER RMS$_PRV = '0001829A'X
	   1159 	PARAMETER RMS$_REX = '000182A2'X
	   1160 	PARAMETER RMS$_RLK = '000182AA'X
	   1161 	PARAMETER RMS$_RNF = '000182B2'X
	   1162  !   (RECORD NEVER WAS IN FILE, OR HAS BEEN DELETED.)
	   1163 	PARAMETER RMS$_WLK = '000182BA'X
	   1164 	PARAMETER RMS$_EXP = '000182C2'X
	   1165 	PARAMETER RMS$_NMF = '000182CA'X
	   1166 	PARAMETER RMS$_SUP = '000182D2'X
	   1167  !  (NOTE THAT SUPPORT HAS REPLACED SUP EXCEPT WHEN RMS CANNOT
	   1168  !  MAP THE DAP STATUS CODE INTO A FAL STATUS CODE.)
	   1169  !  (NOTE ALSO THAT SUP SHOULD HAVE BEEN DEFINED AS A SEVERE
	   1170  !  ERROR CODE. HOWEVER, SUPPORT IS A SEVERE ERROR CODE.)
	   1171 	PARAMETER RMS$_RSA = '000182DA'X
	   1172 	PARAMETER RMS$_CRC = '000182E2'X
	   1173 	PARAMETER RMS$_WCC = '000182EA'X
	   1174 	PARAMETER RMS$_IDR = '000182F2'X
	   1175 	PARAMETER RMS$_LWC = '000182FA'X
	   1176 	PARAMETER RMS$_UNUSED1 = '00018302'X
	   1177 	PARAMETER RMS$_NOVALPRS = '0001830A'X
	   1178 	PARAMETER RMS$_KEY_MISMATCH = '00018312'X
	   1179 	PARAMETER RMS$_RUH = '0001831A'X
	   1180 	PARAMETER RMS$_JND = '00018322'X
	   1181 	PARAMETER RMS$_BADPHASE = '0001832A'X

WSWICS_GET_MMQ                  Source Listing                  19-JAN-2000 15:48:28  Compaq Fortran V7.2-780           Page 10
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	   1182 	PARAMETER RMS$_TOWDR = '00018332'X
	   1183 	PARAMETER RMS$_NEXDR = '0001833A'X
	   1184 	PARAMETER RMS$_INVDRMSG = '00018342'X
	   1185 	PARAMETER RMS$_RU_ACTIVE = '0001834A'X
	   1186 	PARAMETER RMS$_UNKRUFAC = '00018352'X
	   1187 	PARAMETER RMS$_LIMBO = '0001835A'X
	   1188 	PARAMETER RMS$_IVATRACE = '00018362'X
	   1189 	PARAMETER RMS$_OPNOTSUP = '0001836A'X
	   1190 	PARAMETER RMS$_EXTNOTFOU = '00018372'X
	   1191 	PARAMETER RMS$_EXT_ERR = '0001837A'X
	   1192 	PARAMETER RMS$_SEMANTICS = '00018382'X
	   1193 	PARAMETER RMS$_LSCAN = '0001838A'X
	   1194 	PARAMETER RMS$_ROOTSRCH = '00018392'X
	   1195 	PARAMETER RMS$_IDXSEARCH = '0001839A'X
	   1196 	PARAMETER RMS$_NETBTS = '000183A2'X
	   1197 	PARAMETER RMS$_NXR = '000183AA'X
	   1198  !  IF EXACT KEY MATCH ON SECONDARY KEY AND SECONDARY KEY
	   1199  !  ENTRY POINTS TO NONEXISTENT PRIMARY DATA RECORD IN
	   1200  !  DISK FILE.
	   1201  ! +
	   1202  ! 
	   1203  ! 	ERROR CODES - WITH STV ERROR CODE (THAT IS, STV CONTAINS AN ASSOCIATED CONDITION CODE)
	   1204  ! 
	   1205  ! -
	   1206  !  BIT 16 = BIT 15 = BIT 14 = 1
	   1207 	PARAMETER RMS$_ACC = '0001C002'X
	   1208 	PARAMETER RMS$_CRE = '0001C00A'X
	   1209 	PARAMETER RMS$_DAC = '0001C012'X
	   1210 	PARAMETER RMS$_ENT = '0001C01A'X
	   1211 	PARAMETER RMS$_EXT = '0001C022'X
	   1212 	PARAMETER RMS$_FND = '0001C02A'X
	   1213 	PARAMETER RMS$_MKD = '0001C032'X
	   1214 	PARAMETER RMS$_DPE = '0001C03A'X
	   1215 	PARAMETER RMS$_SPL = '0001C042'X
	   1216 	PARAMETER RMS$_DNF = '0001C04A'X
	   1217 	PARAMETER RMS$_RUF = '0001C052'X
	   1218 	PARAMETER RMS$_WRTJNL_AIJ = '0001C05A'X
	   1219 	PARAMETER RMS$_WRTJNL_BIJ = '0001C062'X
	   1220 	PARAMETER RMS$_WRTJNL_ATJ = '0001C06A'X
	   1221 	PARAMETER RMS$_WRTJNL_RUJ = '0001C072'X
	   1222 	PARAMETER RMS$_RRF = '0001C07A'X
	   1223 	PARAMETER RMS$_DDTM_ERR = '0001C082'X
	   1224  ! +
	   1225  ! 
	   1226  ! 	SEVERE ERROR CODES - WITHOUT STV (THAT IS, STV MAY BE USED BUT NO ASSOCIATED
	   1227  ! 			     CONDITION CODE IS IN STV)
	   1228  ! 
	   1229  ! -
	   1230  !  BIT 16 = BIT 15 = 1, BIT 14 = 0
	   1231 	PARAMETER RMS$_DTFCDDREC = '000183EC'X
	   1232 	PARAMETER RMS$_AID = '000183F4'X
	   1233 	PARAMETER RMS$_ALN = '000183FC'X
	   1234 	PARAMETER RMS$_ALQ = '00018404'X
	   1235 	PARAMETER RMS$_ANI = '0001840C'X
	   1236 	PARAMETER RMS$_AOP = '00018414'X
	   1237 	PARAMETER RMS$_BKS = '0001841C'X
	   1238 	PARAMETER RMS$_BKZ = '00018424'X

WSWICS_GET_MMQ                  Source Listing                  19-JAN-2000 15:48:28  Compaq Fortran V7.2-780           Page 11
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	   1239 	PARAMETER RMS$_BLN = '0001842C'X
	   1240 	PARAMETER RMS$_BUG = '00018434'X
	   1241 	PARAMETER RMS$_BUG_DDI = '0001843C'X
	   1242 	PARAMETER RMS$_BUG_DAP = '00018444'X
	   1243 	PARAMETER RMS$_BUG_RU_ACTIVE = '0001844C'X
	   1244 	PARAMETER RMS$_BUG_RURECERR = '00018454'X
	   1245 	PARAMETER RMS$_BUG_FLUSH_JNL_FAILED = '0001845C'X
	   1246 	PARAMETER RMS$_BUG_RU_ABORT_FAIL = '00018464'X
	   1247 	PARAMETER RMS$_BUG_RU_COMMIT_FAIL = '0001846C'X
	   1248 	PARAMETER RMS$_BUG_XX6 = '00018474'X
	   1249 	PARAMETER RMS$_BUG_XX7 = '0001847C'X
	   1250 	PARAMETER RMS$_BUG_XX8 = '00018484'X
	   1251 	PARAMETER RMS$_BUSY = '0001848C'X
	   1252 	PARAMETER RMS$_CCR = '00018494'X
	   1253 	PARAMETER RMS$_CHG = '0001849C'X
	   1254 	PARAMETER RMS$_CHK = '000184A4'X
	   1255 	PARAMETER RMS$_COD = '000184AC'X
	   1256 	PARAMETER RMS$_CUR = '000184B4'X
	   1257 	PARAMETER RMS$_DAN = '000184BC'X
	   1258 	PARAMETER RMS$_DEV = '000184C4'X
	   1259 	PARAMETER RMS$_DIR = '000184CC'X
	   1260 	PARAMETER RMS$_DME = '000184D4'X
	   1261 	PARAMETER RMS$_DNA = '000184DC'X
	   1262 	PARAMETER RMS$_DTP = '000184E4'X
	   1263 	PARAMETER RMS$_DUP = '000184EC'X
	   1264 	PARAMETER RMS$_DVI = '000184F4'X
	   1265 	PARAMETER RMS$_ESA = '000184FC'X
	   1266 	PARAMETER RMS$_ESS = '00018504'X
	   1267 	PARAMETER RMS$_FAB = '0001850C'X
	   1268 	PARAMETER RMS$_FAC = '00018514'X
	   1269 	PARAMETER RMS$_FLG = '0001851C'X
	   1270 	PARAMETER RMS$_FNA = '00018524'X
	   1271 	PARAMETER RMS$_FNM = '0001852C'X
	   1272 	PARAMETER RMS$_FSZ = '00018534'X
	   1273 	PARAMETER RMS$_FOP = '0001853C'X
	   1274 	PARAMETER RMS$_FUL = '00018544'X
	   1275 	PARAMETER RMS$_IAL = '0001854C'X
	   1276 	PARAMETER RMS$_IAN = '00018554'X
	   1277 	PARAMETER RMS$_IDX = '0001855C'X
	   1278 	PARAMETER RMS$_IFI = '00018564'X
	   1279 	PARAMETER RMS$_IMX = '0001856C'X
	   1280 	PARAMETER RMS$_IOP = '00018574'X
	   1281 	PARAMETER RMS$_IRC = '0001857C'X
	   1282 	PARAMETER RMS$_ISI = '00018584'X
	   1283 	PARAMETER RMS$_KBF = '0001858C'X
	   1284 	PARAMETER RMS$_KEY = '00018594'X
	   1285 	PARAMETER RMS$_KRF = '0001859C'X
	   1286 	PARAMETER RMS$_KSZ = '000185A4'X
	   1287 	PARAMETER RMS$_LAN = '000185AC'X
	   1288 	PARAMETER RMS$_RUNDOWN = '000185B4'X
	   1289 	PARAMETER RMS$_LNE = '000185BC'X
	   1290 	PARAMETER RMS$_DTFCVT = '000185C4'X
	   1291 	PARAMETER RMS$_MRN = '000185CC'X
	   1292 	PARAMETER RMS$_MRS = '000185D4'X
	   1293 	PARAMETER RMS$_NAM = '000185DC'X
	   1294 	PARAMETER RMS$_NEF = '000185E4'X
	   1295 	PARAMETER RMS$_DTFQUASYN = '000185EC'X

WSWICS_GET_MMQ                  Source Listing                  19-JAN-2000 15:48:28  Compaq Fortran V7.2-780           Page 12
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	   1296 	PARAMETER RMS$_NOD = '000185F4'X
	   1297 	PARAMETER RMS$_NPK = '000185FC'X
	   1298 	PARAMETER RMS$_ORD = '00018604'X	 ! ! NOT USED AS OF V4
	   1299 	PARAMETER RMS$_ORG = '0001860C'X
	   1300 	PARAMETER RMS$_PBF = '00018614'X
	   1301 	PARAMETER RMS$_PLG = '0001861C'X
	   1302 	PARAMETER RMS$_POS = '00018624'X
	   1303 	PARAMETER RMS$_DTFQUAVAL = '0001862C'X
	   1304 	PARAMETER RMS$_QUO = '00018634'X
	   1305 	PARAMETER RMS$_RAB = '0001863C'X
	   1306 	PARAMETER RMS$_RAC = '00018644'X
	   1307 	PARAMETER RMS$_RAT = '0001864C'X
	   1308 	PARAMETER RMS$_RBF = '00018654'X
	   1309 	PARAMETER RMS$_RFA = '0001865C'X
	   1310 	PARAMETER RMS$_RFM = '00018664'X
	   1311 	PARAMETER RMS$_RHB = '0001866C'X
	   1312 	PARAMETER RMS$_RLF = '00018674'X
	   1313 	PARAMETER RMS$_ROP = '0001867C'X
	   1314 	PARAMETER RMS$_RRV = '00018684'X
	   1315 	PARAMETER RMS$_RVU = '0001868C'X
	   1316 	PARAMETER RMS$_RSS = '00018694'X
	   1317 	PARAMETER RMS$_RST = '0001869C'X
	   1318 	PARAMETER RMS$_RSZ = '000186A4'X
	   1319 	PARAMETER RMS$_SEQ = '000186AC'X
	   1320 	PARAMETER RMS$_SHR = '000186B4'X
	   1321 	PARAMETER RMS$_SIZ = '000186BC'X
	   1322 	PARAMETER RMS$_SQO = '000186C4'X
	   1323 	PARAMETER RMS$_DTFSESEST = '000186CC'X
	   1324 	PARAMETER RMS$_SYN = '000186D4'X
	   1325 	PARAMETER RMS$_TRE = '000186DC'X
	   1326 	PARAMETER RMS$_TYP = '000186E4'X
	   1327 	PARAMETER RMS$_UBF = '000186EC'X
	   1328 	PARAMETER RMS$_USZ = '000186F4'X
	   1329 	PARAMETER RMS$_VER = '000186FC'X
	   1330 	PARAMETER RMS$_XNF = '00018704'X
	   1331 	PARAMETER RMS$_XAB = '0001870C'X
	   1332 	PARAMETER RMS$_ESL = '00018714'X
	   1333 	PARAMETER RMS$_DTFSESTER = '0001871C'X
	   1334 	PARAMETER RMS$_ENV = '00018724'X
	   1335 	PARAMETER RMS$_PLV = '0001872C'X
	   1336 	PARAMETER RMS$_MBC = '00018734'X
	   1337 	PARAMETER RMS$_RSL = '0001873C'X
	   1338 	PARAMETER RMS$_WLD = '00018744'X
	   1339 	PARAMETER RMS$_NET = '0001874C'X	 !  (NOTE THAT NETFAIL HAS REPLACED NET EXCEPT WHEN RMS CANNOT
	   1340  !  MAP THE DAP STATUS CODE INTO A FAL STATUS CODE.)
	   1341 	PARAMETER RMS$_IBF = '00018754'X
	   1342 	PARAMETER RMS$_REF = '0001875C'X
	   1343 	PARAMETER RMS$_IFL = '00018764'X
	   1344 	PARAMETER RMS$_DFL = '0001876C'X
	   1345 	PARAMETER RMS$_KNM = '00018774'X
	   1346 	PARAMETER RMS$_IBK = '0001877C'X
	   1347 	PARAMETER RMS$_KSI = '00018784'X
	   1348 	PARAMETER RMS$_LEX = '0001878C'X
	   1349 	PARAMETER RMS$_SEG = '00018794'X
	   1350 	PARAMETER RMS$_SNE = '0001879C'X	 ! ! NOT USED AS OF V4
	   1351 	PARAMETER RMS$_SPE = '000187A4'X	 ! ! NOT USED AS OF V4
	   1352 	PARAMETER RMS$_UPI = '000187AC'X

WSWICS_GET_MMQ                  Source Listing                  19-JAN-2000 15:48:28  Compaq Fortran V7.2-780           Page 13
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	   1353 	PARAMETER RMS$_ACS = '000187B4'X
	   1354 	PARAMETER RMS$_STR = '000187BC'X
	   1355 	PARAMETER RMS$_FTM = '000187C4'X
	   1356 	PARAMETER RMS$_GBC = '000187CC'X
	   1357 	PARAMETER RMS$_DEADLOCK = '000187D4'X
	   1358 	PARAMETER RMS$_EXENQLM = '000187DC'X
	   1359 	PARAMETER RMS$_JOP = '000187E4'X
	   1360 	PARAMETER RMS$_RUM = '000187EC'X
	   1361 	PARAMETER RMS$_JNS = '000187F4'X
	   1362 	PARAMETER RMS$_NRU = '000187FC'X
	   1363 	PARAMETER RMS$_IFF = '00018804'X
	   1364 	PARAMETER RMS$_DTFTRATBL = '0001880C'X
	   1365 	PARAMETER RMS$_DTFUNSTYP = '00018814'X
	   1366 	PARAMETER RMS$_DTFVERMIS = '0001881C'X
	   1367  ! +
	   1368  ! 
	   1369  ! 	ERROR CODES - WITHOUT STV
	   1370  ! 
	   1371  ! 	  DTFACC AND DTFCRE WERE ORIGINALLY INCLUDED IN THIS FATAL SEVERITY 
	   1372  ! 	  (NO STV) GROUPING.  IN ORDER TO CHANGE THEIR SEVERITY TO ERROR 
	   1373  ! 	  (NO STV) AND RETAIN THE SAME MESSAGE CODE VALUE, THE FOLLOWING 
	   1374  ! 	  SHIFTS IN SEVERITY FROM FATAL TO ERROR AND THEN BACK AGAIN ARE
	   1375  ! 	  DONE, WHILE RETAINING THE SAME ORIGINAL BASE ASSOCIATED WITH EACH.
	   1376  ! 
	   1377  ! -
	   1378  !  BIT 16 = BIT 15 = 1, BIT 14 = 0
	   1379 	PARAMETER RMS$_DTFACC = '00018822'X
	   1380  ! +
	   1381  ! 
	   1382  ! 	SEVERE ERROR CODES - WITHOUT STV
	   1383  ! 
	   1384  ! -
	   1385  !  BIT 16 = BIT 15 = 1, BIT 14 = 0
	   1386 	PARAMETER RMS$_BOGUSCOL = '0001882C'X
	   1387 	PARAMETER RMS$_ERRREADCOL = '00018834'X
	   1388 	PARAMETER RMS$_ERRWRITECOL = '0001883C'X
	   1389 	PARAMETER RMS$_SNS = '00018844'X
	   1390 	PARAMETER RMS$_NOEXTEND = '0001884C'X	 ! +
	   1391  ! 
	   1392  ! 	ERROR CODES - WITHOUT STV
	   1393  ! 
	   1394  ! -
	   1395  !  BIT 16 = BIT 15 = 1, BIT 14 = 0
	   1396 	PARAMETER RMS$_DTFCRE = '00018852'X
	   1397  ! +
	   1398  ! 
	   1399  ! 	SEVERE ERROR CODES - WITHOUT STV
	   1400  ! 
	   1401  ! -
	   1402  !  BIT 16 = BIT 15 = 1, BIT 14 = 0
	   1403 	PARAMETER RMS$_DELJNS = '0001885C'X
	   1404 	PARAMETER RMS$_NOTSAMEJNL = '00018864'X
	   1405 	PARAMETER RMS$_SNPPF = '0001886C'X
	   1406  ! +
	   1407  ! 
	   1408  ! 	SEVERE ERRORS - WITH STV ERROR CODE (THAT IS, STV CONTAINS AN ASSOCIATED CONDITION CODE)
	   1409  ! 

WSWICS_GET_MMQ                  Source Listing                  19-JAN-2000 15:48:28  Compaq Fortran V7.2-780           Page 14
                                                                17-APR-1996 15:11:37  SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

	   1410  ! -
	   1411  !  BIT 16 = BIT 15 = BIT 14 = 1
	   1412 	PARAMETER RMS$_ATR = '0001C0CC'X
	   1413 	PARAMETER RMS$_ATW = '0001C0D4'X
	   1414 	PARAMETER RMS$_CCF = '0001C0DC'X
	   1415 	PARAMETER RMS$_CDA = '0001C0E4'X
	   1416 	PARAMETER RMS$_CHN = '0001C0EC'X
	   1417 	PARAMETER RMS$_RER = '0001C0F4'X
	   1418 	PARAMETER RMS$_RMV = '0001C0FC'X
	   1419 	PARAMETER RMS$_RPL = '0001C104'X
	   1420 	PARAMETER RMS$_SYS = '0001C10C'X
	   1421 	PARAMETER RMS$_WER = '0001C114'X
	   1422 	PARAMETER RMS$_WPL = '0001C11C'X
	   1423 	PARAMETER RMS$_IFA = '0001C124'X
	   1424 	PARAMETER RMS$_WBE = '0001C12C'X
	   1425 	PARAMETER RMS$_ENQ = '0001C134'X
	   1426 	PARAMETER RMS$_NETFAIL = '0001C13C'X
	   1427 	PARAMETER RMS$_SUPPORT = '0001C144'X
	   1428 	PARAMETER RMS$_CRMP = '0001C14C'X
	   1429 	PARAMETER RMS$_DTFCFGFIL = '0001C154'X
	   1430 	PARAMETER RMS$_REENT = '0001C15C'X
	   1431 	PARAMETER RMS$_ACC_RUJ = '0001C164'X
	   1432 	PARAMETER RMS$_TMR = '0001C16C'X
	   1433 	PARAMETER RMS$_ACC_AIJ = '0001C174'X
	   1434 	PARAMETER RMS$_ACC_BIJ = '0001C17C'X
	   1435 	PARAMETER RMS$_ACC_ATJ = '0001C184'X
	   1436 	PARAMETER RMS$_DTFDEFFIL = '0001C18C'X
	   1437 	PARAMETER RMS$_DTFREGFIL = '0001C194'X
	   1438 	PARAMETER RMS$_JNLNOTAUTH = '0001C19C'X
	   1439 !DEC$ END OPTIONS
	   1440 
	   1441         INTEGER*4
	   1442      .    WIND_DECOMPRESS                                  !function
	   1443 C
	   1444         RECORD
	   1445      .    /CORE/ SCI,                                      !basic data
	   1446      .    /HDBstr/ HDB,                                    !housekeeping
	   1447      .    /SW_PHA/ SWICS_PHA,                              !pha data
	   1448      .    /SW_RATE/ SWICS_RATE                             !rate data
	   1449 C         
	   1450         LOGICAL
	   1451      .    EFF,                                             !include eff
	   1452      .    EXC_H,
	   1453      .    CODE_C                                           !t=compress C
	   1454 C
	   1455         INTEGER
	   1456      .    ITEMP,                                           !temp value
	   1457      .    VSTEP,                                           !voltage step
	   1458      .    H_VS(2), HM1_VS(2), HM2_VS(2),                   !vs for H+
	   1459      .    HMSTEP,
	   1460      .    ECH, TCH,                                        !energy/time chnls
	   1461      .    RANGE, SECTOR,SSD_ID,                            !pha info
	   1462      .    PHANUM,                                          !# of pha events
	   1463      .    MEMAX                                            !# of me rates
	   1464 C
	   1465         INTEGER*4
	   1466      .    PAPSL                                            !paps level

WSWICS_GET_MMQ                  Source Listing                  19-JAN-2000 15:48:28  Compaq Fortran V7.2-780           Page 15
                                                                17-APR-1996 15:11:37  [WIND.SOFTWARE.SWICS]WSWICS_GET_MMQ.FOR;29

	   1467 C
	   1468         REAL
	   1469      .    VEL(2), T4(2),                                   !H+ & He2+ veloicty
	   1470      .    REF_EPQ,                                           !H+/He2+ e/q
	   1471      .    EPQ,                                             !e/q
	   1472      .    ENERGY, TOF,
	   1473      .    DIST/10.5/,                                        !tof distance
	   1474      .    PAPS,                                             !paps in kV
	   1475      .    EFF_WEIGHT(10080),                               !efficiency weight
	   1476      .    ET (2,10080),                                    !e,t pairs
	   1477      .    MMPQ(2,10080),               !mass&m/q pairs, max # is 168/spin
	   1478      .    EPQVAL(10080),                                   !e/q for each pha
	   1479      .    C1, 
	   1480      .    A1, A2, A3, A4, A5, A6                            !mass calc vars
	   1481 C
	   1482         INTEGER
	   1483      .    FSR, DCR,                                        !for efficiency
	   1484      .    FSR_BCKGND, DCR_BCKGND,                      !for backgrnd correction
	   1485      .    I,J,K
	   1486 C
	   1487 C***************************************************************************
	   1488 C                         
	   1489 C                            *Statements*
	   1490 C
	   1491         C1 = 1.73778E-5
	   1492         A1 = 6.07459
	   1493         A2 = -1.53628
	   1494         A3 = -3.06883
	   1495         A4 = 0.472764
	   1496         A5 = 0.0810787
	   1497         A6 = 0.0723728
	   1498         K = 1
	   1499 C
	   1500         CALL WSWICS_GET_HVEL(SWICS_RATE, SCI, HDB, VEL, T4)          
	   1501         IF (VEL(2).LE.0) THEN
	   1502           IF (VEL(1).LE.0) THEN
	   1503             PHANUM = 0
	   1504             RETURN
	   1505           ELSE
	   1506             REF_EPQ = (VEL(1)/437.7)**2
	   1507           END IF
	   1508         ELSE
	   1509           REF_EPQ = ((VEL(2)/437.7)**2)
	   1510         END IF
	   1511 C
	   1512         IF (EXC_H) THEN                                  !don't want H+data
	   1513           CALL WSWICS_GET_HPEAK(SWICS_RATE,SCI,HDB,H_VS, HM1_VS, HM2_VS)
	   1514           IF (HM1_VS(1).LT.0 .OR. H_VS(1).LT.0) GOTO 3000
	   1515         END IF                                   !exc_h
	   1516 C                                                **get fsr and dcr background**
	   1517         FSR_BCKGND = 0
	   1518         DCR_BCKGND = 0
	   1519         DO I = 0, 4
	   1520           IF (SCI.EDB(I).BITRATE) THEN                 !high bitrate
	   1521             MEMAX = 109                                !number of merates
	   1522           ELSE
	   1523             MEMAX = 55                                 !number of merates

WSWICS_GET_MMQ                  Source Listing                  19-JAN-2000 15:48:28  Compaq Fortran V7.2-780           Page 16
                                                                19-JAN-2000 15:47:57  [WIND.SOFTWARE.SWICS]WSWICS_GET_MMQ.FOR;29

	   1524           END IF
	   1525           ITEMP = HDB.BDH.DAT(189)
	   1526           CODE_C = BTEST(ITEMP,2)
	   1527           FSR = WIND_DECOMPRESS(SWICS_RATE.EDB(I).RATE(MEMAX),CODE_C)
	   1528           DCR = WIND_DECOMPRESS(SWICS_RATE.EDB(I).RATE(MEMAX+1),CODE_C)
	   1529           FSR_BCKGND = FSR_BCKGND + FSR
	   1530           DCR_BCKGND = DCR_BCKGND + DCR
	   1531         END DO                                             !i = 0, 59
	   1532         FSR_BCKGND = MAX(NINT(FSR_BCKGND/5.),1)
	   1533         DCR_BCKGND = MAX(NINT(DCR_BCKGND/5.),1)
	   1534 C
	   1535         DO I = 0, 59
	   1536 C                                                **get bit rate**
	   1537           IF (SCI.EDB(I).BITRATE) THEN                 !high bitrate
	   1538             MEMAX = 109                                !number of merates
	   1539           ELSE
	   1540             MEMAX = 55                                 !number of merates
	   1541           END IF
	   1542 C                                                get voltage step
	   1543           ITEMP = SWICS_RATE.EDB(I).RATE(MEMAX+6)
	   1544           VSTEP = IBITS(ITEMP,0,6)
	   1545           IF (EXC_H) THEN
	   1546             ITEMP = SWICS_RATE.EDB(HM1_VS(1)).RATE(MEMAX+6)
	   1547             HMSTEP = IBITS(ITEMP,0,6)
	   1548             IF (VSTEP.LE.HMSTEP) GOTO 2000
	   1549           END IF                                           !exc_h
	   1550 C                                                get fsr and dcr
	   1551           ITEMP = HDB.BDH.DAT(189)
	   1552           CODE_C = BTEST(ITEMP,2)
	   1553           FSR = MAX((WIND_DECOMPRESS(SWICS_RATE.EDB(I).RATE(MEMAX),CODE_C)
	   1554      .         - FSR_BCKGND),0)
	   1555           DCR = MAX((WIND_DECOMPRESS(SWICS_RATE.EDB(I).RATE(MEMAX+1),CODE_C)
	   1556      .         - DCR_BCKGND),0)
	   1557 C                                                get pha data
	   1558           DO J=0, SCI.EDB(I).SWICS_Len*4 - 4, 4
	   1559             CALL DISSECT_PHA(SWICS_PHA.EDB(I).PHA(J),
	   1560      .            SECTOR,ECH,RANGE,SSD_ID,TCH)
	   1561             IF (ECH.GT.0) THEN
	   1562               ENERGY = (ECH)/0.5
	   1563 C                                                calc mass/charge
	   1564               EPQ = 0.5*60.0**(VSTEP/59.0)
	   1565               EPQVAL(K) = EPQ
	   1566               MMPQ(2,K) = EPQ/REF_EPQ     !assume all ions flow at ref velocity
	   1567 C                                                calc tof
	   1568               ITEMP = HDB.BDH.DAT(61)
	   1569               CALL MVBITS(ITEMP,0,8,PAPSL,0) 
	   1570               PAPS = (190.96 - (117.15)*PAPSL)/(-1000)     !from BL 4/24/95
	   1571               IF (EPQ+PAPS-1.5 .LT. 0) GOTO 1000
	   1572               TOF = DIST/(437.7*SQRT((EPQ+PAPS-1.5)*(REF_EPQ/EPQ)))
	   1573               TOF = TOF *1E4                               !unit conversion
	   1574               ET(1,K) = ENERGY
	   1575               ET(2,K) = TOF
	   1576 C                                                calc mass
	   1577               MMPQ(1,K) = EXP(A1+A2*LOG(ENERGY)+A3*LOG(TOF)+A4*
	   1578      .            LOG(ENERGY)*LOG(TOF)+A5*(LOG(ENERGY))**2+
	   1579      .            A6*(LOG(TOF))**3)
	   1580 C                                                calc efficiency

WSWICS_GET_MMQ                  Source Listing                  19-JAN-2000 15:48:28  Compaq Fortran V7.2-780           Page 17
                                                                19-JAN-2000 15:47:57  [WIND.SOFTWARE.SWICS]WSWICS_GET_MMQ.FOR;29

	   1581               IF (EFF) THEN
	   1582                 ENERGY = (EPQ+PAPS)*MMPQ(1,K)/MMPQ(2,K)    !incident on cf
	   1583                 CALL WSWICS_EFFIC(ENERGY,MMPQ(1,K),EFF_WEIGHT(K))
	   1584                 IF (FSR.GT.0) THEN
	   1585                   EFF_WEIGHT(K) = EFF_WEIGHT(K)*REAL(DCR)/FSR     !dcr/fsr eff
	   1586                 ELSE
	   1587                   EFF_WEIGHT(K) = 1E12
	   1588                 END IF
	   1589               ELSE
	   1590                 EFF_WEIGHT(K) = 1.
	   1591               END IF
	   1592               IF (EFF_WEIGHT(K).EQ.0) EFF_WEIGHT(K) = 1E12 !mss/fsr could be 0
	   1593               K = K + 1
	   1594             END IF                                         !ech > 0
	   1595  1000     END DO                                           !j = 0, sci...
	   1596  2000   END DO                                           !i = 0, 59
	   1597  3000   PHANUM = K - 1
	   1598         RETURN
	   1599         END


PROGRAM SECTIONS

    Name				 Bytes   Attributes

  1 $BSS$                                  208 NOPIC CON REL LCL NOSHR NOEXE   RD   WRT OCTA
  2 $DATA$                                 244 NOPIC CON REL LCL NOSHR NOEXE   RD   WRT OCTA
  3 $CODE$                                6604   PIC CON REL LCL   SHR   EXE NORD NOWRT OCTA
  4 $LINK$                                 544 NOPIC CON REL LCL NOSHR NOEXE   RD NOWRT OCTA
  5 $LITERAL$                               20   PIC CON REL LCL   SHR NOEXE   RD NOWRT OCTA
  6 L1_HEADERS                             644 NOPIC OVR REL GBL NOSHR NOEXE   RD   WRT OCTA

    Total Space Allocated                 8264


ENTRY POINTS

 Address      Name          
                            
  3-00000000  WSWICS_GET_MMQ


VARIABLES

 Address      Type  Name        Address      Type  Name        Address      Type  Name        Address      Type  Name      
                                                                                                                           
      **      R*4   A1               **      I*4   DCR_BCKGND   1-000000AC  I*4   HMSTEP       1-000000CC  I*4   RANGE     
      **      R*4   A2           2-000000F0  R*4   DIST             **      I*4   I                **      R*4   REF_EPQ   
      **      R*4   A3           1-000000A8  I*4   ECH          1-000000C8  I*4   ITEMP        1-000000A0  I*4   SECTOR    
      **      R*4   A4               **      L*4   EFF              **      I*4   J            1-0000009C  I*4   SSD_ID    
      **      R*4   A5           0-00000070  R*4   ENERGY           **      I*4   K            1-000000A4  I*4   TCH       
      **      R*4   A6               **      R*4   EPQ              **      I*4   MEMAX            **      R*4   TOF       
      **      R*4   C1               **      L*4   EXC_H            **      R*4   PAPS             **      I*4   VSTEP     
  0-00000054  L*4   CODE_C           **      I*4   FSR          1-00000098  I*4   PAPSL                                    
      **      I*4   DCR              **      I*4   FSR_BCKGND       **      I*4   PHANUM                                   



WSWICS_GET_MMQ                  Source Listing                  19-JAN-2000 15:48:28  Compaq Fortran V7.2-780           Page 18
                                                                19-JAN-2000 15:47:57  [WIND.SOFTWARE.SWICS]WSWICS_GET_MMQ.FOR;29

TYPES/RECORDS

 Address      Name           Structure              Bytes  Address      Name           Structure              Bytes
                                                                                                                   
      **      HDB            HDBSTR                   324       **      SCI            CORE                    7384
  6-00000000  L1_FILE_HEADER ST_L1_FILE_HEADER        400       **      SWICS_PHA      SW_PHA                 40560
  6-00000190  L1_SR_HEADER   ST_L1_SR_HEADER          244       **      SWICS_RATE     SW_RATE                 7200


ARRAYS

 Address      Type  Name              Bytes  Dimensions

      **      R*4   EFF_WEIGHT        40320  (10080)
      **      R*4   EPQVAL            40320  (10080)
      **      R*4   ET                80640  (2, 10080)
  1-000000B8  I*4   HM1_VS                8  (2)
  1-000000B0  I*4   HM2_VS                8  (2)
  1-000000C0  I*4   H_VS                  8  (2)
      **      R*4   MMPQ              80640  (2, 10080)
  1-00000088  R*4   T4                    8  (2)
  1-00000090  R*4   VEL                   8  (2)


LABELS

 Address      Label  Address      Label  Address      Label
                                                           
  3-0000070C  1000    3-00000718  2000    3-00000734  3000 

WSWICS_GET_MMQ                  Source Listing                  19-JAN-2000 15:48:28  Compaq Fortran V7.2-780           Page 19
                                                                19-JAN-2000 15:47:57  [WIND.SOFTWARE.SWICS]WSWICS_GET_MMQ.FOR;29

	   1600 CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
	   1601       SUBROUTINE DISSECT_PHA(PHA,SECTOR,ENERGY,RANGE,SSD_ID,TIME_OF_FLIGHT)
	   1602 C
	   1603 C This subroutine does bit computations to get Stop ID, Start ID, Energy, Sector, SSD ID,
	   1604 C and Time of flight for SWICS PHA words on WIND
	   1605 C
	   1606       INTEGER*4 SECTOR,ENERGY,RANGE,SSD_ID,TIME_OF_FLIGHT
	   1607       INTEGER*4 ITEMP
	   1608       BYTE PHA(4)
	   1609 C
	   1610 C      WRITE(50,101) PHA
	   1611 C101   FORMAT(4(1X,Z2.2))
	   1612 C
	   1613       SECTOR = 0
	   1614       ITEMP = PHA(1)
	   1615       CALL MVBITS( ITEMP, 0, 4, SECTOR, 0 )
	   1616 C
	   1617       ENERGY = PHA(2)
	   1618       ENERGY = IAND( ENERGY, 255 )
	   1619 C
	   1620       ITEMP = PHA(3)
	   1621       RANGE = 0
	   1622       CALL MVBITS( ITEMP, 4, 4, RANGE, 0 )
	   1623 C
	   1624       SSD_ID = 0
	   1625       CALL MVBITS( ITEMP, 2, 2, SSD_ID, 0 )
	   1626 C
	   1627       TIME_OF_FLIGHT = ISHFT( IAND( ITEMP, 3 ), 8 )
	   1628       ITEMP = PHA(4)
	   1629       TIME_OF_FLIGHT = TIME_OF_FLIGHT + IAND( ITEMP, 255 )
	   1630 C
	   1631       RETURN
	   1632       END

DISSECT_PHA                     Source Listing                  19-JAN-2000 15:48:28  Compaq Fortran V7.2-780           Page 20
                                                                19-JAN-2000 15:47:57  [WIND.SOFTWARE.SWICS]WSWICS_GET_MMQ.FOR;29



PROGRAM SECTIONS

    Name				 Bytes   Attributes

  1 $BSS$                                  208 NOPIC CON REL LCL NOSHR NOEXE   RD   WRT OCTA
  2 $DATA$                                 244 NOPIC CON REL LCL NOSHR NOEXE   RD   WRT OCTA
  3 $CODE$                                6604   PIC CON REL LCL   SHR   EXE NORD NOWRT OCTA
  4 $LINK$                                 544 NOPIC CON REL LCL NOSHR NOEXE   RD NOWRT OCTA
  5 $LITERAL$                               20   PIC CON REL LCL   SHR NOEXE   RD NOWRT OCTA

    Total Space Allocated                 7620


ENTRY POINTS

 Address      Name       
                         
  3-000008F0  DISSECT_PHA


VARIABLES

 Address      Type  Name            Address      Type  Name            Address      Type  Name          
                                                                                                        
      **      I*4   ENERGY               **      I*4   RANGE                **      I*4   SSD_ID        
      **      I*4   ITEMP                **      I*4   SECTOR               **      I*4   TIME_OF_FLIGHT


ARRAYS

 Address      Type  Name        Bytes  Dimensions

      **      I*1   PHA             4  (4)

DISSECT_PHA                     Source Listing                  19-JAN-2000 15:48:28  Compaq Fortran V7.2-780           Page 21
                                                                19-JAN-2000 15:47:57  [WIND.SOFTWARE.SWICS]WSWICS_GET_MMQ.FOR;29

	   1633 C***************************************************************************
	   1634         SUBROUTINE WSWICS_EFFIC(ENERGY,MASS,EFF)
	   1635 C
	   1636 C	this subroutine returns total efficiency
	   1637 C	for a given mass.  It uses data from tables that were created by 
	   1638 C	fitting a smooth curve to calibration data for H, He, C, O, Ne, Ar, Kr.
	   1639 C	For masses not in data files the program interpolates between masses
	   1640 C	available.
	   1641 C    units of efficiency are cm^2
	   1642 C
	   1643 C	written by cmsc, August 10, 1995
	   1644 C
	   1645 C    Alterations                                 Date
	   1646 C     added si and he files                       12 Sept 1995 cmsc
	   1647 C
	   1648 C***************************************************************************
	   1649 C
	   1650 C			DECLARATIONS
	   1651 C			************
	   1652 C
	   1653      	IMPLICIT NONE
	   1654 C
	   1655 C			input
	   1656      	REAL
	   1657      .	  ENERGY,
	   1658      .	  MASS
	   1659 C
	   1660 C			data available
	   1661       	REAL
	   1662      .	  M(7)/1.008,4.0026,12.0,15.995,28.086,39.98,83.92/,
	   1663 C				aval data mass -  H,He,C,O,Si,Ar,Kr
	   1664 C				have Ne data but not used in interpolation
	   1665      .	  EFF 						!efficiency
	   1666 C
	   1667 C
	   1668      	CHARACTER*5
	   1669      .	  HEADER					!text in data files
	   1670 C
	   1671      	CHARACTER*9
	   1672      .	  DATFILE(7)/'H_95.eff','HE_95.eff','C_95.eff','O_95.eff',
	   1673      .		'SI_95.EFF','AR_95.EFF','KR_95.eff'/
	   1674 C.							!data files
	   1675 C
	   1676      	CHARACTER*37
	   1677      .	  DIR/'SMS1:[WIND.SOFTWARE.SWICS.EFFICIENCY]'/	!location of files
	   1678 C
	   1679 C			possible masses
	   1680      	REAL
	   1681      .	  REALM,					!real ion mass
	   1682      .	  ACTLM(13)/1.008,4.0026,12.0,14.007,15.995,19.992,	!possible ions
	   1683      .		22.990,24.305,28.086,32.064,39.98,55.85,83.92/,
	   1684 C			!H,HE,C,N,O,NE,NA,MG,SI,S,AR,FE,KR
	   1685      .    AR_MASS/39.98/, NE_MASS/19.992/,       !ar and ne masses
	   1686      .	  DELTA,					!input mass-real mass
	   1687      .	  MIN						!minimum difference
	   1688 C
	   1689 C			interpolation

WSWICS_EFFIC                    Source Listing                  19-JAN-2000 15:48:28  Compaq Fortran V7.2-780           Page 22
                                                                19-JAN-2000 15:47:57  [WIND.SOFTWARE.SWICS]WSWICS_GET_MMQ.FOR;29

	   1690      	LOGICAL
	   1691      .	  INTERP					!must interpolate
	   1692 C
	   1693 C			interpolation by energy
	   1694      	REAL
	   1695      .	  EPM,
	   1696      .	  DATA(5),					!file data values
	   1697      .	  ELO, EHI,					!energy values
	   1698      .	  DLO, DHI,					!eff values
	   1699      .	  TLO, THI,					!eff values
	   1700      .	  MLO, MHI,					!eff values
	   1701      .	  FLO, FHI,					!eff values
	   1702      .	  MEFF,FEFF				!interpolated value
	   1703 C
	   1704 C			interpolation by mass
	   1705      	REAL
	   1706      .	  DATA1(5),					!2nd file data
	   1707      .	  E1LO, E1HI,					!energy values
	   1708      .	  D1LO, D1HI,					!eff values
	   1709      .	  T1LO, T1HI,					!eff values
	   1710      .	  M1LO, M1HI,					!eff values
	   1711      .	  F1LO, F1HI,					!eff values
	   1712      .	  MEFF1,FEFF1,				!interpolated value
	   1713      .	  M1, M2					!interp. masses
	   1714 C
	   1715 C
	   1716      	INTEGER
	   1717      .	  I,J
	   1718 C
	   1719 C***************************************************************************
	   1720 C
	   1721 C			STATEMENTS
	   1722 C			**********
	   1723 C					initialization
	   1724 C
	   1725      	INTERP = .FALSE.
	   1726      	MIN = 100
	   1727         IF (MASS.GT.100) THEN
	   1728           EFF = 1
	   1729           RETURN
	   1730         END IF
	   1731 C
	   1732 C						find the real mass for this ion
	   1733 C						by finding the real ion mass
	   1734 C						it is closest to
	   1735      	DO I = 1, 13
	   1736      	  DELTA = ABS(MASS - ACTLM(I))
	   1737      	  IF (DELTA.LT.MIN) THEN
	   1738      	    MIN = DELTA
	   1739      	    REALM = ACTLM(I)
	   1740      	  END IF
	   1741      	END DO
	   1742 C
	   1743 C&
	   1744         IF (REALM .LT. 2) THEN
	   1745 c          WRITE(*,*) ' dont have this ion data'
	   1746           EFF = 1

WSWICS_EFFIC                    Source Listing                  19-JAN-2000 15:48:28  Compaq Fortran V7.2-780           Page 23
                                                                19-JAN-2000 15:47:57  [WIND.SOFTWARE.SWICS]WSWICS_GET_MMQ.FOR;29

	   1747           RETURN
	   1748         END IF
	   1749 C&
	   1750      	EPM = ENERGY/REALM
	   1751 C						find if interpolation is
	   1752 C						necessary or if we have this
	   1753 C						ion.  open approp. files
	   1754      	IF (REALM.EQ.NE_MASS) THEN		!Ne have data for it
	   1755      	  OPEN (UNIT=1, FILE=DIR//'NE_95.EFF', STATUS='OLD', READONLY)
	   1756      	  REWIND 1
	   1757      	  GOTO 555
	   1758      	END IF
	   1759 C
	   1760      	DO I = 1, 6
	   1761      	  IF ((REALM.LT.M(I+1)) .AND. (REALM.GT.M(I))) THEN
	   1762      	    OPEN (UNIT=1, FILE=DIR//DATFILE(I), STATUS='OLD', READONLY)
	   1763      	    REWIND 1
	   1764      	    M1 = M(I)
	   1765      	    OPEN (UNIT=5, FILE=DIR//DATFILE(I+1), STATUS='OLD', READONLY)
	   1766      	    REWIND 5
	   1767      	    M2 = M(I+1)
	   1768      	    INTERP = .TRUE.
	   1769             IF (I.EQ.5) THEN
	   1770               OPEN(UNIT=6, FILE=DIR//DATFILE(7), STATUS='OLD', READONLY)
	   1771               REWIND 6
	   1772             END IF                               ! i = 5
	   1773             IF (I.EQ.6) THEN
	   1774               OPEN (UNIT=6, FILE=DIR//DATFILE(5), STATUS='OLD', READONLY)
	   1775               REWIND 6
	   1776             END IF                                         !i=6
	   1777      	  ELSE IF (REALM.EQ.M(I)) THEN		!have this ion
	   1778      	    OPEN (UNIT=1, FILE=DIR//DATFILE(I), STATUS='OLD',READONLY)
	   1779      	    REWIND 1
	   1780      	  END IF
	   1781      	END DO
	   1782      	IF (REALM.EQ.M(7)) THEN
	   1783      	  OPEN (UNIT=1, FILE=DIR//DATFILE(7), STATUS='OLD', READONLY)
	   1784      	  REWIND 1
	   1785      	END IF
	   1786      	IF (REALM.GT.M(7)) THEN			!shouldn't happen
	   1787      	  EFF = 1.0
	   1788      	  RETURN
	   1789      	END IF
	   1790 C
	   1791  555   	IF (INTERP) THEN			!interpolation necessary
	   1792      	  DO I = 1, 2
	   1793      	    READ(1,'(A)') HEADER		!skip headers
	   1794       	    READ(5,'(A)') HEADER
	   1795       	    IF (M1.EQ.AR_MASS .OR. M2.EQ.AR_MASS) READ(6,'(A)') HEADER
	   1796      	  END DO
	   1797 C						first file - low mass
	   1798      	  ELO = 10000
	   1799      	  DO WHILE (EPM.LT.ELO)		!finding energy rng - E is
	   1800      	    EHI = ELO				!decreasing in file
	   1801      	    DHI = DLO
	   1802      	    THI = TLO
	   1803      	    MHI = MLO

WSWICS_EFFIC                    Source Listing                  19-JAN-2000 15:48:28  Compaq Fortran V7.2-780           Page 24
                                                                19-JAN-2000 15:47:57  [WIND.SOFTWARE.SWICS]WSWICS_GET_MMQ.FOR;29

	   1804      	    FHI = FLO
	   1805      	    READ(1,*,END=5555) (DATA(I), I=1,5)	!low ion data
	   1806      	    ELO = DATA(1)
	   1807      	    DLO = DATA(2)
	   1808      	    TLO = DATA(3)
	   1809      	    MLO = DATA(4)
	   1810      	    FLO = DATA(5)
	   1811             IF (M1.EQ.AR_MASS) THEN
	   1812               READ(6,*,END=5555) (DATA(I), I=1,5)
	   1813               FLO = DATA(5)
	   1814             END IF                               !m1=ar_mass
	   1815      	  END DO
	   1816 C						energy interpolation
	   1817      	  MEFF = ((MHI-MLO)/(EHI-ELO))*(EPM-ELO) + MLO
	   1818      	  FEFF = ((FHI-FLO)/(EHI-ELO))*(EPM-ELO) + FLO
	   1819 	  GOTO 1111
	   1820 C
	   1821  5555     MEFF = MLO				!at end of first file
	   1822      	  FEFF = FLO				!at end of first file
	   1823      	  GO TO 1111
	   1824 C
	   1825 C						second file - high mass
	   1826  1111	  E1LO = 10000
	   1827  	  DO WHILE (EPM.LT.E1LO)		!finding energy rng
	   1828      	    E1HI = E1LO
	   1829      	    D1HI = D1LO
	   1830      	    T1HI = T1LO
	   1831      	    M1HI = M1LO
	   1832      	    F1HI = F1LO
	   1833      	    READ(5,*,END=6666) (DATA1(I), I=1,5)	!high ion data
	   1834      	    E1LO = DATA1(1)
	   1835      	    D1LO = DATA1(2)
	   1836      	    T1LO = DATA1(3)
	   1837      	    M1LO = DATA1(4)
	   1838      	    F1LO = DATA1(5)
	   1839             IF (M2.EQ.AR_MASS) THEN
	   1840               READ(6,*,END=6666) (DATA1(I), I=1,5)
	   1841               F1LO = DATA1(5)
	   1842             END IF                               !m1=ar_mass
	   1843      	  END DO
	   1844 C						energy interpolation
	   1845      	  MEFF1 = ((M1HI-M1LO)/(E1HI-E1LO))*(EPM-E1LO) + M1LO
	   1846      	  FEFF1 = ((F1HI-F1LO)/(E1HI-E1LO))*(EPM-E1LO) + F1LO
	   1847 	  GOTO 2222
	   1848 C
	   1849  6666     MEFF1 = M1LO				!at end of second file
	   1850      	  FEFF1 = F1LO				!at end of second file
	   1851      	  GO TO 2222
	   1852 C
	   1853 C						mass interpolation
	   1854  2222  	  EFF = ((MEFF1-MEFF)/(M2-M1)) * (REALM-M1) + MEFF
	   1855  	     EFF = EFF*(((FEFF1-FEFF)/(M2-M1)) * (REALM-M1) + FEFF)
	   1856      	ELSE					!have this ion
	   1857      	  DO I = 1, 2
	   1858      	    READ(1,'(A)') HEADER		!skip headers
	   1859      	  END DO
	   1860      	  ELO = 10000

WSWICS_EFFIC                    Source Listing                  19-JAN-2000 15:48:28  Compaq Fortran V7.2-780           Page 25
                                                                19-JAN-2000 15:47:57  [WIND.SOFTWARE.SWICS]WSWICS_GET_MMQ.FOR;29

	   1861      	  DO WHILE (EPM.LT.ELO)
	   1862      	    EHI = ELO
	   1863      	    DHI = DLO
	   1864      	    THI = TLO
	   1865      	    MHI = MLO
	   1866      	    FHI = FLO
	   1867      	    READ(1,*,END=8888) (DATA(I), I=1,5)
	   1868      	    ELO = DATA(1)
	   1869      	    DLO = DATA(2)
	   1870      	    TLO = DATA(3)
	   1871      	    MLO = DATA(4)
	   1872      	    FLO = DATA(5)
	   1873      	  END DO
	   1874      	  EFF = ((MHI-MLO)/(EHI-ELO))*(EPM-ELO) + MLO
	   1875      	  EFF = EFF*(((FHI-FLO)/(EHI-ELO))*(EPM-ELO) + FLO)
	   1876      	END IF     					!interp
	   1877      	GOTO 3333
	   1878 C
	   1879  8888   EFF = MLO				!at end of only file
	   1880      	EFF = EFF*FLO				!at end of only file
	   1881      	GO TO 3333
	   1882 C
	   1883  3333	REWIND 1
	   1884      	IF (INTERP) REWIND 5
	   1885         IF (M1.EQ.AR_MASS .OR. M2.EQ.AR_MASS) REWIND 6
	   1886 C
	   1887      	CLOSE(UNIT=1)
	   1888      	IF (INTERP) CLOSE(UNIT=5)
	   1889         IF (M1.EQ.AR_MASS .OR. M2.EQ.AR_MASS) CLOSE(UNIT=6)
	   1890 C
	   1891      	RETURN
	   1892      	END

WSWICS_EFFIC                    Source Listing                  19-JAN-2000 15:48:28  Compaq Fortran V7.2-780           Page 26
                                                                19-JAN-2000 15:47:57  [WIND.SOFTWARE.SWICS]WSWICS_GET_MMQ.FOR;29



PROGRAM SECTIONS

    Name				 Bytes   Attributes

  1 $BSS$                                  208 NOPIC CON REL LCL NOSHR NOEXE   RD   WRT OCTA
  2 $DATA$                                 244 NOPIC CON REL LCL NOSHR NOEXE   RD   WRT OCTA
  3 $CODE$                                6604   PIC CON REL LCL   SHR   EXE NORD NOWRT OCTA
  4 $LINK$                                 544 NOPIC CON REL LCL NOSHR NOEXE   RD NOWRT OCTA
  5 $LITERAL$                               20   PIC CON REL LCL   SHR NOEXE   RD NOWRT OCTA

    Total Space Allocated                 7620


ENTRY POINTS

 Address      Name        
                          
  3-00000970  WSWICS_EFFIC


VARIABLES

 Address      Type  Name     Address      Type  Name     Address      Type  Name     Address      Type  Name   
                                                                                                               
  2-00000034  R*4   AR_MASS   1-00000058  R*4   EHI       1-00000000  CHAR  HEADER        **      R*4   MEFF1  
  1-0000002C  R*4   D1HI          **      R*4   ELO           **      I*4   I         1-00000040  R*4   MHI    
  1-00000030  R*4   D1LO          **      R*4   ENERGY        **      L*4   INTERP        **      R*4   MIN    
      **      R*4   DELTA         **      R*4   EPM       1-00000008  I*4   J         1-00000044  R*4   MLO    
  1-00000050  R*4   DHI       1-00000014  R*4   F1HI      1-00000010  R*4   M1        2-00000030  R*4   NE_MASS
  2-00000038  CHAR  DIR       1-00000018  R*4   F1LO      1-0000001C  R*4   M1HI      1-0000005C  R*4   REALM  
  1-00000054  R*4   DLO           **      R*4   FEFF      1-00000020  R*4   M1LO      1-00000024  R*4   T1HI   
  1-00000034  R*4   E1HI          **      R*4   FEFF1     1-0000000C  R*4   M2        1-00000028  R*4   T1LO   
      **      R*4   E1LO      1-00000038  R*4   FHI           **      R*4   MASS      1-00000048  R*4   THI    
      **      R*4   EFF       1-0000003C  R*4   FLO           **      R*4   MEFF      1-0000004C  R*4   TLO    


ARRAYS

 Address      Type  Name           Bytes  Dimensions

  2-000000A0  R*4   ACTLM             52  (13)
  1-00000074  R*4   DATA              20  (5)
  1-00000060  R*4   DATA1             20  (5)
  2-00000060  CHAR  DATFILE           63  (7)
  2-000000D4  R*4   M                 28  (7)



WSWICS_EFFIC                    Source Listing                  19-JAN-2000 15:48:28  Compaq Fortran V7.2-780           Page 27
                                                                19-JAN-2000 15:47:57  [WIND.SOFTWARE.SWICS]WSWICS_GET_MMQ.FOR;29

LABELS

 Address      Label  Address      Label  Address      Label  Address      Label
                                                                               
      **      555     3-00001518  2222    3-000012A8  5555    3-000016C0  8888 
  3-00001304  1111        **      3333    3-000014C0  6666                     

WSWICS_GET_MMQ                  Source Listing                  19-JAN-2000 15:48:28  Compaq Fortran V7.2-780           Page 28
                                                                19-JAN-2000 15:47:57  [WIND.SOFTWARE.SWICS]WSWICS_GET_MMQ.FOR;29

COMMAND QUALIFIERS

  /ALIGNMENT=(COMMONS=(NONATURAL,PACKED,NOSTANDARD,NOMULTILANGUAGE),RECORDS=PACKED)
  /ARCHITECTURE=GENERIC
  /ASSUME=(ACCURACY_SENSITIVE,ALTPARAM,NOBUFFERED_IO,NOBYTERECL,NODUMMY_ALIASES,NOFP_CONSTANT,NOINT_CONSTANT,NOMINUS0,
           NOUNDERSCORE,NOSOURCE_INCLUDE)
  /NOAUTOMATIC
  /NOBY_REF_CALL
  /CHECK=(BOUNDS,FORMAT,FP_EXCEPTIONS,OUTPUT_CONVERSION,OVERFLOW,POWER,UNDERFLOW)
  /CONVERT=NATIVE
  /DEBUG=(NOSYMBOLS,TRACEBACK)
  /NODEFINE
  /DOUBLE_SIZE=64
  /NOD_LINES
  /ERROR_LIMIT=30
  /EXTEND_SOURCE
  /F77
  /FLOAT=G_FLOAT
  /GRANULARITY=QUADWORD
  /IEEE_MODE=FAST
  /INTEGER_SIZE=32
  /NOMACHINE_CODE
  /MATH_LIBRARY=ACCURATE
  /NOMODULE
  /NAMES=UPPERCASE
  /OPTIMIZE=(INLINE=SPEED,LEVEL=4,NOLOOPS,NOPIPELINE,TUNE=GENERIC,UNROLL=0)
  /NOPAD_SOURCE
  /REAL_SIZE=32
  /NORECURSIVE
  /REENTRANCY=NONE
  /ROUNDING_MODE=NEAREST
  /NOSEPARATE_COMPILATION
  /SEVERITY=(WARNING=WARNING)
  /SHOW=(INCLUDE,MAP)
  /SOURCE_FORM=FIXED
  /STANDARD=NONE
  /NOSYNCHRONOUS_EXCEPTIONS
  /NOSYNTAX_ONLY
  /NOTIE
  /VMS
  /WARNINGS=(NOALIGNMENT,NOARGUMENT_CHECKING,DECLARATIONS,GENERAL,GRANULARITY,NOTRUNCATED_SOURCE,UNCALLED,UNINITIALIZED,
           NOUNUSED,USAGE)

  /NOANALYSIS_DATA
  /NODIAGNOSTICS
  /INCLUDE=FORT$INCLUDE:
  /LIST=SMS1:[WIND.SOFTWARE.SWICS]WSWICS_GET_MMQ.LIS;3
  /OBJECT=SMS1:[WIND.SOFTWARE.SWICS]WSWICS_GET_MMQ.OBJ;3
  /NOLIBRARY

COMPILER: Compaq Fortran V7.2-780-4293Q

WSWICS_GET_MMQ                  Source Listing                  19-JAN-2000 15:48:28  Compaq Fortran V7.2-780           Page 29
                                                                19-JAN-2000 15:47:57  [WIND.SOFTWARE.SWICS]WSWICS_GET_MMQ.FOR;29

COMPILATION STATISTICS

  CPU time:          6.74 seconds
  Elapsed time:     14.01 seconds
  Pagefaults:        1794
  I/O Count:           84
