SMS_MASS_SPEED                                                   1-APR-1997 12:55:25    DEC Fortran V6.2-508                Page   1
                                                                20-DEC-1996 02:32:52    [WIND.SOFTWARE.STICS]SMS_MASS_SPEED.FOR;24

	      1         SUBROUTINE SMS_MASS_SPEED(HDB,MASS_RATE,	!input
	      2      .            BULK_SPEED,BULK_UNCER,SPD_FLAG,ERR_MESSAGE) 	!output
	      3 
	      4 c	Program to collect WIND/MASS composition data
	      5 
	      6 c	For each science record (3.2 min) --
	      7 
	      8 c		1. Solar wind speed is determined (alpha speed, if possible)
	      9 c		2. Every DPPS step is assigned an m/q value
	     10 c		3. PHA events are collected in a 2D array: 2048 TOF bins (TOF/2)
	     11 c		   by 200 logarithmic m/q bins (0.80 - 32.0 amu/e, 1.862% bins)
	     12 
	     13 c	author: D.C. Hamilton (5 January 1996)
	     14 c	version: 1/5/96
	     15 
	     16 c	based on the program PULSE (2/24/95 version) by Michael R. Collier    
	     17 c	and on program SLOW_PH (7/4/95) by D. Hamilton
	     18 c       and on program MASS_ABUNDANCE (12/10/95) by D. Hamilton
	     19 
	     20 
	     21 c       compile for/check=(nounderflow,bounds)/warn=decl/extend comp
	     22 c
	     23 c       link comp,lib_dir:wind_lib/lib,lib_dir:l1lib/lib,
	     24 c            [wind.software.l1]compare_time,mrqmin_sw,mrqcof_sw,covsrt_sw,
	     25 c            gaussj_sw
	     26 
	     27 
	     28 c       notes: 1. the E/Q value for the analyzer assumes E/Q=0.5156*
	     29 c                 (1.05135)^dpps step as per an e-mail message from Dr.
	     30 c                 Hamilton dated 29 November 1994
	     31 c              2. mrqmin_sw and gaussj_sw are modified mrqmin and gaussj to
	     32 c                 transfer the flag sm_flag which indicates a singular matrix
	     33 c                 if set.
	     34 c              3. mass_rate.edb(j).rate(i) holds rates numbering 0-26 whereas
	     35 c                 rates(j,i) holds rates numbering 1-27
	     36 c              4. For the efficiency calculations for the fluxes, the program
	     37 c                 assumes the limits on the adps voltage are -3.1 and 1.7. If
	     38 c                 these limits are changed, the program will have to modified
	     39 c                 and re-compiled.
	     40 
	     41 
	     42 
	     43 c       *** required include files ***
	     44 
	     45         include 'inc_dir:edbdef.inc/nolist'   ! required include files for data

SMS_MASS_SPEED                                                   1-APR-1997 12:55:25    DEC Fortran V6.2-508                Page   2
                                                                20-DEC-1996 02:32:52    [WIND.SOFTWARE.STICS]SMS_MASS_SPEED.FOR;24

	    583         include 'inc_dir:l1fmt.inc/nolist'    ! structures req. by call prog.
	    715         include '($rmsdef)'
    1	    716 !*** MODULE $RMSDEF ***
    1	    717 CDEC$ OPTIONS/ALIGN=(RECORDS=PACKED,COMMONS=PACKED)
    1	    718  ! 
    1	    719  !  This SDL File Generated by VAX-11 Message V04-00 on 26-JAN-1994 13:51:15.86
    1	    720  ! 
    1	    721  ! 	.TITLE	RMSMSG -RMS COMPLETION CODES
    1	    722  !  *************************************************************************
    1	    723  !  *                                                                       *
    1	    724  !  * COPYRIGHT (C) DIGITAL EQUIPMENT CORPORATION, 1976, 1977, 1978, 1979,  *
    1	    725  !  * 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990,     *
    1	    726  !  * 1991,1992                                                             *
    1	    727  !  * ALL RIGHTS RESERVED.                                                  *
    1	    728  !  * UNPUBLISHED RIGHTS RESERVED UNDER THE COPYRIGHT LAWS  OF  THE  UNITED *
    1	    729  !  * STATES.                                                               *
    1	    730  !  *                                                                       *
    1	    731  !  * THE SOFTWARE CONTAINED ON THIS MEDIA IS PROPRIETARY TO  AND  EMBODIES *
    1	    732  !  * THE   CONFIDENTIAL   TECHNOLOGY  OF  DIGITAL  EQUIPMENT  CORPORATION. *
    1	    733  !  * POSSESSION, USE, DUPLICATION OR DISSEMINATION  OF  THE  SOFTWARE  AND *
    1	    734  !  * MEDIA  IS  AUTHORIZED  ONLY  PURSUANT TO A VALID WRITTEN LICENSE FROM *
    1	    735  !  * DIGITAL EQUIPMENT CORPORATION.                                        *
    1	    736  !  *                                                                       *
    1	    737  !  * RESTRICTED RIGHTS LEGEND USE, DUPLICATION, OR DISCLOSURE BY THE  U.S. *
    1	    738  !  * GOVERNMENT  IS  SUBJECT  TO RESTRICTIONS AS SET FORTH IN SUBPARAGRAPH *
    1	    739  !  * (C)(1)(II) OF DFARS 252.227-7013, OR IN FAR 52.227-19, AS APPLICABLE. *
    1	    740  !  *                                                                       *
    1	    741  !  *************************************************************************
    1	    742  ! ++
    1	    743  !  FACILITY: RMS
    1	    744  ! 
    1	    745  !  ABSTRACT:
    1	    746  ! 
    1	    747  ! 	THIS MODULE DEFINES ALL RMS COMPLETION CODES.
    1	    748  ! 
    1	    749  !  ENVIRONMENT:
    1	    750  ! 
    1	    751  ! 	THE MESSAGE TRANSLATOR MUST BE USED TO CONVERT RMSMSG.MSG INTO
    1	    752  ! 	RMSMSG.SDL.  THE SDL TRANSLATOR MUST THEN BE USED TO CONVERT
    1	    753  ! 	RMSMSG.SDL INTO RMSMSG.MAR (AND RMSMSG.B32).
    1	    754  ! 
    1	    755  !  AUTHOR: LEO F. LAVERDURE,	CREATION DATE:  10-DEC-1976
    1	    756  ! 
    1	    757  !  MODIFIED BY:
    1	    758  ! 
    1	    759  !                DEE RYAN                                30-SEP-1993
    1	    760  !                CORRECTED USE OF DIGITAL PRODUCT NAMES.
    1	    761  ! 
    1	    762  ! 	X-5	EMW		ELINOR M. WOODS		28-SEP-1993
    1	    763  ! 		MERGE IN OPENVMS VAX CORAL FIX:
    1	    764  ! 
    1	    765  ! 		X-10	EMW0019  ELINOR M. WOODS  	21-SEP-1993
    1	    766  ! 		ADD ONE NEW USER-REPORTABLE ERROR STATUS (WITH AN
    1	    767  ! 		ASSOCIATED STV): NETBTS.  RELOCATE NEW IDXSEARCH STATUS
    1	    768  ! 		(SEE X-9) FROM "ERROR with STV" SECTION TO "ERROR WITHOUT 
    1	    769  ! 		STV" section.  Expand "WITH STV' AND "without STV"
    1	    770  ! 		COMMENTS TO CLARIFY DIFFERENCE BETWEEN TWO.

SMS_MASS_SPEED                                                   1-APR-1997 12:55:25    DEC Fortran V6.2-508                Page   3
                                                                 4-NOV-1994 21:24:10    SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

    1	    771  ! 
    1	    772  ! 	X-4	EMW0016		ELINOR M. WOODS		10-AUG-1993
    1	    773  ! 		MERGE IN CORAL FIX:
    1	    774  ! 
    1	    775  ! 		MODIFY SEVERITY OF TWO DTF ERROR CODES (DTFACC AND
    1	    776  ! 		DTFCRE) FROM FATAL TO ERROR, AS REQUESTED BY SNA/DTF
    1	    777  ! 		FACILITY.		
    1	    778  ! 
    1	    779  ! 		ALSO MOVE NEW IDXSEARCH STATUS FROM ERROR WITH NO 
    1	    780  ! 		STV GROUPING TO ERROR WITH STV GROUPING.
    1	    781  ! 
    1	    782  ! 	X-3	EMW0010		ELINOR M. WOODS		02-JUL-1993
    1	    783  ! 		TO SUPPORT NEW KEY-LESS-THAN FUNCTIONALITY, ADDITION 
    1	    784  ! 		OF ONE USER-REPORTABLE ERROR STATUS:  IDXSEARCH, AND
    1	    785  ! 		TWO NEW RMS-INTERNAL ERROR STATUSES:  LSCAN AND 
    1	    786  ! 		ROOTSRCH.		
    1	    787  ! 
    1	    788  ! 	X-2	CW0019		CHRIS WHITAKER		11-NOV-1992
    1	    789  ! 		MERGE IN OPENVMS VAX V6.0 CHANGES
    1	    790  ! 
    1	    791  ! 		X-8	JM0012	JOHN MUNZER		11-NOV-1992
    1	    792  ! 		CHANGE TEXT FOR RMS$_LNE.
    1	    793  ! 
    1	    794  ! 		X-7	JM0006	JOHN MUNZER		17-APR-1992
    1	    795  ! 		ADD !XL PARAMETER TO RMS$_BUG TO REPORT R2.
    1	    796  ! 
    1	    797  ! 	X-1	RAB		RICHARD A. BISHOP	24-JUN-1991
    1	    798  ! 		MOVED TO [STARLET] FACILITY
    1	    799  ! 
    1	    800  ! 	==================================
    1	    801  ! 	OLD AUDIT TRAIL FOLLOWS:
    1	    802  ! 
    1	    803  ! 	X-33	LSS0154		LEONARD S. SZUBOWICZ	 4-APR-1990
    1	    804  ! 		ALTER TEXT AND FAO PARAMETERS OF RMS$_RUH AND RMS$_BUG
    1	    805  ! 		CONDITION VALUES FOR RMS/DDTM SUPPORT.
    1	    806  ! 
    1	    807  ! 	X-32	PJH		PAUL J. HOULIHAN	17-JAN-1990
    1	    808  ! 		CHANGE TEXT FOR RMS$_INCOMPSHR ERROR MESSAGE.
    1	    809  ! 
    1	    810  ! 	X-31	LSS0130		LEONARD S. SZUBOWICZ	12-OCT-1989
    1	    811  ! 		MERGE OF RMS/DDTM GENERATION X-30D2.
    1	    812  ! 		ADD GENERAL DDTM_ERR ERROR MESSAGE FOR DDTM SERVICE FAILURES;
    1	    813  ! 		STV WILL CONTAIN THE FAILING SYSTEM SERVICE CONDITION VALUE.
    1	    814  ! 
    1	    815  ! 	X-30	LSS0080		LEONARD S. SZUBOWICZ	06-OCT-1988
    1	    816  ! 		ADD RMS$_OK_ACT MESSAGE FOR USE BY FUTURE WORK TO $DISPLAY.
    1	    817  ! 		THIS IS PART OF LATENT SUPPORT FOR RMS/DDTM.
    1	    818  ! 
    1	    819  ! 	X-29	GJA0080		GARY J. ALLISON		06-JUN-1988
    1	    820  ! 		CHANGE TEXT OF SEMANTICS MESSAGE.
    1	    821  ! 
    1	    822  ! 	X-28	GJA0072		GARY J. ALLISON		02-MAR-1988
    1	    823  ! 		ADD EXT_ERR, OPNOTSUP, EXTNOTFOU, AND SEMANTICS MESSAGES.
    1	    824  ! 
    1	    825  ! 	X-27	PMV0072		PETER M. VATNE		08-OCT-1987
    1	    826  ! 		CHANGE RMS$_NOJNLLIC TO RMS$_JNLNOTAUTH.
    1	    827  ! 

SMS_MASS_SPEED                                                   1-APR-1997 12:55:25    DEC Fortran V6.2-508                Page   4
                                                                 4-NOV-1994 21:24:10    SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

    1	    828  !  	X-26	LSS0057		LEONARD S. SZUBOWICZ	15-SEP-1987
    1	    829  ! 		CHANGE TEXT FOR THE RMS$_OK_DUP STATUS SUCH THAT THE MESSAGE
    1	    830  ! 		IS APPLICABLE TO $GET AS WELL AS $PUT.
    1	    831  ! 
    1	    832  ! 	X-25	PMV0068		PETER M. VATNE		11-SEP-1987
    1	    833  ! 		ADD RMS$_NOJNLLIC, NO RMS JOURNALING LICENSE, FOR LMF.
    1	    834  ! 
    1	    835  ! 	X-24	RNM0026		RUSSELL N. MURRAY	15-AUG-1987
    1	    836  ! 		ADD RMS$_SYNCH MESSAGE FOR NOTIFICATION OF SYNCHRONOUS
    1	    837  ! 		COMPLETION.
    1	    838  ! 
    1	    839  ! 	X-23	JEJ0479		JAMES E JOHNSON		13-AUG-1987
    1	    840  ! 		ADD RMS$_IVATRACE MESSAGE.
    1	    841  ! 
    1	    842  ! 	X-22	PMV0061		PETER M. VATNE		03-AUG-1987
    1	    843  ! 		CHANGE RESERVED MESSAGE RMS$_BUG_XX5 TO RMS$_BUG_RU_COMMIT_FAIL
    1	    844  ! 		TO CORRESPOND TO POSITIVE RMS BUGCHECK FTL$_RU_COMMIT_FAIL.
    1	    845  ! 
    1	    846  !  	X-21	LSS0042		LEONARD S. SZUBOWICZ	13-MAY-1987
    1	    847  ! 		CHANGE RESERVED MESSAGE RMS$_BUG_XX4 TO RMS$_BUG_RU_ABORT_FAIL
    1	    848  ! 		TO CORRESPOND TO POSITIVE RMS BUGCHECK FTL$_RU_ABORT_FAIL
    1	    849  ! 	
    1	    850  ! 	X-20	SAD0034		STUART A. DAVIDSON	12-MAR-1987 
    1	    851  ! 		DROP QUOTES FROM SNADTF MESSAGE TEXT.
    1	    852  ! 
    1	    853  ! 	X-19	PJH		PAUL J. HOULIHAN	19-JAN-1987
    1	    854  ! 		MERGE IN 17J1.
    1	    855  ! 
    1	    856  ! 		X-17J1	PJH		PAUL J. HOULIHAN	15-JAN-1987
    1	    857  ! 			FIX SEVERAL SMALL JNL PROBLEMS.
    1	    858  ! 			ADD RMS$_BUG_FLUSH_JNL_FAILED CODE.
    1	    859  ! 
    1	    860  ! 	X-18	KPS0148		KENNETH P. SIEGEL	04-DEC-1986
    1	    861  ! 		ADDED SNPPF (STATISTICS MONITORING NOT SUPPORTED FOR
    1	    862  ! 		PROCESS PERMANENT FILES) ERROR MESSAGE.
    1	    863  ! 
    1	    864  ! 	X-17	PMV0025		PETER M. VATNE		24-NOV-1986
    1	    865  ! 		ADD NEW MESSAGE, RMS$_NOTSAMEJNL.  THIS STATUS IS
    1	    866  ! 		USED TO RESTRICT AI/BI WITH RU JOURNALING TO A
    1	    867  ! 		SINGLE LONG-TERM JOURNAL FILE.
    1	    868  ! 
    1	    869  ! 	X-16	DAS		DAVID A. SOLOMON	18-NOV-1986
    1	    870  ! 		ADD NEW MESSAGE, RMS$_DELJNS. REMOVE RMS$_XCR (BY REPLACING IT
    1	    871  ! 		WITH A PLACEHOLDER), AS JOURNALING BITS ARE NO LONGER
    1	    872  ! 		SPECIFIED IN THE $XABJNL. SLIGHT WORDING CHANGE ON DETACHED
    1	    873  ! 		RU RECOVERY ERROR MESSAGES.
    1	    874  ! 
    1	    875  ! 	X-15	DAS		DAVID A. SOLOMON	12-NOV-1986
    1	    876  ! 		FIX ERROR IN X-5/X-6: JOURNALING VARIANT NOT MERGED
    1	    877  ! 		CORRECTLY, RESULTING IN SEVERAL JOURNALING MESSAGES NUMBERS
    1	    878  ! 		BEING DIFFERENT IN THE MAININE THAN WHAT THEY WERE ON THE
    1	    879  ! 		JOURNALING VARIANT. ALSO, MOVE NEW SNADTF MESSAGES TO RE-USE
    1	    880  ! 		AVAILABLE UNUSED MESSAGE NUMBERS, INSTEAD OF GENERATING NEW
    1	    881  ! 		ONES. FINALLY, CHANGE RMS$_BUG_ABORT TO RMS$_BUG_RU_ACTIVE.
    1	    882  ! 
    1	    883  ! 	X-14	SAD0014		STUART A. DAVIDSON	 4-NOV-1986
    1	    884  ! 		SNADTF - FIX TYPO IN DTFACC, DTFCRE

SMS_MASS_SPEED                                                   1-APR-1997 12:55:25    DEC Fortran V6.2-508                Page   5
                                                                 4-NOV-1994 21:24:10    SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

    1	    885  ! 
    1	    886  ! 	X-13	SAD0014		STUART A. DAVIDSON	 3-NOV-1986
    1	    887  ! 		SNADTF - FIX TYPO, ADD 2 ADDITIONAL MESSAGES.
    1	    888  ! 
    1	    889  ! 	X-12	JEJ0377		JAMES E JOHNSON		29-OCT-1986
    1	    890  ! 		ADD NOEXTEND ERROR CODE TO FLAG FAILED RELATIVE FILE
    1	    891  ! 		EXTENDS DUE TO PREVIOUS FAILURES.
    1	    892  ! 
    1	    893  ! 	X-11	KPS0131		KENNETH P. SIEGEL	25-OCT-1986
    1	    894  ! 		ADDED SNS ERROR CODE FOR STATISTICS NOT SUPPORT ON
    1	    895  ! 		NON-DISK DEVICES.
    1	    896  ! 
    1	    897  ! 	X-10	SAD009		STUART A. DAVIDSON	06-OCT-1986
    1	    898  ! 		ADD COMPLETION CODES FOR SNADTF (IBM DATA XFER)
    1	    899  ! 
    1	    900  ! 	X-9	GJA0003		GARY J. ALLISON		29-SEP-1986
    1	    901  ! 		ADD DETACHED RECOVERY ERROR MESSAGES
    1	    902  ! 
    1	    903  ! 	X-8	PMV0008		PETER M. VATNE		24-SEP-1986
    1	    904  ! 		MODIFY RMS$_ACC_AIJ, RMS$_ACC_BIJ, AND RMS$_ACC_ATJ
    1	    905  ! 		TO ALSO OUTPUT THE STV.
    1	    906  ! 
    1	    907  ! 	X-7	JWT0243		JIM TEAGUE		 2-SEP-1986
    1	    908  ! 		ADD NEW ERRORS FOR COLLATED KEYS.
    1	    909  ! 
    1	    910  ! 	X-6	GJA		GARY J. ALLISON		29-JUL-1986
    1	    911  ! 		REMOVE DUPS FROM JNL MERGE.
    1	    912  ! 
    1	    913  ! 	X-5	GJA		GARY J. ALLISON		29-JUL-1986
    1	    914  ! 		MERGE JOURNALING INTO MAINLINE
    1	    915  ! 
    1	    916  ! 		X-3J6	DAS		DAVID A. SOLOMON	14-APR-1986
    1	    917  ! 			REMOVE RMS$_RUH_FILE (USING A GENERAL RUF MESSAGE INSTEAD).
    1	    918  ! 			CHANGE RMS$_RUH TEXT TO NOT HAVE FAO PARAMETERS. ADD
    1	    919  ! 			RMS$_BUG_RURECERR.
    1	    920  ! 	
    1	    921  ! 		X-3J5	JEJ0302		JAMES E JOHNSON		 4-APR-1986
    1	    922  ! 			ADD RMS$_RRF (ERROR DURING RU RECOVERY) AND
    1	    923  ! 			RMS$_RUH/RMS$_RUH_FILE (USED TO FORM TEXT OF RU HANDLER ERRORS
    1	    924  ! 			SENT TO OPCOM).
    1	    925  ! 	
    1	    926  ! 		X-3J4	JEJ0272		JAMES E JOHNSON		11-FEB-1986
    1	    927  ! 			ADD RMS$_RUF, RMS$_BUG_ABORT CODES.
    1	    928  ! 	
    1	    929  ! 		X-3J3	JEJ0237		JAMES E JOHNSON		16-DEC-1985
    1	    930  ! 			ADD RMS$_RUNDOWN CODE
    1	    931  ! 	
    1	    932  ! 		X-3J2	JEJ0205		JAMES E JOHNSON		25-OCT-1985
    1	    933  ! 			ADD JOURNAL SPECIFIC WRTJNL_XXJ ERROR CODES TO REPLACE
    1	    934  ! 			THE GENERIC ERRWRTJNL CODE.
    1	    935  ! 
    1	    936  ! 	X-4	JEJ0216		JAMES E JOHNSON		18-NOV-1985
    1	    937  ! 		MERGE X-3J2 INTO MAIN LINE FOR V4.4.
    1	    938  ! 
    1	    939  ! 		X-3J2	JEJ0205		JAMES E JOHNSON		25-OCT-1985
    1	    940  ! 			ADD JOURNAL SPECIFIC WRTJNL_XXJ ERROR CODES TO REPLACE
    1	    941  ! 			THE GENERIC ERRWRTJNL CODE.

SMS_MASS_SPEED                                                   1-APR-1997 12:55:25    DEC Fortran V6.2-508                Page   6
                                                                 4-NOV-1994 21:24:10    SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

    1	    942  ! 
    1	    943  ! 	X-3	JEJ0161		JAMES E JOHNSON		 9-SEP-1985
    1	    944  ! 		UPDATE RMS JOURNALING MESSAGES.
    1	    945  ! 
    1	    946  ! 	X-2	JWT0212		JIM TEAGUE		 4-SEP-1985
    1	    947  ! 		ADD (WHAT IS FOR NOW) AN INTERNAL STATUS CODE TO 
    1	    948  ! 		DIFFERENTIATE BETWEEN FINDING A DELETED RECORD (DEL)
    1	    949  ! 		AND FINDING IT BUT WITH A DIFFERENT KEY (KEY_MISMATCH).
    1	    950  ! 		
    1	    951  ! 	V03-024	RAS0314		RON SCHAEFER		21-JUN-1984
    1	    952  ! 		WORK OVER THE MESSAGES ONE MORE TIME:  FIX TYPO IN OK_RNF,
    1	    953  ! 		DELETE ACPEOF ERROR, DELETE WSF ERROR.
    1	    954  ! 
    1	    955  ! 	V03-023	RAS0282		RON SCHAEFER		28-MAR-1984
    1	    956  ! 		MINOR TEXT CHANGES AND COMMENTS ADDED.
    1	    957  ! 		DELETE RMS$_COP ERROR.
    1	    958  ! 
    1	    959  ! 	V03-022	DAS0005		DAVID SOLOMON		19-MAR-1984
    1	    960  ! 		REMOVE RMS$_ECHO (NO LONGER NEEDED AS A RESULT OF NEW
    1	    961  ! 		IMPLEMENTATION FOR ECHO SYS$INPUT -> SYS$OUTPUT).
    1	    962  ! 
    1	    963  ! 	V03-021	JWT0150		JIM TEAGUE		01-FEB-1984
    1	    964  ! 		ADD RMS$_IFF FOR TRYING TO WRITE-ACCESS A FILE ON 
    1	    965  ! 		MAGTAPE THAT HAS NON-0 VALUE FOR ANSI BUFFER OFFSET.
    1	    966  ! 
    1	    967  ! 	V03-020	RAS0233		RON SCHAEFER		 9-JAN-1984
    1	    968  ! 		ADD RMS$_NOVALPRS ERROR FOR $SEARCH NOT PRECEDED BY
    1	    969  ! 		VALID $PARSE.
    1	    970  ! 
    1	    971  ! 	V03-019	JWT0148		JIM TEAGUE		20-DEC-1983
    1	    972  ! 		ADD A JNL XAB ERROR FOR CONFLICTING RU ATTRIBUTES
    1	    973  ! 		ON $CREATE: RMS$_XCR.
    1	    974  ! 
    1	    975  ! 	V03-018	RAS0171		RON SCHAEFER		28-JUL-1983
    1	    976  ! 		ADD RMS$_BUSY; A STRUCTURE-LESS ERROR (R0-ONLY STATUS)
    1	    977  ! 		REPLACING TEMP3.
    1	    978  ! 
    1	    979  ! 	V03-017	DAS0004		DAVID SOLOMON		28-JUN-1983
    1	    980  ! 		ADD RMS$_FILEPURGED; ADD RMS$_ACPEOF FOR ZALEWSKI.
    1	    981  ! 
    1	    982  ! 	V03-016	KPL0007		PETER LIEBERWIRTH	 8-JUN-1983
    1	    983  ! 		FIX SPELLING IN JNL ERROR MESSAGES, ADD CJF ERROR WHICH
    1	    984  ! 		WILL SOON SUBSUME COP AND CQE.
    1	    985  ! 
    1	    986  ! 	V03-015	DAS0003		DAVID SOLOMON		18-FEB-1983
    1	    987  ! 		ADD XNF (REPLACING TEMP9), TMR (NEW), LWC (NEW).
    1	    988  ! 
    1	    989  ! 	V03-014	KBT0497		KEITH B. THOMPSON	18-FEB-1983
    1	    990  ! 		ADD INCOMPSHR ERROR (REUSE OF TEMP1 SLOT)
    1	    991  ! 
    1	    992  ! 	V03-013	RAS0120		RON SCHAEFER		 2-FEB-1983
    1	    993  ! 		ADD ECHO PSEUDO-STATUS TO SUPPORT ECHO OF SYS$INPUT
    1	    994  ! 		TO SYS$OUTPUT.
    1	    995  ! 
    1	    996  ! 	V03-012	JWH0174		JEFFRY W. HORN		24-JAN-1983
    1	    997  ! 		ADD CQE AND COP ERRORS.
    1	    998  ! 

SMS_MASS_SPEED                                                   1-APR-1997 12:55:25    DEC Fortran V6.2-508                Page   7
                                                                 4-NOV-1994 21:24:10    SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

    1	    999  ! 	V03-011	KPL0006		PETER LIEBERWIRTH	 7-JAN-1983
    1	   1000  ! 		ADD OK_RULK FOR RECOVERY UNIT SUPPORT.
    1	   1001  ! 
    1	   1002  ! 		ADD REENT ERROR FOR $RENAME.
    1	   1003  ! 		
    1	   1004  ! 	V03-009	JWH0153		JEFFREY W. HORN		 8-DEC-1982
    1	   1005  ! 		ADD NRU ERROR.
    1	   1006  ! 
    1	   1007  ! 	V03-008	JWH0152		JEFFREY W. HORN		 8-DEC-1982
    1	   1008  ! 		ADD JNS ERROR.
    1	   1009  ! 
    1	   1010  ! 	V03-007 MCN0002		MARIA DEL C. NASR	15-NOV-1982
    1	   1011  ! 		REPLACE ORD ERROR CODE ELIMINATED BY MCN0001, SINCE
    1	   1012  ! 		THE NETWORK CODE REFERENCES IT.
    1	   1013  ! 
    1	   1014  ! 	V03-006 MCN0001		MARIA DEL C. NASR	26-OCT-1982
    1	   1015  ! 		PRINT KEY OF REFERENCE OR AREA IDENTIFICATION NUMBER
    1	   1016  ! 		INSTEAD OF XAB ADDRESS FOR ERRORS RETURNED DURING
    1	   1017  ! 		INDEXED FILE CREATION.  ALSO RENAME ALL UNUSED ERROR
    1	   1018  ! 		CODES TO TEMP.
    1	   1019  ! 
    1	   1020  ! 	V03-005	JWH0102		JEFFREY W. HORN		24-SEP-1982
    1	   1021  ! 		ADD RUP ERROR.
    1	   1022  ! 
    1	   1023  ! 	V03-004	RAS0095		RON SCHAEFER		 7-SEP-1982
    1	   1024  ! 		ADD OVRDSKQUOTA ERROR.
    1	   1025  ! 
    1	   1026  ! 	V03-002	JWH0002		JEFFREY W. HORN		26-JUL-1982
    1	   1027  ! 		CONVERT TO .MSG FORMAT.   ADD RUM ERROR.
    1	   1028  ! 
    1	   1029  ! 	V03-001	JWH0001		JEFFREY W. HORN		20-JUL-1982
    1	   1030  ! 		ADD JNF, JOP, AND NOJ ERRORS.
    1	   1031  ! 
    1	   1032  ! 	V02-042	KPL0005		PETER LIEBERWIRTH	 4-FEB-1982
    1	   1033  ! 		ADD ERROR MESSAGES RMS$_EXENQLM AND RMS$_DEADLOCK
    1	   1034  ! 		CORRECTLY.
    1	   1035  ! 
    1	   1036  ! 	V02-041	CDS0001		C D SAETHER	24-JAN-1982
    1	   1037  ! 		ADD GBC AND CRMP ERRORS.
    1	   1038  ! 
    1	   1039  ! 	V02-040	JAK0069		J A KRYCKA	15-JAN-1982
    1	   1040  ! 		ADD SUPPORT AND NETFAIL ERROR CODES.
    1	   1041  ! 
    1	   1042  ! 	V02-039	JAK0068		J A KRYCKA	31-DEC-1981
    1	   1043  ! 		MODIFY TEXT FOR SUP, NET, BUG_DAP, AND ENV ERROR MESSAGES.
    1	   1044  ! 
    1	   1045  ! 	V02-038 LJA0001		LAURIE ANDERSON 20-DEC-1981
    1	   1046  ! 		MODIFIED SOME MESSAGES TO READ BETTER.
    1	   1047  ! 
    1	   1048  ! 	V02-037	JAK0063		J A KRYCKA	31-AUG-1981
    1	   1049  ! 		ADD CRE_STM SUCCESS CODE.
    1	   1050  ! 
    1	   1051  ! 	V02-036	KPL0004		PETER LIEBERWIRTH	13-JAN-1981
    1	   1052  ! 		ADD ENQ SEVERE ERROR MESSAGE, TO INDICATE $ENQ/$DEQ FAILURE.
    1	   1053  ! 		ALSO ADD SUCCESS CODES OK_RRL, AND OK_WAT.
    1	   1054  ! 
    1	   1055  ! 	V02-035	REFORMAT	J A KRYCKA	30-JUL-1980

SMS_MASS_SPEED                                                   1-APR-1997 12:55:25    DEC Fortran V6.2-508                Page   8
                                                                 4-NOV-1994 21:24:10    SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

    1	   1056  ! 
    1	   1057  ! --
    1	   1058 	PARAMETER RMS$_FACILITY = '00000001'X
    1	   1059 	PARAMETER RMS$V_STVSTATUS = '0000000E'X	 !  MOVE TO BIT 14 OF THE
    1	   1060  !  STATUS CODE IT INDICATES
    1	   1061  !  THAT STV CONTAINS A SECONDARY
    1	   1062  !  STATUS CODE.
    1	   1063 	PARAMETER RMS$_SUC = '00010001'X
    1	   1064 	PARAMETER RMS$_NORMAL = '00010001'X
    1	   1065  ! +
    1	   1066  ! 
    1	   1067  ! 	SUCCESS CODES
    1	   1068  ! 
    1	   1069  ! -
    1	   1070  !  BIT 16 = BIT 15 = 1
    1	   1071 	PARAMETER RMS$_STALL = '00018001'X
    1	   1072  !  (NOTE: USER NEVER RECEIVES THIS CODE)
    1	   1073 	PARAMETER RMS$_PENDING = '00018009'X
    1	   1074 	PARAMETER RMS$_OK_DUP = '00018011'X
    1	   1075 	PARAMETER RMS$_OK_IDX = '00018019'X
    1	   1076  !   (RECORD HAS BEEN INSERTED, BUT INDEX STRUCTURE IS NO LONGER
    1	   1077  !   OPTIMAL.)
    1	   1078 	PARAMETER RMS$_OK_RLK = '00018021'X
    1	   1079  !  (BECAUSE LOCKER SET RLK IN ROP FIELD WHEN RECORD WAS LOCKED.)
    1	   1080 	PARAMETER RMS$_OK_RRL = '00018029'X
    1	   1081  !  (BECAUSE READER SET RRL IN ROP FIELD WHEN ACCESSING RECORD.)
    1	   1082  !  (THIS CODE USED TO BE OK_RRV)
    1	   1083  ! OK_RRV	;MSG <record was inserted successfully in primary>
    1	   1084  !   (BUT IT MAY NOT BE ACCESSIBLE VIA ONE-OR-MORE SECONDARY KEYS,
    1	   1085  !   AND NOT BY RFA ADDRESSING. FILE RE-ORGANIZATION RECOMMENDED!)
    1	   1086 	PARAMETER RMS$_KFF = '00018031'X
    1	   1087 	PARAMETER RMS$_OK_ALK = '00018039'X
    1	   1088 	PARAMETER RMS$_OK_DEL = '00018041'X
    1	   1089 	PARAMETER RMS$_OK_RNF = '00018049'X
    1	   1090 	PARAMETER RMS$_OK_LIM = '00018051'X
    1	   1091 	PARAMETER RMS$_OK_NOP = '00018059'X
    1	   1092 	PARAMETER RMS$_OK_WAT = '00018061'X
    1	   1093  !  (BECAUSE WAT BIT IN ROP WAS SET AND RECORD WAS ALREADY
    1	   1094  !  LOCKED.)
    1	   1095 	PARAMETER RMS$_CRE_STM = '00018069'X
    1	   1096 	PARAMETER RMS$_OK_RULK = '00018071'X
    1	   1097 	PARAMETER RMS$_SYNCH = '00018079'X
    1	   1098 	PARAMETER RMS$_OK_ACT = '00018081'X
    1	   1099 	PARAMETER RMS$_OK_NOCURTID = '00018089'X
    1	   1100  ! +
    1	   1101  ! 
    1	   1102  ! 	SUCCESS CODES PASSED THRU FROM DRIVERS AND ACP -	BIT 15 = 0
    1	   1103  ! 
    1	   1104  ! -
    1	   1105 	PARAMETER RMS$_CONTROLC = '00010651'X	 !  TERMINAL I/O ABORTED DUE TO CTRL/C
    1	   1106 	PARAMETER RMS$_CONTROLO = '00010609'X
    1	   1107  !  TERMINAL I/O ABORTED DUE TO CTRL/O
    1	   1108 	PARAMETER RMS$_CONTROLY = '00010611'X
    1	   1109  !  TERMINAL I/O ABORTED DUE TO CTRL/Y
    1	   1110 	PARAMETER RMS$_CREATED = '00010619'X
    1	   1111  !  FILE WAS CREATED, NOT OPENED
    1	   1112 	PARAMETER RMS$_SUPERSEDE = '00010631'X

SMS_MASS_SPEED                                                   1-APR-1997 12:55:25    DEC Fortran V6.2-508                Page   9
                                                                 4-NOV-1994 21:24:10    SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

    1	   1113  !  CREATED FILE SUPERSEDED EXISTING VERSION
    1	   1114 	PARAMETER RMS$_OVRDSKQUOTA = '00010669'X
    1	   1115  !  DISK USAGE EXCEEDS DISK QUOTA
    1	   1116 	PARAMETER RMS$_FILEPURGED = '00010679'X
    1	   1117  !  CREATE FILE CAUSED OLDEST FILE
    1	   1118  !  VERSION TO BE PURGED
    1	   1119  ! +
    1	   1120  ! 
    1	   1121  ! 	WARNING CODES
    1	   1122  ! 
    1	   1123  ! -
    1	   1124  !  BIT 16 = BIT 15 = 1, BIT 14 = 0
    1	   1125 	PARAMETER RMS$_BOF = '00018198'X
    1	   1126 	PARAMETER RMS$_RNL = '000181A0'X
    1	   1127 	PARAMETER RMS$_RTB = '000181A8'X
    1	   1128 	PARAMETER RMS$_TMO = '000181B0'X
    1	   1129 	PARAMETER RMS$_TNS = '000181B8'X
    1	   1130 	PARAMETER RMS$_BES = '000181C0'X
    1	   1131 	PARAMETER RMS$_PES = '000181C8'X
    1	   1132  ! +
    1	   1133  ! 
    1	   1134  ! 	ERROR CODES - WITHOUT STV (THAT IS, STV MAY BE USED BUT NO ASSOCIATED
    1	   1135  ! 		      CONDITION CODE IS IN STV)
    1	   1136  ! 
    1	   1137  ! -
    1	   1138  !  BIT 16 = BIT 15 = 1, BIT 14 = 0
    1	   1139 	PARAMETER RMS$_ACT = '0001825A'X
    1	   1140 	PARAMETER RMS$_DEL = '00018262'X
    1	   1141 	PARAMETER RMS$_INCOMPSHR = '0001826A'X
    1	   1142 	PARAMETER RMS$_DNR = '00018272'X
    1	   1143 	PARAMETER RMS$_EOF = '0001827A'X
    1	   1144 	PARAMETER RMS$_FEX = '00018282'X
    1	   1145 	PARAMETER RMS$_FLK = '0001828A'X
    1	   1146 	PARAMETER RMS$_FNF = '00018292'X
    1	   1147 	PARAMETER RMS$_PRV = '0001829A'X
    1	   1148 	PARAMETER RMS$_REX = '000182A2'X
    1	   1149 	PARAMETER RMS$_RLK = '000182AA'X
    1	   1150 	PARAMETER RMS$_RNF = '000182B2'X
    1	   1151  !   (RECORD NEVER WAS IN FILE, OR HAS BEEN DELETED.)
    1	   1152 	PARAMETER RMS$_WLK = '000182BA'X
    1	   1153 	PARAMETER RMS$_EXP = '000182C2'X
    1	   1154 	PARAMETER RMS$_NMF = '000182CA'X
    1	   1155 	PARAMETER RMS$_SUP = '000182D2'X
    1	   1156  !  (NOTE THAT SUPPORT HAS REPLACED SUP EXCEPT WHEN RMS CANNOT
    1	   1157  !  MAP THE DAP STATUS CODE INTO A FAL STATUS CODE.)
    1	   1158  !  (NOTE ALSO THAT SUP SHOULD HAVE BEEN DEFINED AS A SEVERE
    1	   1159  !  ERROR CODE. HOWEVER, SUPPORT IS A SEVERE ERROR CODE.)
    1	   1160 	PARAMETER RMS$_RSA = '000182DA'X
    1	   1161 	PARAMETER RMS$_CRC = '000182E2'X
    1	   1162 	PARAMETER RMS$_WCC = '000182EA'X
    1	   1163 	PARAMETER RMS$_IDR = '000182F2'X
    1	   1164 	PARAMETER RMS$_LWC = '000182FA'X
    1	   1165 	PARAMETER RMS$_UNUSED1 = '00018302'X
    1	   1166 	PARAMETER RMS$_NOVALPRS = '0001830A'X
    1	   1167 	PARAMETER RMS$_KEY_MISMATCH = '00018312'X
    1	   1168 	PARAMETER RMS$_RUH = '0001831A'X
    1	   1169 	PARAMETER RMS$_JND = '00018322'X

SMS_MASS_SPEED                                                   1-APR-1997 12:55:25    DEC Fortran V6.2-508                Page  10
                                                                 4-NOV-1994 21:24:10    SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

    1	   1170 	PARAMETER RMS$_BADPHASE = '0001832A'X
    1	   1171 	PARAMETER RMS$_TOWDR = '00018332'X
    1	   1172 	PARAMETER RMS$_NEXDR = '0001833A'X
    1	   1173 	PARAMETER RMS$_INVDRMSG = '00018342'X
    1	   1174 	PARAMETER RMS$_RU_ACTIVE = '0001834A'X
    1	   1175 	PARAMETER RMS$_UNKRUFAC = '00018352'X
    1	   1176 	PARAMETER RMS$_LIMBO = '0001835A'X
    1	   1177 	PARAMETER RMS$_IVATRACE = '00018362'X
    1	   1178 	PARAMETER RMS$_OPNOTSUP = '0001836A'X
    1	   1179 	PARAMETER RMS$_EXTNOTFOU = '00018372'X
    1	   1180 	PARAMETER RMS$_EXT_ERR = '0001837A'X
    1	   1181 	PARAMETER RMS$_SEMANTICS = '00018382'X
    1	   1182 	PARAMETER RMS$_LSCAN = '0001838A'X
    1	   1183 	PARAMETER RMS$_ROOTSRCH = '00018392'X
    1	   1184 	PARAMETER RMS$_IDXSEARCH = '0001839A'X
    1	   1185 	PARAMETER RMS$_NETBTS = '000183A2'X
    1	   1186  ! +
    1	   1187  ! 
    1	   1188  ! 	ERROR CODES - WITH STV ERROR CODE (THAT IS, STV CONTAINS AN ASSOCIATED CONDITION CODE)
    1	   1189  ! 
    1	   1190  ! -
    1	   1191  !  BIT 16 = BIT 15 = BIT 14 = 1
    1	   1192 	PARAMETER RMS$_ACC = '0001C002'X
    1	   1193 	PARAMETER RMS$_CRE = '0001C00A'X
    1	   1194 	PARAMETER RMS$_DAC = '0001C012'X
    1	   1195 	PARAMETER RMS$_ENT = '0001C01A'X
    1	   1196 	PARAMETER RMS$_EXT = '0001C022'X
    1	   1197 	PARAMETER RMS$_FND = '0001C02A'X
    1	   1198 	PARAMETER RMS$_MKD = '0001C032'X
    1	   1199 	PARAMETER RMS$_DPE = '0001C03A'X
    1	   1200 	PARAMETER RMS$_SPL = '0001C042'X
    1	   1201 	PARAMETER RMS$_DNF = '0001C04A'X
    1	   1202 	PARAMETER RMS$_RUF = '0001C052'X
    1	   1203 	PARAMETER RMS$_WRTJNL_AIJ = '0001C05A'X
    1	   1204 	PARAMETER RMS$_WRTJNL_BIJ = '0001C062'X
    1	   1205 	PARAMETER RMS$_WRTJNL_ATJ = '0001C06A'X
    1	   1206 	PARAMETER RMS$_WRTJNL_RUJ = '0001C072'X
    1	   1207 	PARAMETER RMS$_RRF = '0001C07A'X
    1	   1208 	PARAMETER RMS$_DDTM_ERR = '0001C082'X
    1	   1209  ! +
    1	   1210  ! 
    1	   1211  ! 	SEVERE ERROR CODES - WITHOUT STV (THAT IS, STV MAY BE USED BUT NO ASSOCIATED
    1	   1212  ! 			     CONDITION CODE IS IN STV)
    1	   1213  ! 
    1	   1214  ! -
    1	   1215  !  BIT 16 = BIT 15 = 1, BIT 14 = 0
    1	   1216 	PARAMETER RMS$_DTFCDDREC = '000183EC'X
    1	   1217 	PARAMETER RMS$_AID = '000183F4'X
    1	   1218 	PARAMETER RMS$_ALN = '000183FC'X
    1	   1219 	PARAMETER RMS$_ALQ = '00018404'X
    1	   1220 	PARAMETER RMS$_ANI = '0001840C'X
    1	   1221 	PARAMETER RMS$_AOP = '00018414'X
    1	   1222 	PARAMETER RMS$_BKS = '0001841C'X
    1	   1223 	PARAMETER RMS$_BKZ = '00018424'X
    1	   1224 	PARAMETER RMS$_BLN = '0001842C'X
    1	   1225 	PARAMETER RMS$_BUG = '00018434'X
    1	   1226 	PARAMETER RMS$_BUG_DDI = '0001843C'X

SMS_MASS_SPEED                                                   1-APR-1997 12:55:25    DEC Fortran V6.2-508                Page  11
                                                                 4-NOV-1994 21:24:10    SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

    1	   1227 	PARAMETER RMS$_BUG_DAP = '00018444'X
    1	   1228 	PARAMETER RMS$_BUG_RU_ACTIVE = '0001844C'X
    1	   1229 	PARAMETER RMS$_BUG_RURECERR = '00018454'X
    1	   1230 	PARAMETER RMS$_BUG_FLUSH_JNL_FAILED = '0001845C'X
    1	   1231 	PARAMETER RMS$_BUG_RU_ABORT_FAIL = '00018464'X
    1	   1232 	PARAMETER RMS$_BUG_RU_COMMIT_FAIL = '0001846C'X
    1	   1233 	PARAMETER RMS$_BUG_XX6 = '00018474'X
    1	   1234 	PARAMETER RMS$_BUG_XX7 = '0001847C'X
    1	   1235 	PARAMETER RMS$_BUG_XX8 = '00018484'X
    1	   1236 	PARAMETER RMS$_BUSY = '0001848C'X
    1	   1237 	PARAMETER RMS$_CCR = '00018494'X
    1	   1238 	PARAMETER RMS$_CHG = '0001849C'X
    1	   1239 	PARAMETER RMS$_CHK = '000184A4'X
    1	   1240 	PARAMETER RMS$_COD = '000184AC'X
    1	   1241 	PARAMETER RMS$_CUR = '000184B4'X
    1	   1242 	PARAMETER RMS$_DAN = '000184BC'X
    1	   1243 	PARAMETER RMS$_DEV = '000184C4'X
    1	   1244 	PARAMETER RMS$_DIR = '000184CC'X
    1	   1245 	PARAMETER RMS$_DME = '000184D4'X
    1	   1246 	PARAMETER RMS$_DNA = '000184DC'X
    1	   1247 	PARAMETER RMS$_DTP = '000184E4'X
    1	   1248 	PARAMETER RMS$_DUP = '000184EC'X
    1	   1249 	PARAMETER RMS$_DVI = '000184F4'X
    1	   1250 	PARAMETER RMS$_ESA = '000184FC'X
    1	   1251 	PARAMETER RMS$_ESS = '00018504'X
    1	   1252 	PARAMETER RMS$_FAB = '0001850C'X
    1	   1253 	PARAMETER RMS$_FAC = '00018514'X
    1	   1254 	PARAMETER RMS$_FLG = '0001851C'X
    1	   1255 	PARAMETER RMS$_FNA = '00018524'X
    1	   1256 	PARAMETER RMS$_FNM = '0001852C'X
    1	   1257 	PARAMETER RMS$_FSZ = '00018534'X
    1	   1258 	PARAMETER RMS$_FOP = '0001853C'X
    1	   1259 	PARAMETER RMS$_FUL = '00018544'X
    1	   1260 	PARAMETER RMS$_IAL = '0001854C'X
    1	   1261 	PARAMETER RMS$_IAN = '00018554'X
    1	   1262 	PARAMETER RMS$_IDX = '0001855C'X
    1	   1263 	PARAMETER RMS$_IFI = '00018564'X
    1	   1264 	PARAMETER RMS$_IMX = '0001856C'X
    1	   1265 	PARAMETER RMS$_IOP = '00018574'X
    1	   1266 	PARAMETER RMS$_IRC = '0001857C'X
    1	   1267 	PARAMETER RMS$_ISI = '00018584'X
    1	   1268 	PARAMETER RMS$_KBF = '0001858C'X
    1	   1269 	PARAMETER RMS$_KEY = '00018594'X
    1	   1270 	PARAMETER RMS$_KRF = '0001859C'X
    1	   1271 	PARAMETER RMS$_KSZ = '000185A4'X
    1	   1272 	PARAMETER RMS$_LAN = '000185AC'X
    1	   1273 	PARAMETER RMS$_RUNDOWN = '000185B4'X
    1	   1274 	PARAMETER RMS$_LNE = '000185BC'X
    1	   1275 	PARAMETER RMS$_DTFCVT = '000185C4'X
    1	   1276 	PARAMETER RMS$_MRN = '000185CC'X
    1	   1277 	PARAMETER RMS$_MRS = '000185D4'X
    1	   1278 	PARAMETER RMS$_NAM = '000185DC'X
    1	   1279 	PARAMETER RMS$_NEF = '000185E4'X
    1	   1280 	PARAMETER RMS$_DTFQUASYN = '000185EC'X
    1	   1281 	PARAMETER RMS$_NOD = '000185F4'X
    1	   1282 	PARAMETER RMS$_NPK = '000185FC'X
    1	   1283 	PARAMETER RMS$_ORD = '00018604'X	 ! ! NOT USED AS OF V4

SMS_MASS_SPEED                                                   1-APR-1997 12:55:25    DEC Fortran V6.2-508                Page  12
                                                                 4-NOV-1994 21:24:10    SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

    1	   1284 	PARAMETER RMS$_ORG = '0001860C'X
    1	   1285 	PARAMETER RMS$_PBF = '00018614'X
    1	   1286 	PARAMETER RMS$_PLG = '0001861C'X
    1	   1287 	PARAMETER RMS$_POS = '00018624'X
    1	   1288 	PARAMETER RMS$_DTFQUAVAL = '0001862C'X
    1	   1289 	PARAMETER RMS$_QUO = '00018634'X
    1	   1290 	PARAMETER RMS$_RAB = '0001863C'X
    1	   1291 	PARAMETER RMS$_RAC = '00018644'X
    1	   1292 	PARAMETER RMS$_RAT = '0001864C'X
    1	   1293 	PARAMETER RMS$_RBF = '00018654'X
    1	   1294 	PARAMETER RMS$_RFA = '0001865C'X
    1	   1295 	PARAMETER RMS$_RFM = '00018664'X
    1	   1296 	PARAMETER RMS$_RHB = '0001866C'X
    1	   1297 	PARAMETER RMS$_RLF = '00018674'X
    1	   1298 	PARAMETER RMS$_ROP = '0001867C'X
    1	   1299 	PARAMETER RMS$_RRV = '00018684'X
    1	   1300 	PARAMETER RMS$_RVU = '0001868C'X
    1	   1301 	PARAMETER RMS$_RSS = '00018694'X
    1	   1302 	PARAMETER RMS$_RST = '0001869C'X
    1	   1303 	PARAMETER RMS$_RSZ = '000186A4'X
    1	   1304 	PARAMETER RMS$_SEQ = '000186AC'X
    1	   1305 	PARAMETER RMS$_SHR = '000186B4'X
    1	   1306 	PARAMETER RMS$_SIZ = '000186BC'X
    1	   1307 	PARAMETER RMS$_SQO = '000186C4'X
    1	   1308 	PARAMETER RMS$_DTFSESEST = '000186CC'X
    1	   1309 	PARAMETER RMS$_SYN = '000186D4'X
    1	   1310 	PARAMETER RMS$_TRE = '000186DC'X
    1	   1311 	PARAMETER RMS$_TYP = '000186E4'X
    1	   1312 	PARAMETER RMS$_UBF = '000186EC'X
    1	   1313 	PARAMETER RMS$_USZ = '000186F4'X
    1	   1314 	PARAMETER RMS$_VER = '000186FC'X
    1	   1315 	PARAMETER RMS$_XNF = '00018704'X
    1	   1316 	PARAMETER RMS$_XAB = '0001870C'X
    1	   1317 	PARAMETER RMS$_ESL = '00018714'X
    1	   1318 	PARAMETER RMS$_DTFSESTER = '0001871C'X
    1	   1319 	PARAMETER RMS$_ENV = '00018724'X
    1	   1320 	PARAMETER RMS$_PLV = '0001872C'X
    1	   1321 	PARAMETER RMS$_MBC = '00018734'X
    1	   1322 	PARAMETER RMS$_RSL = '0001873C'X
    1	   1323 	PARAMETER RMS$_WLD = '00018744'X
    1	   1324 	PARAMETER RMS$_NET = '0001874C'X	 !  (NOTE THAT NETFAIL HAS REPLACED NET EXCEPT WHEN RMS CANNOT
    1	   1325  !  MAP THE DAP STATUS CODE INTO A FAL STATUS CODE.)
    1	   1326 	PARAMETER RMS$_IBF = '00018754'X
    1	   1327 	PARAMETER RMS$_REF = '0001875C'X
    1	   1328 	PARAMETER RMS$_IFL = '00018764'X
    1	   1329 	PARAMETER RMS$_DFL = '0001876C'X
    1	   1330 	PARAMETER RMS$_KNM = '00018774'X
    1	   1331 	PARAMETER RMS$_IBK = '0001877C'X
    1	   1332 	PARAMETER RMS$_KSI = '00018784'X
    1	   1333 	PARAMETER RMS$_LEX = '0001878C'X
    1	   1334 	PARAMETER RMS$_SEG = '00018794'X
    1	   1335 	PARAMETER RMS$_SNE = '0001879C'X	 ! ! NOT USED AS OF V4
    1	   1336 	PARAMETER RMS$_SPE = '000187A4'X	 ! ! NOT USED AS OF V4
    1	   1337 	PARAMETER RMS$_UPI = '000187AC'X
    1	   1338 	PARAMETER RMS$_ACS = '000187B4'X
    1	   1339 	PARAMETER RMS$_STR = '000187BC'X
    1	   1340 	PARAMETER RMS$_FTM = '000187C4'X

SMS_MASS_SPEED                                                   1-APR-1997 12:55:25    DEC Fortran V6.2-508                Page  13
                                                                 4-NOV-1994 21:24:10    SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

    1	   1341 	PARAMETER RMS$_GBC = '000187CC'X
    1	   1342 	PARAMETER RMS$_DEADLOCK = '000187D4'X
    1	   1343 	PARAMETER RMS$_EXENQLM = '000187DC'X
    1	   1344 	PARAMETER RMS$_JOP = '000187E4'X
    1	   1345 	PARAMETER RMS$_RUM = '000187EC'X
    1	   1346 	PARAMETER RMS$_JNS = '000187F4'X
    1	   1347 	PARAMETER RMS$_NRU = '000187FC'X
    1	   1348 	PARAMETER RMS$_IFF = '00018804'X
    1	   1349 	PARAMETER RMS$_DTFTRATBL = '0001880C'X
    1	   1350 	PARAMETER RMS$_DTFUNSTYP = '00018814'X
    1	   1351 	PARAMETER RMS$_DTFVERMIS = '0001881C'X
    1	   1352  ! +
    1	   1353  ! 
    1	   1354  ! 	ERROR CODES - WITHOUT STV
    1	   1355  ! 
    1	   1356  ! 	  DTFACC AND DTFCRE WERE ORIGINALLY INCLUDED IN THIS FATAL SEVERITY 
    1	   1357  ! 	  (NO STV) GROUPING.  IN ORDER TO CHANGE THEIR SEVERITY TO ERROR 
    1	   1358  ! 	  (NO STV) AND RETAIN THE SAME MESSAGE CODE VALUE, THE FOLLOWING 
    1	   1359  ! 	  SHIFTS IN SEVERITY FROM FATAL TO ERROR AND THEN BACK AGAIN ARE
    1	   1360  ! 	  DONE, WHILE RETAINING THE SAME ORIGINAL BASE ASSOCIATED WITH EACH.
    1	   1361  ! 
    1	   1362  ! -
    1	   1363  !  BIT 16 = BIT 15 = 1, BIT 14 = 0
    1	   1364 	PARAMETER RMS$_DTFACC = '00018822'X
    1	   1365  ! +
    1	   1366  ! 
    1	   1367  ! 	SEVERE ERROR CODES - WITHOUT STV
    1	   1368  ! 
    1	   1369  ! -
    1	   1370  !  BIT 16 = BIT 15 = 1, BIT 14 = 0
    1	   1371 	PARAMETER RMS$_BOGUSCOL = '0001882C'X
    1	   1372 	PARAMETER RMS$_ERRREADCOL = '00018834'X
    1	   1373 	PARAMETER RMS$_ERRWRITECOL = '0001883C'X
    1	   1374 	PARAMETER RMS$_SNS = '00018844'X
    1	   1375 	PARAMETER RMS$_NOEXTEND = '0001884C'X	 ! +
    1	   1376  ! 
    1	   1377  ! 	ERROR CODES - WITHOUT STV
    1	   1378  ! 
    1	   1379  ! -
    1	   1380  !  BIT 16 = BIT 15 = 1, BIT 14 = 0
    1	   1381 	PARAMETER RMS$_DTFCRE = '00018852'X
    1	   1382  ! +
    1	   1383  ! 
    1	   1384  ! 	SEVERE ERROR CODES - WITHOUT STV
    1	   1385  ! 
    1	   1386  ! -
    1	   1387  !  BIT 16 = BIT 15 = 1, BIT 14 = 0
    1	   1388 	PARAMETER RMS$_DELJNS = '0001885C'X
    1	   1389 	PARAMETER RMS$_NOTSAMEJNL = '00018864'X
    1	   1390 	PARAMETER RMS$_SNPPF = '0001886C'X
    1	   1391  ! +
    1	   1392  ! 
    1	   1393  ! 	SEVERE ERRORS - WITH STV ERROR CODE (THAT IS, STV CONTAINS AN ASSOCIATED CONDITION CODE)
    1	   1394  ! 
    1	   1395  ! -
    1	   1396  !  BIT 16 = BIT 15 = BIT 14 = 1
    1	   1397 	PARAMETER RMS$_ATR = '0001C0CC'X

SMS_MASS_SPEED                                                   1-APR-1997 12:55:25    DEC Fortran V6.2-508                Page  14
                                                                 4-NOV-1994 21:24:10    SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1($RMSDEF)

    1	   1398 	PARAMETER RMS$_ATW = '0001C0D4'X
    1	   1399 	PARAMETER RMS$_CCF = '0001C0DC'X
    1	   1400 	PARAMETER RMS$_CDA = '0001C0E4'X
    1	   1401 	PARAMETER RMS$_CHN = '0001C0EC'X
    1	   1402 	PARAMETER RMS$_RER = '0001C0F4'X
    1	   1403 	PARAMETER RMS$_RMV = '0001C0FC'X
    1	   1404 	PARAMETER RMS$_RPL = '0001C104'X
    1	   1405 	PARAMETER RMS$_SYS = '0001C10C'X
    1	   1406 	PARAMETER RMS$_WER = '0001C114'X
    1	   1407 	PARAMETER RMS$_WPL = '0001C11C'X
    1	   1408 	PARAMETER RMS$_IFA = '0001C124'X
    1	   1409 	PARAMETER RMS$_WBE = '0001C12C'X
    1	   1410 	PARAMETER RMS$_ENQ = '0001C134'X
    1	   1411 	PARAMETER RMS$_NETFAIL = '0001C13C'X
    1	   1412 	PARAMETER RMS$_SUPPORT = '0001C144'X
    1	   1413 	PARAMETER RMS$_CRMP = '0001C14C'X
    1	   1414 	PARAMETER RMS$_DTFCFGFIL = '0001C154'X
    1	   1415 	PARAMETER RMS$_REENT = '0001C15C'X
    1	   1416 	PARAMETER RMS$_ACC_RUJ = '0001C164'X
    1	   1417 	PARAMETER RMS$_TMR = '0001C16C'X
    1	   1418 	PARAMETER RMS$_ACC_AIJ = '0001C174'X
    1	   1419 	PARAMETER RMS$_ACC_BIJ = '0001C17C'X
    1	   1420 	PARAMETER RMS$_ACC_ATJ = '0001C184'X
    1	   1421 	PARAMETER RMS$_DTFDEFFIL = '0001C18C'X
    1	   1422 	PARAMETER RMS$_DTFREGFIL = '0001C194'X
    1	   1423 	PARAMETER RMS$_JNLNOTAUTH = '0001C19C'X
    1	   1424 CDEC$ END OPTIONS
    1	   1425 
	   1426 
	   1427         record /core/ sci   ! receives basic core data assoc w/current sr
	   1428         record /hdbstr/ hdb
	   1429         record /ma_rate/ mass_rate   ! receives data on rates from MASS sensor
	   1430         record /ma_pha/ mass_pha  ! receives data on tof's from the mass sensor
	   1431         record /t/ start, end, time(0:59)   ! allow sixty steps in time variable
	   1432 c
	   1433 c       notes: 1. time is structure type t. data from the call wind_l1_get_basic
	   1434 c                 routine is deposited into this structure.
	   1435 c
	   1436 c
	   1437 c
	   1438 c       *** initialize variables ***
	   1439 
	   1440         character err_message*80,    ! error message
	   1441      2		  comp_mode*1,       ! compression mode a or c
	   1442      3            buffer*256,        ! buffer array for internal read/write
	   1443      4            ans*8,             ! eight character answer string for queries
	   1444      5		  fmultday*8	     ! eight character answer string for query
	   1445 
	   1446         integer*4 status,            ! non-zero indicates an i/o error
	   1447      1		  spd_flag,	     ! error flag 
	   1448      2            ios,               ! non-zero indicates i/o error on write
	   1449      3            sr_num,            ! number of the science record read
	   1450      4            status_sr,         ! science record status flag
	   1451      5            status_ma,         ! mass read routine status flag
	   1452      6            status_ba,         ! basic core data read status
	   1453      7            status_hk,         ! house keeping data read status
	   1454      8            val_spin,          ! number of valid spins in science record

SMS_MASS_SPEED                                                   1-APR-1997 12:55:25    DEC Fortran V6.2-508                Page  15
                                                                20-DEC-1996 02:32:52    [WIND.SOFTWARE.STICS]SMS_MASS_SPEED.FOR;24

	   1455      9            i,j,k,l,jj,        ! looping variables
	   1456      1            dpps_cyc(0:59),    ! dpps step corresponding to s/c spin num
	   1457      2            spin_num,          ! spacecraft spin number
	   1458      3            itemp,             ! temp I*4 for converting byte variables
	   1459      4            rates(0:59,27),    ! contains decompressed mass rates/cycle
	   1460      5            wind_decompress,   ! decompresses the compressed MASS rates
	   1461      6            nca,               ! variables that the fitting routine uses
	   1462      7            lista(6),          ! numbers the parameters for fitting
	   1463      8            iter,              ! number of iterations in curve fit routine
	   1464      9            fit_elements,      ! total number of data elements fit
	   1465      9		  startstep,	     ! starting voltage step number for peak search
	   1466      1            i_max_loc,         ! element location for maximum FSR2 counts
	   1467      1		  i_he_max_loc,	     ! spin of helium maximum
	   1468      2            he_pk_strt_ch,     ! starting helium peak channel
	   1469      3            he_fit_elements,   ! number of helium elements fit
	   1470      4            he_tot,            ! total number of helium elements in peak
	   1471      5            dpps_step,         ! DPPS step (0-59)
	   1472      8            sector,            ! sector location of pha (0=nsun, 1=sun)
	   1473      9            range,             ! range of pha (0 is protons, 1 is heavies)
	   1474      1            anode,             ! 0-inval., 1-start, 2-stop, 3-both
	   1475      2            time_of_flight,    ! channel number of tof signal
	   1476      3		  itof2,	     ! tof channel number / 2
	   1477      3            pha_sum,	     ! total Mass pha events in one science rec
	   1478      5            adps_step,         ! contains the adps step of current spin
	   1479      6            he_max_dpps,       ! dpps step corresponding to helium max
	   1480      7            he_max_adps,       ! adps step corresponding to helium max
	   1481      8            raw_he_cnts,       ! keeps running total of raw helium counts
	   1482      9            he_adps_step,      ! adps step num for the helium target dpps
	   1483      1            he_counts,         ! number of helium counts in this sci rec
	   1484      2		  hps_level,	     ! current commanded HPS level
	   1485      3		  fsr2(0:59),	     ! fsr2(i) =  counts for spin 59-i
	   1486      4		  ilo,		     ! low dpps step for prton peak
	   1487      5		  ihi,		     ! high dpps step for proton peak	
	   1488      6		  idelta,	     ! hwhm of proton peak in dpps steps
	   1489      7		  i_peak,	     ! guess for dpps step of helium peak
	   1490      1		  icountday,	     ! numebr of days that has been processing
	   1491      2		  iday,		     ! number of days for the data set
	   1492      3		  index		     ! just a running index for loops.
	   1493 
	   1494         byte      pha(2)             ! contains the two bytes of the pha word
	   1495         logical   code,              ! comp mode-set is mode c, clear is mode a
	   1496      2            start_flag,        ! set to true when the start time found
	   1497      3            end_flag,          ! true indicates terminate reading file
	   1498      4            compare_time_ge,   ! routine is true if first time .ge. second
	   1499      5            sm_flag,           ! returned true indicates sing matrix error
	   1500      6            first_elem_flag,   ! false indicates first he elem not found
	   1501      7            he_sp_flag,        ! true indicates an unreasonable he speed
	   1502      8            eight_flag,        ! false indicates no info written to unit 8
	   1503      8		  proshoulder,	     ! peak FSR is on proton shoulder
	   1504      9		  he_peak	     ! true if proton peak is below threshold
	   1505 
	   1506         real*4    x(60),y(60),sig(60),   ! fit variables-x,y, and uncertainty
	   1507      2            a(6),b(6),             ! the parameters to be fit
	   1508      3            covar(10,10),      	 ! working space for fitting routine
	   1509      4            alpha(10,10),      	 ! working space for fitting routine
	   1510      5            chisqr,                ! chi-squared for fit
	   1511      6            alamda,                ! <0 on intial call, final call =0

SMS_MASS_SPEED                                                   1-APR-1997 12:55:25    DEC Fortran V6.2-508                Page  16
                                                                20-DEC-1996 02:32:52    [WIND.SOFTWARE.STICS]SMS_MASS_SPEED.FOR;24

	   1512      7            max_cnt,               ! contains maximum counts in array
	   1513      8            max_loc,               ! contains E/Q location of maximum
	   1514      8		  bulk_speed,		 ! bulk speed = H+ speed for 315 < speed < 1275 km/s
	   1515 C					              = He++ "    "  240 < speed < 315 km/s
	   1516      8  	  bulk_uncer,	 	 ! bulk speed uncertainty
	   1517      9            prot_speed,            ! proton speed from E/Q mean
	   1518      1            prot_uncer,            ! uncert. on proton speed from width
	   1519      2            alph_speed,            ! alpha speed from E/Q mean
	   1520      3            alph_uncer,            ! uncert. on alpha speed from width
	   1521      4            fwhm,                  ! FWHM of proton distribution in keV/e
	   1522      +		  hwhm,			 ! HWHM of proton distribution in keV/e
	   1523      5            he_max_cnt,            ! contains maximum helium counts
	   1524      6            he_max_loc,            ! contains E/Q of helium maximum
	   1525      7            he_pk_strt_eq,         ! starting helium pk E/Q location
	   1526      8            factor,                ! frac of He fwhm searched on left
	   1527      9            he_x(60),he_y(60),
	   1528      1            he_sig(60),            ! the helium E/Q, FSR2 rates, and sigma
	   1529      2            epm,		         ! keV/amu assoc with fitted alpha speed
	   1530      3		  mpq,			 ! amu/e assoc. with a given dpps step
	   1531      5            nano,                  ! time of flight in nanoseconds
	   1532      6            mass,                  ! mass in amu assuming Q=+1
	   1533      7            sw_speed,              ! speed used for targeting species
	   1534      1            he_pseudo_cnts,        ! efficiency modified number of cnts
	   1535      2            step_above,            ! num stps above pk prog looks for data
	   1536      3            he_v_sub_f,            ! adps voltage during target he step
	   1537      4            he_e_total,            ! total energy in the target he step
	   1538      5            he_defect,             ! factor to account for v_f dep. eff.
	   1539      6            he_eta_st,
	   1540      7            he_eta_sp,             ! start/stop eff in he target he step
	   1541      8            norm,                  ! 2.9/360. * 3.2 sec * 0.35 cm^2
	   1542      9            he_peak_tt,            ! helium peak to total ratio
	   1543      1            tot_he_e_over_q,       ! for averaging E/Q over whole period
	   1544      2		  epq(0:59),		 ! E/Q values for 60 values of dpps step
	   1545      3		  lowbound, 		 ! lower solar wind speed for the data
	   1546      4		  highbound		 ! higher solar wind speed for the data
	   1547 
	   1548         external  funcs,             ! subroutine to evaluate fitting function
	   1549      2            mrqmin             ! first subroutine of the fitting program
	   1550 c
	   1551 c       notes: 1. rates(xx,2) contains FSR2
	   1552 c
	   1553 
	   1554 c
	   1555 c   initialize variables
	   1556 c	
	   1557 	spd_flag = 0
	   1558 	bulk_speed = 0
	   1559 	bulk_uncer = 0
	   1560 	err_message = ' '
	   1561 c
	   1562 c   fill epq array with the 60 E/Q values in keV/e
	   1563 c
	   1564 	do i=0,59
	   1565 	  epq(i) = 0.5156*1.05135**i
	   1566 	enddo
	   1567 
	   1568 

SMS_MASS_SPEED                                                   1-APR-1997 12:55:25    DEC Fortran V6.2-508                Page  17
                                                                20-DEC-1996 02:32:52    [WIND.SOFTWARE.STICS]SMS_MASS_SPEED.FOR;24

	   1569 	val_spin = l1_sr_header.nvalid   ! # of valid spins per Science Record
	   1570 	if(val_spin .ne. 60) then
	   1571 	  write(6,45) val_spin
	   1572   45	  format(1x,'Incomplete Science Record: ',i3,' spins')
	   1573 	  write (err_message,45) val_spin
	   1574 	  spd_flag = 1
	   1575 	  goto 500
	   1576         endif
	   1577 
	   1578 c   check for hps level = 176.  If not type a message and skip to next science 
	   1579 c   record
	   1580 
	   1581 	hps_level = hdb.bdh.dat(110)
	   1582 	if (hps_level .lt. 0) hps_level=hps_level+256  !take care of sign bit
	   1583 	if (hps_level .ne. 176) then
	   1584 	   write (6,50) hps_level
	   1585   50	   format(1x,'Invalid MASS HPS level =>',i5)
	   1586 	   write (err_message,50) hps_level
	   1587 	   spd_flag = 1
	   1588 	   go to 500
	   1589 	endif
	   1590 
	   1591 c
	   1592 c
	   1593 c       *** get the mass data ***
	   1594 c
	   1595 c
	   1596       	do spin_num=0,59   ! determine DPPS steps for each s/c spin number
	   1597            itemp=mass_rate.edb(spin_num).rate(25)
	   1598            dpps_cyc(spin_num)=ibits(itemp,0,6)
	   1599 c          --- bit 7 is calibration mode status, bits 0-5 are DPPS step ---
	   1600 c          ---ibits expects an I*2 or I*4 and ...rate(25) is a byte     ---
	   1601 c          ---setting to itemp before ibits converts it to corr form    ---
	   1602        	enddo
	   1603 c
	   1604      	itemp = hdb.bdh.dat(189)   ! compression codes for all MASS rates
	   1605         code = btest(itemp,4)      ! are in the hdb byte 189 bit 4
	   1606         if (code .eq. .true.)  comp_mode='c'
	   1607         if (code .eq. .false.) comp_mode='a'
	   1608 c
	   1609       	do spin_num=0,59
	   1610 	  fsr2(59-spin_num) = wind_decompress(mass_rate.edb(spin_num).rate(1),code)
	   1611 	  if (fsr2(59-spin_num) .le. 0) then
	   1612 	    type *, 'MASS fsr2=0, no speed'
	   1613 	    write(err_message,'(a)') ' MASS fsr2=0, no speed'
	   1614 	    spd_flag = 1
	   1615 	    go to 500
	   1616 	  endif 
	   1617 
	   1618           rates(spin_num,26) = mass_rate.edb(spin_num).rate(25)   ! dpps step
	   1619           rates(spin_num,27) = mass_rate.edb(spin_num).rate(26)   ! adps step
	   1620         enddo
	   1621 c
	   1622 c
	   1623 c       ***find the distribution maximum and location ***
	   1624 c
	   1625         max_cnt = -1   ! contains maximum FSR2 counts

SMS_MASS_SPEED                                                   1-APR-1997 12:55:25    DEC Fortran V6.2-508                Page  18
                                                                20-DEC-1996 02:32:52    [WIND.SOFTWARE.STICS]SMS_MASS_SPEED.FOR;24

	   1626         do i=0,59
	   1627            if (fsr2(i) .gt. max_cnt) then  ! if a loc w/counts gt max_cnt
	   1628               max_cnt = fsr2(i)		   ! then set max_cnt to the new value
	   1629               i_max_loc = i    ! save vstep of max_cnt
	   1630            endif
	   1631         enddo
	   1632         max_loc = epq(i_max_loc)	   ! and save E/Q of max
	   1633 
	   1634 c**********************************************************************************************
	   1635 c
	   1636 c   See if we have slow speed where proton peak is below minimum MASS E/Q. There are two cases.
	   1637 c
	   1638 c   CASE 1: we must find the alpha peak at higher channels
	   1639 c  
	   1640 	he_peak = .false.
	   1641 
	   1642 	if ((i_max_loc .ge. 0) .and. (i_max_loc .le. 2)) then	
	   1643  						
	   1644 c   check to see if the proton peak shoulder still has more counts than the helium peak
	   1645 
	   1646 	   startstep = 2
	   1647 	   proshoulder = .true.
	   1648 	   do while (proshoulder .eq. .true.)
	   1649 	      max_cnt = -1
	   1650 	      do i=startstep,59		
	   1651 		if (fsr2(i).gt.max_cnt) then
	   1652 		  max_cnt = fsr2(i)
	   1653 		  i_max_loc = i
	   1654 		endif
	   1655 	      end do
	   1656 	      if (i_max_loc .eq. startstep) then
	   1657 		 proshoulder = .true.
	   1658 		 startstep = startstep + 1
	   1659 	      else
	   1660 		 proshoulder = .false.
	   1661 	      endif
	   1662 	   enddo
	   1663 	
	   1664 	   max_loc = epq(i_max_loc)
	   1665 	   he_peak = .true.	
	   1666 	   go to 300
	   1667 	endif
	   1668 
	   1669 c						
	   1670 c CASE 2: i_max_loc already holds the helium peak location
	   1671 c
	   1672 	if ((fsr2(0) .gt. 100) .and. (fsr2(0).gt.fsr2(1)) .and. (fsr2(1).gt.fsr2(2))) then  
	   1673 	  he_peak = .true.			
	   1674 	  write(6,*) '2. he_peak = true'
	   1675 	endif
	   1676 
	   1677 300	if (.not. he_peak) go to 450		!we must have a proton peak
	   1678 
	   1679 
	   1680 c   *** begin section to fit alpha peak only when SW wind speed is ****
	   1681 c   *** less than 315 km/s
	   1682 

SMS_MASS_SPEED                                                   1-APR-1997 12:55:25    DEC Fortran V6.2-508                Page  19
                                                                20-DEC-1996 02:32:52    [WIND.SOFTWARE.STICS]SMS_MASS_SPEED.FOR;24

	   1683 c  load up array with three fsr2 values on each side of peak
	   1684 
	   1685         fit_elements = 7  ! counts the number of elements to be fit
	   1686 	j = 0
	   1687 
	   1688 	do i=i_max_loc-3,i_max_loc+3
	   1689 	  if (i.lt.0 .or. i.gt.59) then
	   1690 	    write(6,305) i
	   1691  305	    format(1x,'He++ Peak out of range: i =',i3)
	   1692 	    write(err_message,305) i
	   1693 	    spd_flag = 1
	   1694 	    go to 500
	   1695 	  endif
	   1696 
	   1697            j = j+1
	   1698 	   x(j) = epq(i)			   ! E/Q value
	   1699            y(j) = fsr2(i)
	   1700            sig(j) = float(fsr2(i))**0.5
	   1701         enddo
	   1702 c
	   1703 c
	   1704 c       *** estimate the fitting parameters ***
	   1705 c
	   1706 	fwhm = 0.162*max_loc	 	!guess fwhm = 3 steps
	   1707         a(3) = fwhm**2/22.2/max_loc  	!derived approx. width
	   1708         a(1) = max_cnt*a(3)**0.5*2.5066283/max_loc	!amplitude
	   1709         a(2) = max_loc					!mean
	   1710 c
	   1711         a(6) = 1e6
	   1712         a(4) = 0
	   1713         a(5) = 1e6      ! fix amplitude of proton fit at zero to do alpha fit
	   1714 c
	   1715 c
	   1716 c       *** fit the alpha peak ***
	   1717 c
	   1718         nca = 7
	   1719         alamda = -1
	   1720         lista(1) = 1  ! adjust the first three of the parameters
	   1721         lista(2) = 2
	   1722         lista(3) = 3  
	   1723         lista(4) = 4 
	   1724         lista(5) = 5 
	   1725         lista(6) = 6
	   1726 c
	   1727         iter = 0   ! reset the iteration counter
	   1728         sm_flag = .false.   ! true indicates a singular matrix error
	   1729         do while ((alamda .lt. 1e4) .and. (iter .lt. 1000) .and.
	   1730      +            (fit_elements .ge. 3))
	   1731 
	   1732 
	   1733            call mrqmin(x,y,sig,fit_elements,a,3,lista,3,covar,alpha,
	   1734      +                 nca,chisqr,funcs,alamda,sm_flag,max_cnt,max_loc,
	   1735      +                 fwhm,he_max_cnt)   
	   1736 c                      ---fit_ele data pts, 3 fit para, 3 parameters adjusted---
	   1737 c                      ---sm_flag returned set if singular matrix error  ---
	   1738            if (sm_flag .eq. .true.) then   ! indicates a singular matrix problem
	   1739               type *,'singular matrix 1'

SMS_MASS_SPEED                                                   1-APR-1997 12:55:25    DEC Fortran V6.2-508                Page  20
                                                                20-DEC-1996 02:32:52    [WIND.SOFTWARE.STICS]SMS_MASS_SPEED.FOR;24

	   1740               a(1)=0
	   1741               a(2)=5.2245e6
	   1742               a(3)=5.2245e6   ! these values will set speed/width to 1e6 to flag
	   1743               a(4)=0
	   1744               a(5)=1.0437e7
	   1745               a(6)=1.0437e7   ! these values will set speed/width to 1e6 to flag
	   1746               iter = 1000   ! exit loop
	   1747            endif
	   1748 c
	   1749            iter = iter + 1   ! increment the iteration counter
	   1750         enddo
	   1751 
	   1752 
	   1753 c
	   1754 	alph_speed = 309.53*a(2)**0.5	!alpha speed in km/s
	   1755 	alph_uncer = 309.53*a(3)**0.5	!uncertainty on alpha speed in km/s
	   1756 
	   1757 	if ((alph_speed .gt. 260.0) .and. (alph_speed .lt. 400.0)) then
	   1758 	  bulk_speed = alph_speed
	   1759 	  bulk_uncer = alph_uncer
	   1760 	else
	   1761 	  spd_flag = 1
	   1762 	  write(6,60) alph_speed, alph_uncer
	   1763 	  write(err_message,60) alph_speed, alph_uncer
	   1764  60	  format(1x,' Alpha speed out of range => ', f10.1, ' +/- ', f10.1, ' km/s')
	   1765 	endif
	   1766 
	   1767 
	   1768 c   *** end section for alpha peak only with SW speed less than 315 km/s ***
	   1769 c   *** jump to section where fitted speed results are written ***
	   1770 
	   1771 	go to 500
	   1772 
	   1773 
	   1774 c   **** begin section of original Collier PULSE.FOR code to fit H and He peaks
	   1775 
	   1776 c       *** determine the half width for protons ***
	   1777 
	   1778 450     i = i_max_loc
	   1779         do while ((fsr2(i) .gt. max_cnt/2.0) .and.
	   1780      +            (i .le. 59))   ! search for HWHM of dist
	   1781 	   ihi = i
	   1782            i = i+1   ! search to the rt of the peak for step with half max cnts
	   1783         enddo
	   1784 	idelta = ihi - i_max_loc
	   1785 	ilo = max(0,i_max_loc-idelta)		!step at hwhm below max
	   1786 	hwhm = (epq(ihi) - max_loc)   
	   1787 	fwhm = 2. * hwhm			! fwhm holds the H FWHM in E/Q
	   1788 
	   1789 c       *** load up array one fwhm around the proton peak ***
	   1790 
	   1791         fit_elements = 0  ! counts the number of elements to be fit
	   1792 
	   1793         do i=ilo,ihi
	   1794 c       ---look within one fwhm of the proton peak for data to be fit---
	   1795               fit_elements = fit_elements + 1   ! increment no. fit elem
	   1796               x(fit_elements) = epq(i)		! E/Q value

SMS_MASS_SPEED                                                   1-APR-1997 12:55:25    DEC Fortran V6.2-508                Page  21
                                                                20-DEC-1996 02:32:52    [WIND.SOFTWARE.STICS]SMS_MASS_SPEED.FOR;24

	   1797               y(fit_elements) = fsr2(i)
	   1798               sig(fit_elements) = fsr2(i)**0.5
	   1799         enddo
	   1800 c
	   1801 c
	   1802 c       *** estimate the fitting parameters ***
	   1803 c
	   1804         a(3) = fwhm**2/22.2/max_loc  ! derived approximation
	   1805         a(1) = max_cnt*a(3)**0.5*2.5066283/max_loc
	   1806         a(2) = max_loc
	   1807 c
	   1808         a(6) = 1e6
	   1809         a(4) = 0
	   1810         a(5) = 1e6      ! fix amplitude of helium fit at zero to do proton
	   1811 c
	   1812 c
	   1813 c       *** fit the proton peak ***
	   1814 c
	   1815         nca = 7
	   1816         alamda = -1
	   1817         lista(1) = 1  ! adjust the first three of the parameters
	   1818         lista(2) = 2
	   1819         lista(3) = 3  
	   1820         lista(4) = 4 
	   1821         lista(5) = 5 
	   1822         lista(6) = 6
	   1823 c
	   1824         iter = 0   ! reset the iteration counter
	   1825         sm_flag = .false.   ! true indicates a singular matrix error
	   1826         do while ((alamda .lt. 1e4) .and. (iter .lt. 1000) .and.
	   1827      +            (fit_elements .ge. 3))
	   1828 c
	   1829            call mrqmin(x,y,sig,fit_elements,a,6,lista,3,covar,alpha,
	   1830      +                 nca,chisqr,funcs,alamda,sm_flag,max_cnt,max_loc,
	   1831      +                 fwhm,he_max_cnt)   
	   1832 c                      ---fit_ele data pts, 3 fit para, 3 parameters adjusted---
	   1833 c                      ---sm_flag returned set if singular matrix error  ---
	   1834            if (sm_flag .eq. .true.) then   ! indicates a singular matrix problem
	   1835               type *,'singular matrix 1'
	   1836               a(1)=0
	   1837               a(2)=5.2245e6
	   1838               a(3)=5.2245e6   ! these values will set speed/width to 1e6 to flag
	   1839               a(4)=0
	   1840               a(5)=1.0437e7
	   1841               a(6)=1.0437e7   ! these values will set speed/width to 1e6 to flag
	   1842               iter = 1000   ! exit loop
	   1843            endif
	   1844 c
	   1845            iter = iter + 1   ! increment the iteration counter
	   1846         enddo
	   1847 
	   1848 c   7/4/95  Am always getting singular matrix with helium fit so skip it for now
	   1849 
	   1850 
	   1851 490	prot_speed = 437.74*a(2)**0.5  ! proton speed in km/s
	   1852         prot_uncer = 437.74*a(3)**0.5  ! uncertainty on proton speed in km/s
	   1853 

SMS_MASS_SPEED                                                   1-APR-1997 12:55:25    DEC Fortran V6.2-508                Page  22
                                                                20-DEC-1996 02:32:52    [WIND.SOFTWARE.STICS]SMS_MASS_SPEED.FOR;24

	   1854 	if ((prot_speed .gt. 300.0) .and. (prot_speed .lt. 1100.0)) then
	   1855 	  bulk_speed = prot_speed
	   1856 	  bulk_uncer = prot_uncer
	   1857 	else
	   1858 	  spd_flag = 1
	   1859 	  write(6,65) prot_speed, prot_uncer
	   1860 	  write(err_message,60) prot_speed, prot_uncer
	   1861  65	  format(1x,' Proton speed out of range => ', f10.1, ' +/- ', f10.1, ' km/s')
	   1862 	endif
	   1863 
	   1864 500	end


PROGRAM SECTIONS

    Name				 Bytes   Attributes

  1 $BSS$                                63904 NOPIC CON REL LCL NOSHR NOEXE   RD   WRT *32
  2 $IODATA$                               328 NOPIC CON REL LCL NOSHR NOEXE   RD   WRT OCTA
  3 $CODE$                                5552   PIC CON REL LCL   SHR   EXE NORD NOWRT OCTA
  4 $LINK$                                 642 NOPIC CON REL LCL NOSHR NOEXE   RD NOWRT OCTA
  5 L1_HEADERS                             644 NOPIC OVR REL GBL NOSHR NOEXE   RD   WRT OCTA

    Total Space Allocated                71070


ENTRY POINTS

    Address   Type  Name          
                                  
  3-00000000        SMS_MASS_SPEED


VARIABLES

    Address   Type  Name                Address   Type  Name                Address   Type  Name           
                                                                                                           
  1-00000098  I*4   ADPS_STEP         0-00000044# I*4   FIT_ELEMENTS      1-00000078  I*4   HE_TOT         
  0-0000007C  R*4   ALAMDA            1-00000030  CHAR  FMULTDAY          1-0000010C  R*4   HE_V_SUB_F     
  0-00000038# R*4   ALPH_SPEED        0-00000074  R*4   FWHM              1-00000130  R*4   HIGHBOUND      
  0-00000084  R*4   ALPH_UNCER        1-000000A8  I*4   HE_ADPS_STEP      0-00000040# I*4   HPS_LEVEL      
  1-00000088  I*4   ANODE             1-000000AC  I*4   HE_COUNTS       REG-00000037  R*4   HWHM           
  1-00000028  CHAR  ANS               1-00000114  R*4   HE_DEFECT         0-00000048# I*4   I              
  1-0000ED10  CHAR  BUFFER            1-0000011C  R*4   HE_ETA_SP         1-000000B8  I*4   ICOUNTDAY      
      **      R*4   BULK_SPEED        1-00000118  R*4   HE_ETA_ST         1-000000BC  I*4   IDAY           
      **      R*4   BULK_UNCER        1-00000110  R*4   HE_E_TOTAL      REG-00000017  I*4   IDELTA         
  1-000000DC  R*4   CHISQR            1-00000074  I*4   HE_FIT_ELEMENTS   1-000000B0  I*4   IHI            
  0-0000004C  L*4   CODE              1-000000A0  I*4   HE_MAX_ADPS     REG-00000016  I*4   ILO            
  1-000000CC  L*4   COMPARE_TIME_GE   1-000000E0  R*4   HE_MAX_CNT        1-000000C0  I*4   INDEX          
  1-00000020  CHAR  COMP_MODE         1-0000009C  I*4   HE_MAX_DPPS       1-00000044  I*4   IOS            
  1-0000007C  I*4   DPPS_STEP         1-000000E4  R*4   HE_MAX_LOC      REG-########  I*4   ITEMP          
  1-000000D8  L*4   EIGHT_FLAG      REG-00000006  L*4   HE_PEAK         REG-########  I*4   ITER           
  1-000000C8  L*4   END_FLAG          1-00000124  R*4   HE_PEAK_TT        1-00000090  I*4   ITOF2          
  1-000000F0  R*4   EPM               1-00000070  I*4   HE_PK_STRT_CH     1-0000006C  I*4   I_HE_MAX_LOC   
      **      CHAR  ERR_MESSAGE       1-000000E8  R*4   HE_PK_STRT_EQ     1-00000068  I*4   I_MAX_LOC      
  1-000000EC  R*4   FACTOR            1-00000104  R*4   HE_PSEUDO_CNTS    1-000000B4  I*4   I_PEAK         
  1-000000D0  L*4   FIRST_ELEM_FLAG   1-000000D4  L*4   HE_SP_FLAG      REG-00000009  I*4   J              

SMS_MASS_SPEED                                                   1-APR-1997 12:55:25    DEC Fortran V6.2-508                Page  23
                                Symbol Table                    20-DEC-1996 02:32:52    [WIND.SOFTWARE.STICS]SMS_MASS_SPEED.FOR;24

    Address   Type  Name                Address   Type  Name                Address   Type  Name           
                                                                                                           
  1-00000064  I*4   JJ              REG-00000016  L*4   PROSHOULDER       1-00000040  I*4   STATUS         
  1-0000005C  I*4   K                 0-0000003C# R*4   PROT_SPEED        1-00000054  I*4   STATUS_BA      
  1-00000060  I*4   L                 0-0000004C  R*4   PROT_UNCER        1-00000058  I*4   STATUS_HK      
  1-0000012C  R*4   LOWBOUND          1-00000084  I*4   RANGE             1-00000050  I*4   STATUS_MA      
  1-000000FC  R*4   MASS              1-000000A4  I*4   RAW_HE_CNTS       1-0000004C  I*4   STATUS_SR      
  0-0000004C  R*4   MAX_CNT           1-00000080  I*4   SECTOR            1-00000108  R*4   STEP_ABOVE     
  0-00000070  R*4   MAX_LOC           0-00000080  L*4   SM_FLAG           1-00000100  R*4   SW_SPEED       
  1-000000F4  R*4   MPQ                   **      I*4   SPD_FLAG          1-0000008C  I*4   TIME_OF_FLIGHT 
  1-000000F8  R*4   NANO            REG-########  I*4   SPIN_NUM          1-00000128  R*4   TOT_HE_E_OVER_Q
  0-00000078  I*4   NCA               1-00000048  I*4   SR_NUM            0-0000004C  I*4   VAL_SPIN       
  1-00000120  R*4   NORM            REG-00000001  I*4   STARTSTEP                                          
  1-00000094  I*4   PHA_SUM           1-000000C4  L*4   START_FLAG                                         


RECORDS

    Address   Name            Structure                Bytes     Address   Name            Structure                Bytes
                                                                                                                         
  1-00000018  END             T                            8       **      MASS_RATE       MA_RATE                   1920
      **      HDB             HDBSTR                     324   1-00001AD0  SCI             CORE                      7384
  5-00000000  L1_FILE_HEADER  ST_L1_FILE_HEADER          400   1-00000010  START           T                            8
  5-00000190  L1_SR_HEADER    ST_L1_SR_HEADER            244                                                             
  1-000037A8  MASS_PHA        MA_PHA                   45960                                                             


ARRAYS

     Address  Type  Name            Bytes  Dimensions

  1-0000014C  R*4   A                  24  (6)
  1-0000F450  R*4   ALPHA             400  (10, 10)
  1-00000164  R*4   B                  24  (6)
  1-0000F2C0  R*4   COVAR             400  (10, 10)
  1-0000EE10  I*4   DPPS_CYC          240  (0:59)
  1-0000F8B0  R*4   EPQ               240  (0:59)
  1-0000EF00  I*4   FSR2              240  (0:59)
  1-0000F7C0  R*4   HE_SIG            240  (60)
  1-0000F5E0  R*4   HE_X              240  (60)
  1-0000F6D0  R*4   HE_Y              240  (60)
  1-00000134  I*4   LISTA              24  (6)
  1-00000038  I*1   PHA                 2  (2)
  1-00000180  I*4   RATES            6480  (0:59, 27)
  1-0000F1D0  R*4   SIG               240  (60)
  1-0000EFF0  R*4   X                 240  (60)
  1-0000F0E0  R*4   Y                 240  (60)




SMS_MASS_SPEED                                                   1-APR-1997 12:55:25    DEC Fortran V6.2-508                Page  24
                                Symbol Table                    20-DEC-1996 02:32:52    [WIND.SOFTWARE.STICS]SMS_MASS_SPEED.FOR;24

RECORD ARRAYS

    Address   Name  Structure         Bytes  Dimensions

  1-0000EB30  TIME  T                  480  (0:59)



LABELS

    Address   Label     Address   Label     Address   Label     Address   Label     Address   Label
                                                                                                   
      **       45         **       60     3-000006D0   300        **       450    3-000010B4   500 
      **       50         **       65         **       305    3-00000F80   490                     


FUNCTIONS AND SUBROUTINES REFERENCED

  Type  Name                    Type  Name                    Type  Name                 
                                                                                         
        FUNCS                         MRQMIN                  I*4   WIND_DECOMPRESS      

SMS_MASS_SPEED                                                   1-APR-1997 12:55:25    DEC Fortran V6.2-508                Page  25
                                Symbol Table                    20-DEC-1996 02:32:52    [WIND.SOFTWARE.STICS]SMS_MASS_SPEED.FOR;24

	   1865 
	   1866 c
	   1867 c       *** subroutine funcs for the fitting program ***
	   1868 c
	   1869         subroutine funcs(x,a,y,dyda,na,max_cnt,max_loc,fwhm,he_max_cnt)
	   1870 c
	   1871         real*4     x, y,           ! x and y values to be evaluated
	   1872      2             a(6), dyda(6),  ! fitted parameters and their derivatives
	   1873      3             max_cnt,        ! maximum counts (protons) in array
	   1874      4             max_loc,        ! location in E/Q of the maximum counts
	   1875      5             fwhm,           ! fwhm in E/Q of the proton peak
	   1876      6             he_max_cnt      ! maximum counts in the helium peak
	   1877         integer*4  na,             ! variable used in the fitting routine
	   1878      2             i,j,k,l         ! variables for use in looping
	   1879 c
	   1880        do i = 1,6   ! assure that all fit parameters remain positive
	   1881           a(i) = abs(a(i))
	   1882        enddo
	   1883 c
	   1884 c      --- keep values within reasonable bounds ---
	   1885 c
	   1886        if (a(2) .gt. 1e18) a(2)=1e18
	   1887        if (a(3) .gt. 1e18) a(3)=1e18   
	   1888        if (a(5) .gt. 1e18) a(5)=1e18
	   1889        if (a(6) .gt. 1e18) a(6)=1e18   ! to avoid overflow errors--day 26 fix
	   1890 c
	   1891 c      --- evaluate the function ---
	   1892 c
	   1893 
	   1894        y =(a(1)*exp(-(x-2*x**0.5*a(2)**0.5+a(2))/2/a(3))/(a(3)**0.5*2.5066283)) 
	   1895      +     *x   ! delta(E/Q) prop to E/Q
	   1896 c
	   1897 c    
	   1898 c      ---first Gaussian function derivatives---
	   1899 c
	   1900        dyda(1) = x*exp(-(x-2*x**0.5*a(2)**0.5+a(2))/2/a(3))/
	   1901      2           (a(3)**0.5*2.5066283)
	   1902        dyda(2) = ( ((x/a(2))**0.5-1)/(2*a(3)) )*
	   1903      2           ( x*a(1)*exp(-(x-2*x**0.5*a(2)**0.5+a(2))/(2*a(3))) ) /
	   1904      2           (a(3)**0.5*2.5066283)
	   1905        dyda(3) = -( x*a(1)*exp(-(x-2*x**0.5*a(2)**0.5+a(2))/(2*a(3))) ) /
	   1906      2           (a(3)**1.5*2*2.5066283) + 
	   1907      3            ( x*a(1)*exp(-(x-2*x**0.5*a(2)**0.5+a(2))/(2*a(3))) ) /
	   1908      4           (a(3)**0.5*2.5066283) *
	   1909      5           ( (x-2*a(2)**0.5*x**0.5+a(2))/(2*a(3)**2) )
	   1910 c
	   1911 c    
	   1912 c      ---second Gaussian function derivatives---
	   1913 c
	   1914 c       dyda(4) = x*exp(-(x-2*x**0.5*a(5)**0.5+a(5))/2/a(6))/
	   1915 c     2           (a(6)**0.5*2.5066283)*x
	   1916 c       dyda(5) = ( ((x/a(5))**0.5-1)/(2*a(6)) )*
	   1917 c     2           ( x*a(4)*exp(-(x-2*x**0.5*a(5)**0.5+a(5))/(2*a(6))) ) /
	   1918 c     2           (a(6)**0.5*2.5066283)*x
	   1919 c       dyda(6) = -( x*a(4)*exp(-(x-2*x**0.5*a(5)**0.5+a(5))/(2*a(6))) ) /
	   1920 c     2           (a(6)**1.5*2*2.5066283) + 
	   1921 c     3            ( x*a(4)*exp(-(x-2*x**0.5*a(5)**0.5+a(5))/(2*a(6))) ) /

FUNCS                                                            1-APR-1997 12:55:25    DEC Fortran V6.2-508                Page  26
                                Symbol Table                    20-DEC-1996 02:32:52    [WIND.SOFTWARE.STICS]SMS_MASS_SPEED.FOR;24

	   1922 c     4           (a(6)**0.5*2.5066283) *
	   1923 c     5           ( (x-2*a(5)**0.5*x**0.5+a(5))/(2*a(6)**2) )*x
	   1924 c
	   1925         return
	   1926         end


PROGRAM SECTIONS

    Name				 Bytes   Attributes

  1 $BSS$                                63904 NOPIC CON REL LCL NOSHR NOEXE   RD   WRT *32
  2 $IODATA$                               328 NOPIC CON REL LCL NOSHR NOEXE   RD   WRT OCTA
  3 $CODE$                                5552   PIC CON REL LCL   SHR   EXE NORD NOWRT OCTA
  4 $LINK$                                 642 NOPIC CON REL LCL NOSHR NOEXE   RD NOWRT OCTA
  5 L1_HEADERS                             644 NOPIC OVR REL GBL NOSHR NOEXE   RD   WRT OCTA

    Total Space Allocated                71070


ENTRY POINTS

    Address   Type  Name 
                         
  3-00001220        FUNCS


VARIABLES

    Address   Type  Name           Address   Type  Name           Address   Type  Name           Address   Type  Name      
                                                                                                                           
      **      R*4   FWHM         1-00000000  I*4   J                **      R*4   MAX_CNT          **      R*4   X         
      **      R*4   HE_MAX_CNT   1-00000004  I*4   K                **      R*4   MAX_LOC          **      R*4   Y         
REG-00000001  I*4   I            1-00000008  I*4   L                **      I*4   NA                                       


ARRAYS

     Address  Type  Name        Bytes  Dimensions

      **      R*4   A              24  (6)
      **      R*4   DYDA           24  (6)


FUNCS                                                            1-APR-1997 12:55:25    DEC Fortran V6.2-508                Page  27
                                Symbol Table                    20-DEC-1996 02:32:52    [WIND.SOFTWARE.STICS]SMS_MASS_SPEED.FOR;24



  +---------------------------------------------------+
  |               KEY TO ADDRESS CODE FORMATS         |
  |   ppp-oooooooo  - In Psect ppp, Offset oooooooo   |
  |   ***-********  - External                        |
  |               # - Suffix: Also In Registers       |
  |   REG-rrrrrrrr  - In Register rrrrrrrr            |
  |   REG-########  - In Various Registers            |
  |        **       - Not Used; Not Allocated         |
  +---------------------------------------------------+


COMMAND QUALIFIERS

  /ALIGNMENT=(COMMONS=(PACKED,NOMULTILANGUAGE),RECORDS=PACKED)
  /ASSUME=(ACCURACY_SENSITIVE,BACKSLASH,NODUMMY_ALIASES,NOUNDERSCORE)
  /CHECK=(ASSERTIONS,BOUNDS,FORMAT,FP_EXCEPTIONS,OVERFLOW,NOUNDERFLOW)
  /DEBUG=(NOSYMBOLS,TRACEBACK)
  /DESIGN=(NOCOMMENTS)
  /SHOW=(DICTIONARY,INCLUDE,MAP,PREPROCESSOR)
  /STANDARD=(NOSEMANTIC,NOSOURCE_FORM,NOSYNTAX)
  /WARNINGS=(NOALIGNMENT,NOARGUMENT_CHECKING,NODECLARATIONS,GENERAL,NOTRUNCATED_SOURCE,UNCALLED,
             UNINITIALIZED,UNREACHABLE,UNUSED)
  /NOAUTOMATIC  /BLAS=NOMAPPED  /CONVERT=NATIVE  /NOCROSS_REFERENCE  /NOD_LINES  /ERROR_LIMIT=30  /EXTEND_SOURCE
  /NOPAD_SOURCE  /NOF77  /FLOAT=G_FLOAT  /IEEE_MODE=FAST  /ROUNDING_MODE=NEAREST
  /GRANULARITY=QUADWORD  /INSTRUCTION_SET=FLOATING  /INTEGER_SIZE=32  /NOMACHINE_CODE
  /MATH_LIBRARY=ACCURATE  /NAMES=UPPERCASE  /OPTIMIZE=(LEVEL=4,UNROLL=0)  /REAL_SIZE=32  /NORECURSIVE
  /NOSEPARATE_COMPILATION  /NOSYNCHRONOUS_EXCEPTIONS  /NOSYNTAX_ONLY  /TERMINAL=NOSTATISTICS  /NOTIE  /VMS
  /NOANALYSIS_DATA
  /NODIAGNOSTICS
  /INCLUDE=(.FOR,.f,FORT$INCLUDE:.FOR,FORT$INCLUDE:.f)
  /LIST=SMS1:[WIND.SOFTWARE.STICS]SMS_MASS_SPEED.LIS;30
  /OBJECT=SMS1:[WIND.SOFTWARE.STICS]SMS_MASS_SPEED.OBJ;20
  /NOLIBRARY
   sys$lib=SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1

COMPILER: DEC Fortran V6.2-508-274F

COMPILATION STATISTICS

  CPU time:          2.87 seconds
  Elapsed time:      4.94 seconds
  Pagefaults:         474
  I/O Count:           56
