GAUSSJ                                                           1-APR-1997 12:55:41    DEC Fortran V6.2-508                Page   1
                                                                11-NOV-1996 15:46:36    SMS1:[WIND.SOFTWARE.STICS]GAUSSJ_SW.FOR;20

	      1       SUBROUTINE GAUSSJ(A,N,NP,B,M,MP,sm_flag)
	      2 c     m.r.c. modified 15 Dec 1994 to set sm_flag true if sigular matrix
	      3 c     changed a(icol,icol) sing matrix condition to .eq. 0
	      4       PARAMETER (NMAX=50)
	      5       DIMENSION A(NP,NP),B(NP,MP),IPIV(NMAX),INDXR(NMAX),INDXC(NMAX)
	      6       logical sm_flag   ! .true. indicates a singular matirx error
	      7       sm_flag = .false.
	      8       DO 11 J=1,N
	      9         IPIV(J)=0
	     10 11    CONTINUE
	     11       DO 22 I=1,N
	     12         BIG=0.
	     13         DO 13 J=1,N
	     14           IF(IPIV(J).NE.1)THEN
	     15             DO 12 K=1,N
	     16               IF (IPIV(K).EQ.0) THEN
	     17                 IF (ABS(A(J,K)).GE.BIG)THEN
	     18                   BIG=ABS(A(J,K))
	     19                   IROW=J
	     20                   ICOL=K
	     21                 ENDIF
	     22               ELSE IF (IPIV(K).GT.1) THEN
	     23 c               type *,'Singular matrix'
	     24                 sm_flag = .true.
	     25                 return
	     26               ENDIF
	     27 12          CONTINUE
	     28           ENDIF
	     29 13      CONTINUE
	     30         IPIV(ICOL)=IPIV(ICOL)+1
	     31         IF (IROW.NE.ICOL) THEN
	     32           DO 14 L=1,N
	     33             DUM=A(IROW,L)
	     34             A(IROW,L)=A(ICOL,L)
	     35             A(ICOL,L)=DUM
	     36 14        CONTINUE
	     37           DO 15 L=1,M
	     38             DUM=B(IROW,L)
	     39             B(IROW,L)=B(ICOL,L)
	     40             B(ICOL,L)=DUM
	     41 15        CONTINUE
	     42         ENDIF
	     43         INDXR(I)=IROW
	     44         INDXC(I)=ICOL
	     45         IF (abs(A(ICOL,ICOL)) .lt. 5.9e-39) then   ! will effect overflow error
	     46 c         type *,'Singular matrix.'
	     47           sm_flag = .true.
	     48           return
	     49         endif
	     50         PIVINV=1./A(ICOL,ICOL)
	     51         A(ICOL,ICOL)=1.
	     52         DO 16 L=1,N
	     53           A(ICOL,L)=A(ICOL,L)*PIVINV
	     54 16      CONTINUE
	     55         DO 17 L=1,M
	     56           B(ICOL,L)=B(ICOL,L)*PIVINV
	     57 17      CONTINUE

GAUSSJ                                                           1-APR-1997 12:55:41    DEC Fortran V6.2-508                Page   2
                                                                11-NOV-1996 15:46:36    SMS1:[WIND.SOFTWARE.STICS]GAUSSJ_SW.FOR;20

	     58         DO 21 LL=1,N
	     59           IF(LL.NE.ICOL)THEN
	     60             DUM=A(LL,ICOL)
	     61             A(LL,ICOL)=0.
	     62             DO 18 L=1,N
	     63               A(LL,L)=A(LL,L)-A(ICOL,L)*DUM
	     64 18          CONTINUE
	     65             DO 19 L=1,M
	     66               B(LL,L)=B(LL,L)-B(ICOL,L)*DUM
	     67 19          CONTINUE
	     68           ENDIF
	     69 21      CONTINUE
	     70 22    CONTINUE
	     71       DO 24 L=N,1,-1
	     72         IF(INDXR(L).NE.INDXC(L))THEN
	     73           DO 23 K=1,N
	     74             DUM=A(K,INDXR(L))
	     75             A(K,INDXR(L))=A(K,INDXC(L))
	     76             A(K,INDXC(L))=DUM
	     77 23        CONTINUE
	     78         ENDIF
	     79 24    CONTINUE
	     80       RETURN
	     81       END


PROGRAM SECTIONS

    Name				 Bytes   Attributes

  1 $BSS$                                  608 NOPIC CON REL LCL NOSHR NOEXE   RD   WRT OCTA
  2 $CODE$                                3796   PIC CON REL LCL   SHR   EXE NORD NOWRT OCTA
  3 $LINK$                                  48 NOPIC CON REL LCL NOSHR NOEXE   RD NOWRT OCTA

    Total Space Allocated                 4452


ENTRY POINTS

    Address   Type  Name  
                          
  2-00000000        GAUSSJ


VARIABLES

    Address   Type  Name        Address   Type  Name        Address   Type  Name        Address   Type  Name   
                                                                                                               
REG-00000020  R*4   BIG       1-00000000  I*4   IROW    REG-00000007  I*4   LL            **      I*4   NP     
REG-########  R*4   DUM     REG-########  I*4   J             **      I*4   M       REG-0000002A  R*4   PIVINV 
REG-00000002  I*4   I       REG-########  I*4   K             **      I*4   MP            **      L*4   SM_FLAG
  1-00000004# I*4   ICOL    REG-########  I*4   L             **      I*4   N                                  



GAUSSJ                                                           1-APR-1997 12:55:41    DEC Fortran V6.2-508                Page   3
                                Symbol Table                    11-NOV-1996 15:46:36    SMS1:[WIND.SOFTWARE.STICS]GAUSSJ_SW.FOR;20

ARRAYS

     Address  Type  Name         Bytes  Dimensions

      **      R*4   A               **  (*, *)
      **      R*4   B               **  (*, *)
  1-00000198  I*4   INDXC          200  (50)
  1-000000D0  I*4   INDXR          200  (50)
  1-00000008  I*4   IPIV           200  (50)



LABELS

    Address   Label     Address   Label     Address   Label     Address   Label     Address   Label
                                                                                                   
  2-00000000   11     2-00000000   14     2-00000000   17     2-00000B00   21     2-00000BD8   24  
  2-00000230   12     2-00000000   15     2-00000000   18     2-00000B0C   22                      
  2-0000023C   13     2-00000000   16     2-00000000   19     2-00000000   23                      

GAUSSJ                                                           1-APR-1997 12:55:41    DEC Fortran V6.2-508                Page   4
                                Symbol Table                    11-NOV-1996 15:46:36    SMS1:[WIND.SOFTWARE.STICS]GAUSSJ_SW.FOR;20



  +---------------------------------------------------+
  |               KEY TO ADDRESS CODE FORMATS         |
  |   ppp-oooooooo  - In Psect ppp, Offset oooooooo   |
  |   ***-********  - External                        |
  |               # - Suffix: Also In Registers       |
  |   REG-rrrrrrrr  - In Register rrrrrrrr            |
  |   REG-########  - In Various Registers            |
  |        **       - Not Used; Not Allocated         |
  +---------------------------------------------------+


COMMAND QUALIFIERS

  /ALIGNMENT=(COMMONS=(PACKED,NOMULTILANGUAGE),RECORDS=NATURAL)
  /ASSUME=(ACCURACY_SENSITIVE,BACKSLASH,NODUMMY_ALIASES,NOUNDERSCORE)
  /CHECK=(NOASSERTIONS,BOUNDS,FORMAT,NOFP_EXCEPTIONS,NOOVERFLOW,NOUNDERFLOW)
  /DEBUG=(NOSYMBOLS,TRACEBACK)
  /DESIGN=(NOCOMMENTS)
  /SHOW=(NODICTIONARY,NOINCLUDE,MAP,NOPREPROCESSOR)
  /STANDARD=(NOSEMANTIC,NOSOURCE_FORM,NOSYNTAX)
  /WARNINGS=(ALIGNMENT,NOARGUMENT_CHECKING,NODECLARATIONS,GENERAL,NOTRUNCATED_SOURCE,UNCALLED,
             UNINITIALIZED,UNREACHABLE,UNUSED)
  /NOAUTOMATIC  /BLAS=NOMAPPED  /CONVERT=NATIVE  /NOCROSS_REFERENCE  /NOD_LINES  /ERROR_LIMIT=30  /EXTEND_SOURCE
  /NOPAD_SOURCE  /NOF77  /FLOAT=G_FLOAT  /IEEE_MODE=FAST  /ROUNDING_MODE=NEAREST
  /GRANULARITY=QUADWORD  /INSTRUCTION_SET=FLOATING  /INTEGER_SIZE=32  /NOMACHINE_CODE
  /MATH_LIBRARY=ACCURATE  /NAMES=UPPERCASE  /OPTIMIZE=(LEVEL=4,UNROLL=0)  /REAL_SIZE=32  /NORECURSIVE
  /NOSEPARATE_COMPILATION  /NOSYNCHRONOUS_EXCEPTIONS  /NOSYNTAX_ONLY  /TERMINAL=NOSTATISTICS  /NOTIE  /VMS
  /NOANALYSIS_DATA
  /NODIAGNOSTICS
  /INCLUDE=(.FOR,.f,FORT$INCLUDE:.FOR,FORT$INCLUDE:.f)
  /LIST=SMS1:[WIND.SOFTWARE.STICS]GAUSSJ_SW.LIS;4
  /OBJECT=SMS1:[WIND.SOFTWARE.STICS]GAUSSJ_SW.OBJ;4
  /NOLIBRARY
   sys$lib=SYS$COMMON:[SYSLIB]FORSYSDEF.TLB;1

COMPILER: DEC Fortran V6.2-508-274F

COMPILATION STATISTICS

  CPU time:          1.69 seconds
  Elapsed time:      3.22 seconds
  Pagefaults:         320
  I/O Count:           10
